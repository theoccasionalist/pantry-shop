{"version":3,"sources":["webpack:///auth.config.ts","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/base-product/base-product.component.ts","webpack:///src/app/components/callback/callback.component.ts","webpack:///src/app/components/callback/callback.component.html","webpack:///src/app/components/cart/cart.component.ts","webpack:///src/app/components/cart/cart.component.html","webpack:///src/app/components/family/family.component.ts","webpack:///src/app/components/family/family.component.html","webpack:///src/app/components/intro-modal/intro-modal.component.ts","webpack:///src/app/components/intro-modal/intro-modal.component.html","webpack:///src/app/components/limited-product/limited-product.component.ts","webpack:///src/app/components/limited-product/limited-product.component.html","webpack:///src/app/components/limited-type/limited-type.component.ts","webpack:///src/app/components/limited-type/limited-type.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/questions-modal/questions-modal.component.ts","webpack:///src/app/components/questions-modal/questions-modal.component.html","webpack:///src/app/components/shop/shop.component.ts","webpack:///src/app/components/shop/shop.component.html","webpack:///src/app/components/sub-type-product/sub-type-product.component.ts","webpack:///src/app/components/sub-type-product/sub-type-product.component.html","webpack:///src/app/components/submit-modal/submit-modal.component.ts","webpack:///src/app/components/submit-modal/submit-modal.component.html","webpack:///src/app/components/type-limited-product/type-limited-product.component.ts","webpack:///src/app/components/type-limited-product/type-limited-product.component.html","webpack:///src/app/components/type/type.component.ts","webpack:///src/app/components/type/type.component.html","webpack:///src/app/components/update-modal/update-modal.component.ts","webpack:///src/app/components/update-modal/update-modal.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/guards/family.guard.ts","webpack:///src/app/guards/no-family.guard.ts","webpack:///src/app/models/family.model.ts","webpack:///src/app/models/order.model.ts","webpack:///src/app/models/product.model.ts","webpack:///src/app/models/type-product.model.ts","webpack:///src/app/models/type.model.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/cart.service.ts","webpack:///src/app/services/family.service.ts","webpack:///src/app/services/interceptor.service.ts","webpack:///src/app/services/pick-up-date.service.ts","webpack:///src/app/services/point.service.ts","webpack:///src/app/services/shop.service.ts","webpack:///src/app/services/type-tracker.service.ts","webpack:///src/app/uri.config.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["domain","client_id","redirect_uri","window","location","origin","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","provide","useClass","multi","forRoot","imports","providers","AppComponent","authService","title","localAuthSetup","selector","templateUrl","styleUrls","AppModule","declarations","entryComponents","bootstrap","BaseProductComponent","cartService","subscription","getProductInCart","amount","updateCart","cart","isTypeInCart","getTypeInCart","products","push","productId","product","_id","productName","typeId","type","typeName","inCart","isProductInCart","find","cartItemByType","filter","length","CallbackComponent","handleAuthCallback","CartComponent","dialog","familyService","httpClient","pickUpDateService","pointService","router","snackBar","typeTrackerService","cartPanelOpenState","cartTypes","columns","contactPanelOpenState","householdPanelOpenState","MODAL_WIDTH","orderReceived","pickUpPanelOpenState","submitErrorCount","uri","add","getLogOutClicked","getFamily","getCart","getPickUpDate","subscribe","logOutClicked","family","pickUpDate","sortCart","unsubscribe","resetCart","resetFamily","resetPickUpDate","setMaxPoints","updatePoints","resetTypeTrackers","order","received","sort","before","after","trim","toLowerCase","forEach","navigate","post","createOrder","response","status","dialogWidth","referral","open","backdropClass","width","disableClose","data","clearSession","duration","panelClass","modal","$event","returnValue","onBackToShopClick","openUpdateContactModal","openUpdateHouseholdModal","openUpdatePickUpModal","onSubmitOrder","FamilyComponent","contactForm","firstName","required","lastName","zipCode","pattern","phoneNumber","emailAddress","email","familyPanelCloseState","isCompleted","householdForm","familySize","schoolChildren","infants","pickUpForm","typeTrackers","requiredError","getPointsMapping","pointsMapping","mapping","minSize","maxSize","points","get","value","updatePickUpDate","controls","reset","pickUpDateOptions","getPickUpDateOptions","valid","setContactInfo","setHouseholdInfo","setPickUpInfo","updateFamily","initPoints","useValue","displayDefaultIndicatorType","setPickUpDateOptions","onShopClick","IntroModalComponent","dialogRef","close","onCloseClick","LimitedProductComponent","setLimit","setPoints","getCurrentPoints","currentPoints","updateInCartAndBtn","addOneToCart","addProductToCart","removePoints","prodSizeAmount","getAmountInCart","limit","subtractOneFromCart","removeProductFromCart","addPoints","familyValue","school","minFamSize","maxFamSize","maxAmount","amountInCart","addBtnDisabled","isProductUnderLimit","hasEnoughPoints","subtractOneProduct","addOneProduct","LimitedTypeComponent","setProducts","sortProductsByName","setInfant","setSchool","setHasPoints","setTypeLimit","addTypeTracker","getTypeTrackers","allPointsUsed","typeTracker","typeAmountInCart","atTypeLimit","atTypeMaxAmount","schoolType","typeSizeAmount","typeLimit","LoginComponent","openIntroModal","NavbarComponent","activatedRoute","routesButtonMap","Map","url","currentPath","setButtonContent","logout","buttonContent","route","openQuestionsModal","QuestionsModalComponent","ShopComponent","shopService","allSubTypes","limitedTypes","nonLimitedTypes","types","getShop","setTypes","sortTypesByName","superTypeId","onReviewOrderClick","SubTypeProductComponent","panelOpenState","typename","updateTypeInCartAndBtn","subtractOneTypeLimitProduct","addOneTypeLimitProduct","SubmitModalComponent","TypeLimitedProductComponent","isAtTypeLimit","updateTypeTrackers","TypeComponent","loading","hasPoints","some","infantsIncluded","infantType","infant","schoolIncluded","setProductsForFamilySize","subType","subTypeProduct","UpdateModalComponent","setContactModal","setHouseHoldModal","setPickUpModal","setValue","AuthGuard","next","state","isAuthenticated","pipe","loggedIn","login","providedIn","FamilyGuard","hasFamilyCheck","parseUrl","familyValues","Object","values","nullValues","NoFamilyGuard","hasNoFamilyCheck","Family","Order","Product","TypeProduct","Type","AuthService","logOutClick","logOutClickSource","currentLogOutClick","asObservable","auth0Client","err","client","res","handleRedirectCallback","options","getTokenSilently","checkAuth","redirectPath","loginWithRedirect","appState","target","targetRoute","authComplete","cbRes","returnTo","CartService","cartSource","currentCart","defaultCart","FamilyService","familySource","currentFamily","defaultFamily","InterceptorService","getTokenSilently$","token","tokenReq","clone","setHeaders","Authorization","handle","PickUpDateService","daysOfTheWeek","now","Date","pickUpDateSource","currentPickUpDate","date","weekDay","getDay","day","getDate","month","getMonth","year","getFullYear","secondThursday","findNthWeekdayOfMonth","secondSaturday","orderAndPush","thirdWednesday","weekday","n","nextMonth","firstOfTheMonth","setDate","firstDay","secondDay","formatDate","defaultPickUpDate","PointService","maxPoints","pointSource","result","ShopService","shop","TypeTrackerService","typeTrackerSource","currentTypeTrackers","typeIdToAdd","componentTracker","index","findIndex","environment","production","bootstrapModule","catch","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["export default {\r\n    domain: 'young-cell-9742.auth0.com',\r\n    client_id: 'baw80wc6kObTX8PwZQTfcqaExteejyaS',\r\n    redirect_uri: `${window.location.origin}/callback`\r\n};\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CartComponent } from './components/cart/cart.component';\r\nimport { ShopComponent } from './components/shop/shop.component';\r\nimport { FamilyComponent } from './components/family/family.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { FamilyGuard } from './guards/family.guard';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { NoFamilyGuard } from './guards/no-family.guard';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { InterceptorService } from './services/interceptor.service';\r\n\r\nconst routes: Routes = [\r\n  {path: 'callback', component: CallbackComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'family', component: FamilyComponent, canActivate: [AuthGuard, NoFamilyGuard]},\r\n  {path: 'shop', component: ShopComponent, canActivate: [AuthGuard, FamilyGuard]},\r\n  {path: 'order', component: CartComponent, canActivate: [AuthGuard, FamilyGuard]},\r\n  {path: '', redirectTo: 'login', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: InterceptorService,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'Modern Pantry';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.localAuthSetup();\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ScrollingModule, ViewportRuler} from '@angular/cdk/scrolling';\r\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatNativeDateModule, MatOptionModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { ClickOutsideModule } from 'ng-click-outside';\r\nimport { CartComponent } from './components/cart/cart.component';\r\nimport { ShopComponent } from './components/shop/shop.component';\r\nimport { FamilyComponent } from './components/family/family.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SubmitModalComponent } from './components/submit-modal/submit-modal.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { QuestionsModalComponent } from './components/questions-modal/questions-modal.component';\r\nimport { UpdateModalComponent } from './components/update-modal/update-modal.component';\r\nimport { IntroModalComponent } from './components/intro-modal/intro-modal.component';\r\nimport { TypeComponent } from './components/type/type.component';\r\nimport { LimitedTypeComponent } from './components/limited-type/limited-type.component';\r\nimport { BaseProductComponent } from './components/base-product/base-product.component';\r\nimport { LimitedProductComponent } from './components/limited-product/limited-product.component';\r\nimport { TypeLimitedProductComponent } from './components/type-limited-product/type-limited-product.component';\r\nimport { SubTypeProductComponent } from './components/sub-type-product/sub-type-product.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CartComponent,\r\n    ShopComponent,\r\n    FamilyComponent,\r\n    LoginComponent,\r\n    SubmitModalComponent,\r\n    NavbarComponent,\r\n    CallbackComponent,\r\n    QuestionsModalComponent,\r\n    UpdateModalComponent,\r\n    IntroModalComponent,\r\n    TypeComponent,\r\n    LimitedTypeComponent,\r\n    BaseProductComponent,\r\n    LimitedProductComponent,\r\n    TypeLimitedProductComponent,\r\n    SubTypeProductComponent,\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    ClickOutsideModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatBadgeModule,\r\n    MatCardModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatOptionModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSnackBarModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    ReactiveFormsModule,\r\n    ScrollingModule\r\n  ],\r\n  entryComponents: [\r\n    IntroModalComponent,\r\n    SubmitModalComponent,\r\n    QuestionsModalComponent,\r\n    UpdateModalComponent\r\n  ],\r\n  providers: [ViewportRuler],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CartItemsByType } from 'src/app/models/cart-items-by-type.model';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { Family } from 'src/app/models/family.model';\r\nimport { TypeProduct } from 'src/app/models/type-product.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-base-product',\r\n  templateUrl: './base-product.component.html',\r\n  styleUrls: ['./base-product.component.css']\r\n})\r\nexport class BaseProductComponent implements OnInit {\r\n  amountInCart: number;\r\n  @Input() cart: CartItemsByType[];\r\n  inCart: boolean;\r\n  @Input() family: Family;\r\n  @Input() product: TypeProduct;\r\n  subscription = new Subscription();\r\n  @Input() type: Type;\r\n\r\n  constructor(protected cartService: CartService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  addOneToCart() {\r\n    this.getProductInCart().amount++;\r\n    this.cartService.updateCart(this.cart);\r\n  }\r\n\r\n  addProductToCart() {\r\n    if (this.isTypeInCart()) {\r\n      this.getTypeInCart().products.push(\r\n        {productId: this.product._id, productName: this.product.productName, amount: 1}\r\n        );\r\n    } else {\r\n      this.cart.push({typeId: this.type._id, typeName: this.type.typeName,\r\n        products: [{productId: this.product._id, productName: this.product.productName, amount: 1}]});\r\n    }\r\n    this.cartService.updateCart(this.cart);\r\n    this.inCart = this.isProductInCart();\r\n  }\r\n\r\n  getAmountInCart() {\r\n    if (this.isProductInCart()) {\r\n      return this.getProductInCart().amount;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  getProductInCart() {\r\n      return this.getTypeInCart().products.find(product => product.productId === this.product._id);\r\n  }\r\n\r\n  getTypeInCart() {\r\n    return this.cart.find((cartItemByType: CartItemsByType) => cartItemByType.typeId === this.type._id);\r\n  }\r\n\r\n  isProductInCart() {\r\n    if (this.isTypeInCart()) {\r\n      return this.getProductInCart() ? true : false;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  isTypeInCart() {\r\n    return this.getTypeInCart() ? true : false;\r\n  }\r\n\r\n  removeProductFromCart() {\r\n    this.getTypeInCart().products = this.getTypeInCart().products.filter(product => product.productId  !== this.product._id);\r\n    if (!this.getTypeInCart().products.length) {\r\n      this.cart = this.cart.filter((cartItemByType: CartItemsByType) => cartItemByType.typeId !== this.type._id);\r\n    }\r\n    this.inCart = this.isProductInCart();\r\n    this.cartService.updateCart(this.cart);\r\n  }\r\n\r\n  subtractOneFromCart() {\r\n    this.getProductInCart().amount--;\r\n    this.cartService.updateCart(this.cart);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.css']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.handleAuthCallback();\r\n  }\r\n}\r\n","<mat-spinner></mat-spinner>\r\n","import { Component, OnInit, HostListener, OnDestroy } from '@angular/core';\r\nimport { CartService } from '../../services/cart.service';\r\nimport { Family } from '../../models/family.model';\r\nimport { FamilyService } from '../../services/family.service';\r\nimport { Router } from '@angular/router';\r\nimport { Order } from 'src/app/models/order.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CartItemsByType } from 'src/app/models/cart-items-by-type.model';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { UpdateModalComponent } from '../update-modal/update-modal.component';\r\nimport { PickUpDateService } from 'src/app/services/pick-up-date.service';\r\nimport { SubmitModalComponent } from '../submit-modal/submit-modal.component';\r\nimport { TypeTrackerService } from 'src/app/services/type-tracker.service';\r\nimport { PointService } from 'src/app/services/point.service';\r\nimport { Subscription, combineLatest } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport PROD from 'src/app/uri.config';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent implements OnInit, OnDestroy {\r\n  cart: CartItemsByType[];\r\n  cartPanelOpenState = false;\r\n  cartTypes: any[] = [];\r\n  columns: string[] = ['column1', 'column2'];\r\n  contactPanelOpenState = false;\r\n  family: Family;\r\n  householdPanelOpenState = false;\r\n  logOutClicked: boolean;\r\n  MODAL_WIDTH = '35rem';\r\n  orderReceived = false;\r\n  pickUpDate: string;\r\n  pickUpPanelOpenState = false;\r\n  submitErrorCount = 0;\r\n  subscription = new Subscription();\r\n  uri = 'http://localhost:4000';\r\n\r\n  constructor(private authService: AuthService, private cartService: CartService, private dialog: MatDialog,\r\n              private familyService: FamilyService, private httpClient: HttpClient, private pickUpDateService: PickUpDateService,\r\n              private pointService: PointService, private router: Router, private snackBar: MatSnackBar,\r\n              private typeTrackerService: TypeTrackerService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n      this.authService.getLogOutClicked(),\r\n      this.familyService.getFamily(),\r\n      this.cartService.getCart(),\r\n      this.pickUpDateService.getPickUpDate()\r\n      ]).subscribe(([logOutClicked, family, cart, pickUpDate]) => {\r\n      this.logOutClicked = logOutClicked;\r\n      this.family = family;\r\n      this.cart = cart;\r\n      this.sortCart();\r\n      this.pickUpDate = pickUpDate;\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  private clearSession() {\r\n    this.cartService.resetCart();\r\n    this.familyService.resetFamily();\r\n    this.pickUpDateService.resetPickUpDate();\r\n    this.pointService.setMaxPoints(0);\r\n    this.pointService.updatePoints(0);\r\n    this.typeTrackerService.resetTypeTrackers();\r\n  }\r\n\r\n  private createOrder() {\r\n    const order = new Order();\r\n    order.family = this.family;\r\n    order.cart = this.cart;\r\n    order.pickUpDate = this.pickUpDate;\r\n    order.received = false;\r\n    return order;\r\n  }\r\n\r\n  private sortCart() {\r\n    this.cart.sort((before, after) => before.typeName.trim().toLowerCase() > after.typeName.trim().toLowerCase() ? 1 : -1);\r\n    this.cart.forEach(type => {\r\n      type.products.sort((before, after) => before.productName.trim().toLowerCase() > after.productName.trim().toLowerCase() ? 1 : -1);\r\n    });\r\n  }\r\n\r\n  onBackToShopClick() {\r\n    this.router.navigate([`/shop`]);\r\n  }\r\n\r\n  onSubmitOrder() {\r\n    this.httpClient.post(`${this.uri}/orders/add`, this.createOrder()).subscribe((response: any) => {\r\n      if (response.status === 200) {\r\n        this.orderReceived = true;\r\n        let dialogWidth;\r\n        this.family.referral ? dialogWidth = '37rem' : dialogWidth = '45rem';\r\n        this.dialog.open(SubmitModalComponent, {\r\n          backdropClass: 'darkest-back-drop',\r\n          width: dialogWidth,\r\n          disableClose: true,\r\n          data: {\r\n            family: this.family,\r\n            pickUpDate: this.pickUpDate,\r\n          }\r\n        });\r\n        this.clearSession();\r\n      } else {\r\n        if (this.submitErrorCount < 4) {\r\n          this.snackBar.open('Submission failed. Please try again', 'Dismiss', {\r\n            duration: 2000,\r\n            panelClass: ['red-snackbar']\r\n          });\r\n          this.submitErrorCount++;\r\n        } else {\r\n          this.snackBar.open('Terminal Error.', 'Dismiss', {\r\n            duration: 2000,\r\n            panelClass: ['red-snackbar']\r\n          });\r\n          this.router.navigate([`/`]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  openUpdateContactModal() {\r\n    this.dialog.open(UpdateModalComponent, {\r\n      backdropClass: 'darker-back-drop',\r\n      data: {\r\n        modal: 'contact',\r\n        family: this.family\r\n      },\r\n      disableClose: true,\r\n      width: this.MODAL_WIDTH\r\n    });\r\n  }\r\n\r\n  openUpdateHouseholdModal() {\r\n    this.dialog.open(UpdateModalComponent, {\r\n      backdropClass: 'darker-back-drop',\r\n      data: {\r\n        modal: 'household',\r\n        family: this.family\r\n      },\r\n      disableClose: true,\r\n      width: this.MODAL_WIDTH\r\n    });\r\n  }\r\n\r\n  openUpdatePickUpModal() {\r\n    this.dialog.open(UpdateModalComponent, {\r\n      backdropClass: 'darker-back-drop',\r\n      data: {\r\n        modal: 'pick-up',\r\n        family: this.family,\r\n        pickUpDate: this.pickUpDate\r\n      },\r\n      disableClose: true,\r\n      width: this.MODAL_WIDTH\r\n    });\r\n  }\r\n\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  unloadNotification($event: any) {\r\n    if (!this.orderReceived && !this.logOutClicked) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div id=\"flex-grid\">  \r\n  \r\n  <aside class=\"button-container\">\r\n    <mat-toolbar>Change Cart Items?</mat-toolbar>\r\n    <div class=\"button-div\">\r\n      <button mat-raised-button (click)=\"onBackToShopClick()\">Back to Shop</button>\r\n    </div>  \r\n  </aside>\r\n\r\n  <main id=\"overview\">\r\n\r\n    <mat-toolbar>Order Overview</mat-toolbar>\r\n    <cdk-virtual-scroll-viewport  [itemSize]=\"\">\r\n\r\n    <mat-expansion-panel (opened) =\"contactPanelOpenState = true\" (closed)=\"contactPanelOpenState = false\" [expanded]=\"contactPanelOpenState\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <div class=\"icon-title\">\r\n            <mat-icon class=\"icon\">person</mat-icon>\r\n            <div class=\"title\">Contact Information</div>\r\n          </div>\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          {{contactPanelOpenState ? 'close' : 'open'}}\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <div class=\"info-container\">\r\n        <mat-card >{{'First Name: ' + family.firstName}}</mat-card>\r\n        <mat-card >{{'Last Name: ' + family.lastName}}</mat-card>\r\n        <mat-card>{{'Zip Code: ' + family.zipCode}}</mat-card>\r\n        <mat-card>{{'Phone Number: ' + family.phoneNumber}}</mat-card>\r\n        <mat-card *ngIf=\"family.emailAddress\">{{'Email Address: ' + family.emailAddress}}</mat-card>\r\n        <div class=\"update-button-div\">\r\n          <button mat-raised-button (click)=\"openUpdateContactModal()\">Update Contact</button>\r\n        </div>\r\n      </div>\r\n    <mat-action-row (click)=\"contactPanelOpenState = false\"></mat-action-row>    \r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel (opened) =\"householdPanelOpenState = true\" (closed)=\"householdPanelOpenState = false\" [expanded]=\"householdPanelOpenState\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <div class=\"icon-title\">\r\n            <mat-icon class=\"icon\">house</mat-icon>\r\n            <div class=\"title\">Household Information</div>\r\n          </div>\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          {{householdPanelOpenState ? 'close' : 'open'}}\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <div class=\"info-container\">\r\n        <mat-card> {{'Family Size: ' + family.familySize}}</mat-card>\r\n        <mat-card *ngIf=\"family.schoolChildren !== 0\">{{'School Children: ' + family.schoolChildren}}</mat-card>\r\n        <mat-card *ngIf=\"family.infants\">Infants: Included</mat-card>\r\n        <div class=\"update-button-div\">\r\n          <button mat-raised-button (click)=\"openUpdateHouseholdModal()\">Update Household</button>  \r\n        </div>\r\n      </div>\r\n    <mat-action-row (click)=\"householdPanelOpenState = false\"></mat-action-row>  \r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel (opened) =\"pickUpPanelOpenState = true\" (closed)=\"pickUpPanelOpenState = false\" [expanded]=\"pickUpPanelOpenState\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <div class=\"icon-title\">\r\n            <mat-icon class=\"icon\">directions_car</mat-icon>\r\n            <div class=\"title\">Pick Up Information</div>\r\n          </div>\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          {{pickUpPanelOpenState ? 'close' : 'open'}}\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <div class=\"info-container\">\r\n        <mat-card>{{family.referral ? 'Pick Up Location: CELC' : 'Pick Up Location: Broad Street Food Pantry'}}</mat-card>\r\n        <mat-card>{{'Pick Up Date: ' + pickUpDate}}</mat-card>\r\n        <div class=\"update-button-div\">\r\n          <button mat-raised-button (click)=\"openUpdatePickUpModal()\">Update Pick Up</button>\r\n        </div>\r\n      </div>\r\n    <mat-action-row (click)=\"pickUpPanelOpenState = false\"></mat-action-row>  \r\n    </mat-expansion-panel>\r\n    \r\n    <mat-expansion-panel (opened) =\"cartPanelOpenState = true\" (closed)=\"cartPanelOpenState = false\" [expanded]=\"cartPanelOpenState\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        <div class=\"icon-title\">\r\n          <mat-icon>shopping_cart</mat-icon>\r\n          <div class=\"title\">Your Cart</div>\r\n        </div>\r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n        {{cartPanelOpenState ? 'close' : 'open'}}\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <mat-card id=\"empty-cart\" *ngIf=\"!cart.length\">\r\n        Your cart is empty!<br><br>\r\n        To place an order, please press the \"Back to Shop\" button and add items.\r\n    </mat-card>\r\n    <ng-container *ngIf=\"cart.length\">\r\n      <ng-container *ngFor=\"let type of cart\">\r\n          <mat-toolbar class=\"items-toolbar top-table\">{{type.typeName}}</mat-toolbar>\r\n          <table mat-table [dataSource]=\"type.products\">\r\n            <ng-container matColumnDef=\"column1\">\r\n              <th mat-header-cell *matHeaderCellDef>Name</th>\r\n              <td mat-cell *matCellDef=\"let element\">{{element.productName}}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"column2\">\r\n              <th mat-header-cell *matHeaderCellDef>Amount</th>\r\n              <td mat-cell *matCellDef=\"let element\">{{element.amount}}</td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: columns\"></tr>\r\n          </table>\r\n          <div class=\"items-toolbar bottom-table\"></div>\r\n      </ng-container>\r\n    </ng-container>\r\n    <mat-action-row (click)=\"cartPanelOpenState = false\"></mat-action-row>  \r\n    </mat-expansion-panel>\r\n    \r\n    </cdk-virtual-scroll-viewport>    \r\n  </main>\r\n    \r\n  <aside class=\"button-container\">\r\n    <mat-toolbar>Ready to Submit?</mat-toolbar>\r\n    <div class=\"button-div\">\r\n      <button mat-raised-button (click)=\"onSubmitOrder()\" [disabled]=\"!cart.length\">Submit Order</button>\r\n    </div>  \r\n  </aside>\r\n</div>  \r\n","import { Component, OnInit, HostListener, OnDestroy } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CartService } from '../../services/cart.service';\r\nimport { Family } from '../../models/family.model';\r\nimport { FamilyService } from '../../services/family.service';\r\nimport { PointService } from 'src/app/services/point.service';\r\nimport { TypeTrackerService } from 'src/app/services/type-tracker.service';\r\nimport { TypeTracker } from 'src/app/models/type-tracker.model';\r\nimport { PickUpDateService } from 'src/app/services/pick-up-date.service';\r\nimport { CartItemsByType } from 'src/app/models/cart-items-by-type.model';\r\nimport { Subscription, combineLatest } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport {STEPPER_GLOBAL_OPTIONS} from '@angular/cdk/stepper';\r\n\r\n@Component({\r\n  selector: 'app-family',\r\n  templateUrl: './family.component.html',\r\n  styleUrls: ['./family.component.css'],\r\n  providers: [{\r\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: {displayDefaultIndicatorType: false}\r\n  }]\r\n})\r\nexport class FamilyComponent implements OnInit, OnDestroy {\r\n  cart: CartItemsByType[];\r\n  contactForm = new FormGroup({\r\n    firstName: new FormControl('', Validators.required),\r\n    lastName: new FormControl('', Validators.required),\r\n    zipCode: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]{5}$/)]),\r\n    phoneNumber: new FormControl('', [Validators.required, Validators.pattern(/^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}$/)]),\r\n    emailAddress: new FormControl('', Validators.email),\r\n  });\r\n  family: Family;\r\n  familyPanelCloseState = true;\r\n  isCompleted = false;\r\n  householdForm = new FormGroup({\r\n    familySize: new FormControl('', Validators.required),\r\n    schoolChildren: new FormControl('', Validators.required),\r\n    infants: new FormControl('', Validators.required),\r\n  });\r\n  logOutClicked: boolean;\r\n  pickUpForm = new FormGroup({\r\n    referral: new FormControl('', Validators.required),\r\n    pickUpDate: new FormControl('', Validators.required)\r\n  });\r\n  pickUpDateOptions: string[];\r\n  pointsMapping: [{minSize: number, maxSize: number, points: number}];\r\n  typeTrackers: TypeTracker[] = [];\r\n  requiredError = 'This field is required.';\r\n  subscription = new Subscription();\r\n\r\n  constructor(protected authService: AuthService, protected cartService: CartService, protected familyService: FamilyService,\r\n              protected pickUpDateService: PickUpDateService, protected pointService: PointService, protected router: Router,\r\n              protected typeTrackerService: TypeTrackerService) {}\r\n\r\n  ngOnInit() {\r\n    this.familyService.resetFamily();\r\n    this.cartService.resetCart();\r\n    this.pickUpDateService.resetPickUpDate();\r\n    this.pointService.setMaxPoints(0);\r\n    this.pointService.updatePoints(0);\r\n    this.typeTrackerService.resetTypeTrackers();\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.authService.getLogOutClicked(),\r\n        this.familyService.getFamily(),\r\n        this.pointService.getPointsMapping()\r\n      ]).subscribe(([logOutClicked, family, pointsMapping]) => {\r\n        this.logOutClicked = logOutClicked;\r\n        this.family = family;\r\n        this.pointsMapping = pointsMapping;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  initPoints(familySize: number) {\r\n    this.pointsMapping.forEach(mapping => {\r\n      if (mapping.minSize <= familySize && familySize <= mapping.maxSize) {\r\n        this.pointService.setMaxPoints(mapping.points);\r\n        this.pointService.updatePoints(mapping.points);\r\n      }\r\n    });\r\n  }\r\n\r\n  setContactInfo() {\r\n    this.family.firstName = this.family.firstName = this.contactForm.get('firstName').value;\r\n    this.family.lastName = this.contactForm.get('lastName').value;\r\n    this.family.phoneNumber = this.contactForm.get('phoneNumber').value;\r\n    this.family.zipCode = this.contactForm.get('zipCode').value;\r\n    if (this.contactForm.get('emailAddress').value) {\r\n      this.family.emailAddress = this.contactForm.get('emailAddress').value;\r\n    }\r\n  }\r\n\r\n  setHouseholdInfo() {\r\n    this.family.familySize = this.householdForm.get('familySize').value;\r\n    this.family.schoolChildren = this.householdForm.get('schoolChildren').value;\r\n    this.family.infants = this.householdForm.get('infants').value;\r\n  }\r\n\r\n  setPickUpInfo() {\r\n    this.family.referral = this.pickUpForm.get('referral').value;\r\n    this.pickUpDateService.updatePickUpDate(this.pickUpForm.get('pickUpDate').value);\r\n  }\r\n\r\n  setPickUpDateOptions(referral: boolean) {\r\n    this.pickUpForm.controls.pickUpDate.reset();\r\n    this.pickUpDateOptions = this.pickUpDateService.getPickUpDateOptions(referral);\r\n  }\r\n\r\n  onShopClick() {\r\n    if (this.contactForm.valid && this.householdForm.valid && this.pickUpForm.valid) {\r\n      this.setContactInfo();\r\n      this.setHouseholdInfo();\r\n      this.setPickUpInfo();\r\n      this.familyService.updateFamily(this.family);\r\n      this.initPoints(this.family.familySize);\r\n      this.router.navigate([`/shop`]);\r\n    }\r\n  }\r\n\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  unloadNotification($event: any) {\r\n    if (!this.logOutClicked) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"flex-grid\">\r\n  <mat-card id=\"family-form\">\r\n    <mat-horizontal-stepper linear labelPosition=\"bottom\">\r\n      <mat-step [formGroup]=\"contactForm\" state=\"contact\" [completed]=\"contactForm.status === 'VALID'\">\r\n      <ng-template matStepLabel>Contact Information</ng-template>  \r\n        <div>  \r\n          <mat-form-field>\r\n            <mat-label>First Name</mat-label>\r\n            <input matInput formControlName=\"firstName\">\r\n            <mat-error *ngIf=\"contactForm.get('firstName').hasError('required')\">{{requiredError}}</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Last Name</mat-label>\r\n            <input matInput formControlName=\"lastName\">\r\n            <mat-error *ngIf=\"contactForm.get('lastName').hasError('required')\">{{requiredError}}</mat-error>\r\n          </mat-form-field>\r\n        </div>  \r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Zip Code</mat-label>\r\n            <input matInput formControlName=\"zipCode\" placeholder=\"Example: 78965\">\r\n            <mat-error *ngIf=\"contactForm.get('zipCode').hasError('pattern')\">Zipcode must be exactly five digits (example: 64359).</mat-error>\r\n            <mat-error *ngIf=\"contactForm.get('zipCode').hasError('required')\">{{requiredError}}</mat-error>\r\n          </mat-form-field>  \r\n        </div>\r\n        <div>\r\n          <mat-form-field> \r\n          <mat-label>Phone Number</mat-label>\r\n          <input matInput formControlName=\"phoneNumber\" placeholder=\"Example: 777-777-7777\">\r\n          <mat-error *ngIf=\"contactForm.get('phoneNumber').hasError('pattern')\">Phone number must be in the following format: 555-555-5555.</mat-error>\r\n          <mat-error *ngIf=\"contactForm.get('phoneNumber').hasError('required')\">{{requiredError}}</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <!-- <div>  \r\n          <mat-form-field>\r\n            <mat-label>Email Address (optional)</mat-label>\r\n            <input matInput formControlName=\"emailAddress\">\r\n            <mat-error *ngIf=\"contactForm.get('emailAddress').hasError('email')\">Email address must include the @ symbol.</mat-error>\r\n          </mat-form-field>\r\n        </div> -->\r\n        <div class=\"button-space\">\r\n          <div></div>\r\n          <button mat-raised-button matStepperNext [disabled]=\"!contactForm.valid\">Next</button>\r\n        </div>\r\n        </mat-step>\r\n        <mat-step [formGroup]=\"householdForm\" state=\"household\" [completed]=\"householdForm.status === 'VALID'\">  \r\n        <ng-template matStepLabel>Household Information</ng-template>    \r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Family Size</mat-label>\r\n            <mat-select matInput formControlName=\"familySize\">\r\n              <mat-option [value]=1>1</mat-option>\r\n              <mat-option [value]=2>2</mat-option>\r\n              <mat-option [value]=3>3</mat-option>\r\n              <mat-option [value]=4>4</mat-option>\r\n              <mat-option [value]=5>5</mat-option>\r\n              <mat-option [value]=6>6</mat-option>\r\n              <mat-option [value]=7>7</mat-option>\r\n              <mat-option [value]=8>8</mat-option>\r\n              <mat-option [value]=9>9+</mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"householdForm.get('familySize').hasError('required')\">{{requiredError}}</mat-error>  \r\n          </mat-form-field>\r\n        </div>\r\n        <div>  \r\n          <mat-form-field>\r\n            <mat-label>School Aged Children</mat-label>\r\n            <mat-select matInput formControlName=\"schoolChildren\">\r\n              <mat-option [value]=0>0</mat-option>\r\n              <mat-option [value]=1>1</mat-option>\r\n              <mat-option [value]=2>2</mat-option>\r\n              <mat-option [value]=3>3</mat-option>\r\n              <mat-option [value]=4>4</mat-option>\r\n              <mat-option [value]=5>5</mat-option>\r\n              <mat-option [value]=6>6+</mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"householdForm.get('schoolChildren').hasError('required')\">{{requiredError}}</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>  \r\n          <mat-form-field>\r\n            <mat-label>Any Infants in the Family?</mat-label>\r\n            <mat-select matInput formControlName=\"infants\">\r\n              <mat-option [value]=true>Yes</mat-option>\r\n              <mat-option [value]=false>No</mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"householdForm.get('infants').hasError('required')\">{{requiredError}}</mat-error>  \r\n          </mat-form-field>  \r\n        </div>\r\n        <div class=\"button-space\">\r\n          <button mat-raised-button matStepperPrevious>Back</button>\r\n          <button mat-raised-button matStepperNext [disabled]=\"!householdForm.valid\">Next</button>\r\n        </div>\r\n        </mat-step>\r\n        <mat-step [formGroup]=\"pickUpForm\" state=\"pick-up\" [completed]=\"pickUpForm.status === 'VALID'\">\r\n        <ng-template matStepLabel>Pick Up Options</ng-template>  \r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Were you referred by CELC?</mat-label>\r\n            <mat-select matInput formControlName=\"referral\" (selectionChange)=\"setPickUpDateOptions($event.value)\">\r\n              <mat-option [value]=true>Yes</mat-option>\r\n              <mat-option [value]=false>No</mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"pickUpForm.get('referral').hasError('required')\">{{requiredError}}</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Pick Up Dates:</mat-label>\r\n            <mat-select matInput formControlName=\"pickUpDate\">\r\n              <mat-option *ngFor=\"let pickUpDate of pickUpDateOptions\" [value]=\"pickUpDate\">{{pickUpDate}}</mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"pickUpForm.get('pickUpDate').hasError('required')\">This field is required.</mat-error>  \r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"button-space\">\r\n          <button mat-raised-button matStepperPrevious>Back</button>\r\n          <button mat-raised-button matStepperNext [disabled]=\"!pickUpForm.valid\" (click)=\"onShopClick()\">Shop!</button>\r\n        </div>\r\n      </mat-step>\r\n      <ng-template matStepperIcon=\"contact\">\r\n        <mat-icon>person</mat-icon>\r\n      </ng-template>\r\n      <ng-template matStepperIcon=\"household\">\r\n        <mat-icon>house</mat-icon>\r\n      </ng-template>\r\n      <ng-template matStepperIcon=\"pick-up\">\r\n        <mat-icon>directions_car</mat-icon>\r\n      </ng-template>\r\n    </mat-horizontal-stepper>\r\n  </mat-card>  \r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport {STEPPER_GLOBAL_OPTIONS} from '@angular/cdk/stepper';\r\n\r\n@Component({\r\n  selector: 'app-intro-modal',\r\n  templateUrl: './intro-modal.component.html',\r\n  styleUrls: ['./intro-modal.component.css'],\r\n  providers: [{\r\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: {displayDefaultIndicatorType: false}\r\n  }]\r\n})\r\nexport class IntroModalComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<IntroModalComponent>) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onCloseClick() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"questions\">  \r\n  <mat-toolbar>How It Works</mat-toolbar>\r\n  <mat-horizontal-stepper labelPosition=\"bottom\">\r\n      <mat-step label=\"Qualify\" state=\"qualification\" completed=\"false\">\r\n      <mat-card>[Qualifications Goes Here]</mat-card>\r\n      </mat-step>\r\n      <mat-step label=\"Order\" state=\"order\" completed=\"false\">\r\n      <mat-card>[Placing an Order Goes Here]</mat-card>\r\n      </mat-step>\r\n      <mat-step label=\"Pick Up\" state=\"pick-up\" completed=\"false\">\r\n      <mat-card>[Pick Up Goes Here]</mat-card>\r\n      </mat-step>\r\n      <ng-template matStepperIcon=\"contact\">\r\n      <mat-icon>person</mat-icon>\r\n      </ng-template>\r\n      <ng-template matStepperIcon=\"qualification\">\r\n      <mat-icon>thumb_up_alt</mat-icon>\r\n      </ng-template>\r\n      <ng-template matStepperIcon=\"order\">\r\n      <mat-icon>computer</mat-icon>\r\n      </ng-template>\r\n      <ng-template matStepperIcon=\"pick-up\">\r\n          <mat-icon>commute</mat-icon>\r\n      </ng-template>\r\n      <ng-template matStepperIcon=\"edit\">\r\n      <mat-icon>help</mat-icon>\r\n      </ng-template>\r\n  </mat-horizontal-stepper>\r\n  <div>\r\n    <button id=\"return\" mat-raised-button (click)=\"onCloseClick()\"cdkFocusInitial>Return to Log In</button>\r\n  </div>      \r\n</div>\r\n  ","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { BaseProductComponent } from '../base-product/base-product.component';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { PointService } from 'src/app/services/point.service';\r\n\r\n@Component({\r\n  selector: 'app-limited-product',\r\n  templateUrl: './limited-product.component.html',\r\n  styleUrls: ['./limited-product.component.css']\r\n})\r\nexport class LimitedProductComponent extends BaseProductComponent implements OnInit, OnDestroy {\r\n  addBtnDisabled: boolean;\r\n  currentPoints: number;\r\n  limit: number;\r\n  points: number;\r\n\r\n  constructor(protected cartService: CartService, protected pointService: PointService) {\r\n    super(cartService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setLimit();\r\n    this.setPoints();\r\n    this.inCart = this.isProductInCart();\r\n    this.subscription.add(\r\n      this.pointService.getCurrentPoints().subscribe(currentPoints => {\r\n      this.currentPoints = currentPoints;\r\n      this.updateInCartAndBtn();\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  addPoints() {\r\n    if (this.product.points) {\r\n      this.currentPoints = this.currentPoints + this.product.points;\r\n      this.pointService.updatePoints(this.currentPoints);\r\n    }\r\n  }\r\n\r\n  addOneProduct() {\r\n    this.isProductInCart() ? this.addOneToCart() : this.addProductToCart();\r\n    this.removePoints();\r\n    if (!this.product.points) {\r\n      this.updateInCartAndBtn();\r\n    }\r\n  }\r\n\r\n  hasEnoughPoints() {\r\n    if (this.product.points) {\r\n      return this.currentPoints >= this.product.points;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  isProductUnderLimit() {\r\n    if (this.product.prodSizeAmount) {\r\n      return this.getAmountInCart() < this.limit;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  subtractOneProduct() {\r\n    this.getAmountInCart() >  1 ? this.subtractOneFromCart() : this.removeProductFromCart();\r\n    this.addPoints();\r\n    if (!this.product.points) {\r\n      this.updateInCartAndBtn();\r\n    }\r\n  }\r\n\r\n  removePoints() {\r\n    if (this.product.points) {\r\n      this.currentPoints = this.currentPoints - this.product.points;\r\n      this.pointService.updatePoints(this.currentPoints);\r\n    }\r\n  }\r\n\r\n  setLimit() {\r\n    if (this.product.prodSizeAmount) {\r\n      let familyValue: number;\r\n      this.product.school ? familyValue = this.family.schoolChildren : familyValue = this.family.familySize;\r\n      this.product.prodSizeAmount.forEach(mapping => {\r\n          if (mapping.minFamSize <= familyValue && familyValue <= mapping.maxFamSize) {\r\n          this.limit = mapping.maxAmount;\r\n          }\r\n      });\r\n    }\r\n  }\r\n\r\n  setPoints() {\r\n    if (this.product.points) {\r\n      this.points = this.product.points;\r\n    }\r\n  }\r\n\r\n  updateInCartAndBtn() {\r\n    this.amountInCart = this.getAmountInCart();\r\n    this.addBtnDisabled = !this.isProductUnderLimit() || !this.hasEnoughPoints();\r\n  }\r\n}\r\n","<mat-card>\r\n    <div class=\"product-name\">{{product.productName}}</div>\r\n    <div class=icon-button-container>\r\n        <div>\r\n            <div class=\"info-container\">\r\n                <div class=\"icon-container\">\r\n                    <mat-icon class=\"icon-badge\" [matBadge]=\"limit\">add_box</mat-icon>\r\n                    <div>Limit</div>\r\n                </div>\r\n                <div *ngIf=\"points\" class=\"icon-container\">\r\n                    <mat-icon class=\"icon-badge\" [matBadge]=\"points\">attach_money</mat-icon>\r\n                    <div>Points</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div></div>\r\n        <div class=amount-button-container>\r\n            <div class=\"icon-container\">\r\n                <mat-icon class=\"badge-cart\" [matBadge]=\"amountInCart\">shopping_cart</mat-icon>\r\n                <div>Amount in Cart</div>\r\n            </div>\r\n            <span class=\"button-container\">\r\n                <button mat-raised-button (click)=\"subtractOneProduct()\" [disabled]=\"!inCart\">-</button>\r\n                <button mat-raised-button (click)=\"addOneProduct()\" [disabled]=\"addBtnDisabled\">+</button>\r\n            </span>\r\n        </div>\r\n    </div>     \r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { TypeComponent } from '../type/type.component';\r\nimport { TypeTracker } from 'src/app/models/type-tracker.model';\r\nimport { TypeTrackerService } from 'src/app/services/type-tracker.service';\r\nimport { PointService } from 'src/app/services/point.service';\r\nimport { combineLatest} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-limited-type',\r\n  templateUrl: './limited-type.component.html',\r\n  styleUrls: ['./limited-type.component.css']\r\n})\r\nexport class LimitedTypeComponent extends TypeComponent implements OnInit, OnDestroy {\r\n  atTypeLimit: boolean;\r\n  typeLimit: number;\r\n  typeAmountInCart: number;\r\n  typeTracker: TypeTracker;\r\n\r\n\r\n  constructor(protected pointService: PointService, private typeTrackerService: TypeTrackerService) {\r\n    super(pointService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setProducts();\r\n    this.sortProductsByName();\r\n    this.setInfant();\r\n    this.setSchool();\r\n    this.setHasPoints();\r\n    this.setTypeLimit();\r\n    this.typeTrackerService.addTypeTracker(this.type._id);\r\n    this.subscription.add(\r\n      combineLatest([\r\n      this.pointService.getCurrentPoints(),\r\n      this.typeTrackerService.getTypeTrackers()\r\n      ]).subscribe(([currentPoints, typeTrackers]) => {\r\n      this.currentPoints = currentPoints;\r\n      this.allPointsUsed = this.currentPoints <= 0;\r\n      this.typeTracker = typeTrackers.find((typeTracker: TypeTracker) => typeTracker.typeId === this.type._id);\r\n      this.typeAmountInCart = this.typeTracker.typeAmountInCart;\r\n      this.atTypeLimit = this.typeTracker.atTypeMaxAmount;\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  setTypeLimit() {\r\n    let familyValue: number;\r\n    this.schoolType ? familyValue = this.family.schoolChildren : familyValue = this.family.familySize;\r\n    this.type.typeSizeAmount.forEach(mapping => {\r\n      if (mapping.minFamSize <= familyValue && familyValue <= mapping.maxFamSize) {\r\n        this.typeLimit = mapping.maxAmount;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<ng-container *ngIf=\"(!schoolType || schoolIncluded) && (!infantType || infantsIncluded)\"> \r\n    <mat-expansion-panel (opened) =\"panelOpenState = true\" (closed)=\"panelOpenState = false\" [expanded]=\"panelOpenState\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          {{type.typeName}}\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          {{panelOpenState ? 'close' : 'open'}}\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <mat-card *ngIf=\"panelOpenState\"class=\"icon-top-container\">\r\n        <div *ngIf=\"hasPoints\" class=\"icon-sub-container\" [ngClass]=\"{'at-limit': allPointsUsed}\">\r\n          <div class=\"label-container\">\r\n            <div>{{currentPoints}}</div>\r\n            <div class=\"label\">\r\n              <span>Points Remaining</span>\r\n              <span class=\"icon-container\">\r\n                <mat-icon>attach_money</mat-icon>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"icon-sub-container\" [ngClass]=\"{'at-limit': atTypeLimit}\">\r\n          <div class=\"label-container\">\r\n            <div>{{typeLimit}}</div>\r\n            <div class=\"label\">\r\n              <span>{{type.typeName + ' Limit'}}</span>\r\n              <span class=\"icon-container\">\r\n                <mat-icon>add_box</mat-icon>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"icon-sub-container\" [ngClass]=\"{'at-limit': atTypeLimit}\">\r\n          <div class=\"label-container\">\r\n            <div>{{typeAmountInCart}}</div>\r\n            <div class=\"label\">\r\n              <span>{{type.typeName + ' in Cart'}}</span>\r\n              <span class=\"icon-container\">\r\n                <mat-icon>shopping_cart</mat-icon>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n      <div class=\"product-card-container\" *ngIf=\"panelOpenState\">\r\n        <div *ngFor=\"let product of products\" class=\"product-card\">\r\n          <app-type-limited-product \r\n            [cart]=\"cart\" [family]=\"family\" [product]=\"product\" [type]=\"type\" [typeLimit]=\"typeLimit\">\r\n          </app-type-limited-product>\r\n        </div>\r\n      </div>\r\n      <mat-action-row (click)=\"closePanel()\"></mat-action-row>\r\n    </mat-expansion-panel>\r\n  </ng-container>   \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { FamilyService } from 'src/app/services/family.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { IntroModalComponent } from '../intro-modal/intro-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService, private dialog: MatDialog, private familyService: FamilyService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.familyService.resetFamily();\r\n  }\r\n\r\n  openIntroModal() {\r\n    this.dialog.open(IntroModalComponent, {\r\n      backdropClass: 'darker-back-drop',\r\n      width: '35rem',\r\n    });\r\n  }\r\n\r\n  toFamily() {\r\n    this.router.navigate([`/family`]);\r\n  }\r\n\r\n}\r\n","<div id=\"top-container\"> \r\n    <mat-card id=\"card-container\"> \r\n    <img id=\"logo\" src=\"../../../assets/images/bsfp-logo-login.png\" alt=\"bsfp-logo-login\">\r\n    <div id=\"message-button-container\" class=\"center\">\r\n        <button mat-fab (click)=\"openIntroModal()\">First visit?<br>Click here.</button> \r\n        <div id=\"message-button-middle\">\r\n            <mat-toolbar>Welcome Neighbor!</mat-toolbar>  \r\n            <mat-card>\r\n                <div class=\"center\">\r\n                    <button mat-raised-button (click)=\"authService.login()\" *ngIf=\"!authService.loggedIn\">Log In</button>\r\n                    <button mat-raised-button (click)=\"toFamily()\" *ngIf=\"authService.loggedIn\">Let's Begin!</button>\r\n                </div> \r\n            </mat-card>\r\n        </div> \r\n    </div>  \r\n    </mat-card>\r\n</div>\r\n<div id=\"cookie-message\" class=\"center\">\r\n    <mat-card >[Cookie Message]</mat-card>\r\n</div>    ","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { QuestionsModalComponent } from '../questions-modal/questions-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  buttonContent: string;\r\n  currentPath: string;\r\n  routesButtonMap = new Map([\r\n    ['family', 'Form Help'],\r\n    ['shop', 'Shop Help'],\r\n    ['order', 'Order Help']\r\n  ]);\r\n  constructor(private activatedRoute: ActivatedRoute, public authService: AuthService, private dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.url.subscribe(([currentPath]) => this.currentPath = currentPath.path);\r\n    this.setButtonContent();\r\n  }\r\n\r\n  onLogOutClick() {\r\n    this.authService.logOutClicked();\r\n    this.authService.logout();\r\n  }\r\n\r\n  openQuestionsModal() {\r\n    this.dialog.open(QuestionsModalComponent, {\r\n      backdropClass: 'darker-back-drop',\r\n      data: this.currentPath,\r\n      width: '35rem',\r\n    });\r\n  }\r\n\r\n  setButtonContent() {\r\n    this.routesButtonMap.forEach((buttonContent, route) => {\r\n      if (route === this.currentPath) {\r\n        this.buttonContent = buttonContent;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<mat-toolbar id=\"header\">\r\n  <h2>Broad Street Food Pantry Online</h2>\r\n  <span></span>\r\n  <button mat-raised-button (click)=\"openQuestionsModal()\">{{buttonContent}}</button> \r\n  <button mat-raised-button (click)=\"onLogOutClick()\" *ngIf=\"authService.loggedIn\">Log Out</button>\r\n</mat-toolbar>\r\n<mat-toolbar id=\"footer\">\r\n  <a href=\"https://bspc.org/foodpantry/\" target=\"_blank\">Pantry Information</a>\r\n  <a href=\"https://bspc.org/privacy-policy/\" target=\"_blank\">Privacy Policy</a>\r\n</mat-toolbar>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport {STEPPER_GLOBAL_OPTIONS} from '@angular/cdk/stepper';\r\n\r\n@Component({\r\n  selector: 'app-questions-modal',\r\n  templateUrl: './questions-modal.component.html',\r\n  styleUrls: ['./questions-modal.component.css'],\r\n  providers: [{\r\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: {displayDefaultIndicatorType: false}\r\n  }]\r\n})\r\nexport class QuestionsModalComponent implements OnInit {\r\n  buttonContent: string;\r\n  routesButtonMap = new Map([\r\n    ['family', 'Return to Form'],\r\n    ['shop', 'Return to Shopping'],\r\n    ['order', 'Return to Order Overview']\r\n  ]);\r\n\r\n  constructor(public dialogRef: MatDialogRef<QuestionsModalComponent>,\r\n              @Inject (MAT_DIALOG_DATA) public currentPath: string) { }\r\n\r\n  ngOnInit() {\r\n    this.setButtonContent();\r\n  }\r\n\r\n  onCloseClick() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  setButtonContent() {\r\n    this.routesButtonMap.forEach((buttonContent, route) => {\r\n      if (route === this.currentPath) {\r\n        this.buttonContent = buttonContent;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"questions\">\r\n  <ng-container [ngSwitch]=\"currentPath\">\r\n\r\n    <ng-container *ngSwitchCase=\"'family'\">\r\n      <mat-toolbar>Form Help</mat-toolbar>\r\n      <mat-horizontal-stepper labelPosition=\"bottom\">\r\n        <mat-step label=\"Contact\" state=\"contact\" completed=\"false\">\r\n          <mat-card>[Contact Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <mat-step label=\"Household\" state=\"household\" completed=\"false\">\r\n          <mat-card>[Household Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <mat-step label=\"Pick Up\" state=\"pick-up\" completed=\"false\">\r\n          <mat-card>[Pick Up Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <ng-template matStepperIcon=\"contact\">\r\n          <mat-icon>person</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"household\">\r\n          <mat-icon>house</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"pick-up\">\r\n          <mat-icon>directions_car</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"edit\">\r\n          <mat-icon>help</mat-icon>\r\n        </ng-template>\r\n      </mat-horizontal-stepper>\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'shop'\">\r\n      <mat-toolbar>Shop Help</mat-toolbar>\r\n      <mat-horizontal-stepper labelPosition=\"bottom\">\r\n        <mat-step label=\"Choice Points\" state=\"choice-points\" completed=\"false\">\r\n          <mat-card>[Choice Points Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <mat-step label=\"Limits\" state=\"limits\" completed=\"false\">\r\n          <mat-card>[Limits Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <mat-step label=\"Shop Options\" state=\"shop-options\" completed=\"false\">\r\n          <mat-card>[Shop Options Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <ng-template matStepperIcon=\"choice-points\">\r\n          <mat-icon>attach_money</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"limits\">\r\n          <mat-icon>add</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"shop-options\">\r\n          <mat-icon>storefront</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"edit\">\r\n          <mat-icon>help</mat-icon>\r\n        </ng-template>\r\n      </mat-horizontal-stepper>\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'order'\">\r\n      <mat-toolbar>Order Help</mat-toolbar>\r\n      <mat-horizontal-stepper labelPosition=\"bottom\">\r\n        <mat-step label=\"Updates\" state=\"updates\" completed=\"false\">\r\n          <mat-card>[Update Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <mat-step label=\"Your Cart\" state=\"cart\" completed=\"false\">\r\n          <mat-card>[Cart Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <mat-step label=\"Submitting\" state=\"submit\" completed=\"false\">\r\n          <mat-card>[Submit Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <ng-template matStepperIcon=\"updates\">\r\n          <mat-icon>create</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"cart\">\r\n          <mat-icon>shopping_cart</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"submit\">\r\n          <mat-icon>send</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"edit\">\r\n          <mat-icon>help</mat-icon>\r\n        </ng-template>\r\n      </mat-horizontal-stepper>\r\n    </ng-container>\r\n    <div>\r\n      <button id=\"return\" mat-raised-button (click)=\"onCloseClick()\"cdkFocusInitial>{{buttonContent}}</button>\r\n    </div>    \r\n  </ng-container>    \r\n</div>\r\n","import { Component, OnInit, HostListener, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Family } from '../../models/family.model';\r\nimport { FamilyService} from '../../services/family.service';\r\nimport { ShopService } from 'src/app/services/shop.service';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { CartItemsByType } from 'src/app/models/cart-items-by-type.model';\r\nimport { Subscription, combineLatest } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-shop',\r\n  templateUrl: './shop.component.html',\r\n  styleUrls: ['./shop.component.css']\r\n})\r\nexport class ShopComponent implements OnInit, OnDestroy {\r\n  allSubTypes: Type[] = [];\r\n  cart: CartItemsByType[];\r\n  currentPoints: number;\r\n  family: Family;\r\n  logOutClicked: boolean;\r\n  limitedTypes: Type[] = [];\r\n  nonLimitedTypes: Type[] = [];\r\n  subscription = new Subscription();\r\n  types: Type[] = [];\r\n\r\n  constructor(private authService: AuthService, private cartService: CartService, private familyService: FamilyService,\r\n              private shopService: ShopService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n      this.authService.getLogOutClicked(),\r\n      this.cartService.getCart(),\r\n      this.familyService.getFamily(),\r\n      this.shopService.getShop()\r\n      ]).subscribe(([logOutClicked, cart, family, types]) => {\r\n        this.logOutClicked = logOutClicked;\r\n        this.cart = cart;\r\n        this.family = family;\r\n        this.types = types;\r\n        this.setTypes();\r\n        this.sortTypesByName();\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onReviewOrderClick() {\r\n    this.router.navigate([`/order`]);\r\n  }\r\n\r\n  private setTypes() {\r\n    this.types.forEach((type: Type) => {\r\n      if (!type.superTypeId && type.typeSizeAmount) {\r\n        this.limitedTypes.push(type);\r\n      }\r\n      if (!type.superTypeId && !type.typeSizeAmount) {\r\n        this.nonLimitedTypes.push(type);\r\n      }\r\n      if (type.superTypeId) {\r\n        this.allSubTypes.push(type);\r\n      }\r\n    });\r\n  }\r\n\r\n  private sortTypesByName() {\r\n    this.types.sort((before, after) => before.typeName.trim().toLowerCase() > after.typeName.trim().toLowerCase() ? 1 : -1);\r\n  }\r\n\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  unloadNotification($event: any) {\r\n    if (!this.logOutClicked) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"top-grid\">                \r\n    <main id=\"shop\">\r\n        <mat-toolbar>Welcome to our Shop</mat-toolbar>\r\n        <cdk-virtual-scroll-viewport  itemSize=\"\">\r\n            <ng-container *ngFor=\"let type of types\">\r\n                <app-type *ngIf=\"nonLimitedTypes.includes(type)\" \r\n                    [allSubTypes]=\"allSubTypes\" [cart]=\"cart\" [family]=\"family\" [type]=\"type\">\r\n                </app-type>\r\n                <app-limited-type *ngIf=\"limitedTypes.includes(type)\" \r\n                    [allSubTypes]=\"allSubTypes\" [cart]=\"cart\" [family]=\"family\" [type]=\"type\">\r\n                </app-limited-type>\r\n            </ng-container>\r\n        </cdk-virtual-scroll-viewport>     \r\n    </main>\r\n    <aside class=\"aside-container\">\r\n        <mat-toolbar>Ready to Review?</mat-toolbar>\r\n        <div id=\"review\">\r\n            <button mat-raised-button  (click)=\"onReviewOrderClick()\">Review Order</button>\r\n        </div>\r\n    </aside>  \r\n</div>\r\n\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { TypeLimitedProductComponent } from '../type-limited-product/type-limited-product.component';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { PointService } from 'src/app/services/point.service';\r\nimport { TypeTrackerService } from 'src/app/services/type-tracker.service';\r\nimport { combineLatest } from 'rxjs';\r\nimport { TypeTracker } from 'src/app/models/type-tracker.model';\r\n\r\n@Component({\r\n  selector: 'app-sub-type-product',\r\n  templateUrl: './sub-type-product.component.html',\r\n  styleUrls: ['./sub-type-product.component.css']\r\n})\r\nexport class SubTypeProductComponent extends TypeLimitedProductComponent implements OnInit, OnDestroy {\r\n  panelOpenState = false;\r\n  typeAmountInCart: number;\r\n  typeId: string;\r\n  typeLimit: number;\r\n  typeName: string;\r\n  typeSizeAmount: any;\r\n  typeTracker: TypeTracker;\r\n\r\n  constructor(protected cartService: CartService, protected pointService: PointService, protected typeTrackerService: TypeTrackerService) {\r\n    super(cartService, pointService, typeTrackerService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.typeId = this.product.typeId;\r\n    this.typeName = this.product.typename;\r\n    this.typeSizeAmount = this.product.typeSizeAmount;\r\n    this.setLimit();\r\n    this.setPoints();\r\n    this.setTypeLimit();\r\n    this.inCart = this.isProductInCart();\r\n    this.typeTrackerService.addTypeTracker(this.typeId);\r\n    this.subscription.add(\r\n      combineLatest([\r\n      this.pointService.getCurrentPoints(),\r\n      this.typeTrackerService.getTypeTrackers()\r\n      ]).subscribe(([currentPoints, typeTrackers]) => {\r\n      this.currentPoints = currentPoints;\r\n      this.typeTracker = typeTrackers.find((typeTracker: TypeTracker) => typeTracker.typeId === this.typeId);\r\n      this.atTypeLimit = this.typeTracker.atTypeMaxAmount;\r\n      this.typeAmountInCart = this.typeTracker.typeAmountInCart;\r\n      this.updateTypeInCartAndBtn();\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  setTypeLimit() {\r\n    const familyValue = this.family.familySize;\r\n    this.typeSizeAmount.forEach(mapping => {\r\n      if (mapping.minFamSize <= familyValue && familyValue <= mapping.maxFamSize) {\r\n        this.typeLimit = mapping.maxAmount;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<mat-expansion-panel \r\n(clickOutside)=\"panelOpenState = false\"\r\n(opened)=\"panelOpenState = true\" \r\n(closed)=\"panelOpenState = false\"\r\n[ngClass]=\"{'at-type-limit-border': atTypeLimit, 'border': !atTypeLimit}\"\r\n[expanded]=\"panelOpenState\"\r\n>\r\n    <mat-expansion-panel-header>{{typeName}}</mat-expansion-panel-header>\r\n    <div class=\"at-limit-message-container\" *ngIf=\"atTypeLimit\">\r\n        <div>Limit Reached</div>\r\n    </div>\r\n    <div *ngIf=\"panelOpenState\" class=\"info-container\" >\r\n        <div class=\"icon-container\">\r\n            <mat-icon class=\"icon-badge\" [matBadge]=\"typeLimit\">add_box</mat-icon>\r\n            <div>Limit</div>\r\n        </div>\r\n        <div class=\"icon-container\">\r\n            <mat-icon class=\"badge-cart\" [matBadge]=\"typeAmountInCart\">shopping_cart</mat-icon>\r\n            <div>In Cart</div>\r\n        </div>\r\n    </div>\r\n</mat-expansion-panel>\r\n<mat-card>\r\n    <div class=\"product-name\">{{product.productName}}</div>\r\n    <div class=icon-button-container>\r\n        <div>\r\n            <div class=\"info-container\">\r\n                <div *ngIf=\"limit\" class=\"icon-container\">\r\n                    <mat-icon class=\"icon-badge\" [matBadge]=\"limit\">add_box</mat-icon>\r\n                    <div>Limit</div>\r\n                </div>\r\n                <div *ngIf=\"points\" class=\"icon-container\">\r\n                    <mat-icon class=\"icon-badge\" [matBadge]=\"points\">attach_money</mat-icon>\r\n                    <div>Points</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div></div>\r\n        <div class=amount-button-container>\r\n            <div class=\"icon-container\">\r\n                <mat-icon class=\"badge-cart\" [matBadge]=\"amountInCart\">shopping_cart</mat-icon>\r\n                <div>Amount in Cart</div>\r\n            </div>\r\n            <span class=\"button-container\">\r\n                <button mat-raised-button (click)=\"subtractOneTypeLimitProduct()\" [disabled]=\"!inCart\">-</button>\r\n                <button mat-raised-button (click)=\"addOneTypeLimitProduct()\" [disabled]=\"addBtnDisabled\">+</button>\r\n            </span>\r\n        </div>\r\n    </div>\r\n</mat-card>   \r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-submit-modal',\r\n  templateUrl: './submit-modal.component.html',\r\n  styleUrls: ['./submit-modal.component.css']\r\n})\r\nexport class SubmitModalComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService, public dialogRef: MatDialogRef<SubmitModalComponent>,\r\n              @Inject (MAT_DIALOG_DATA) public data: any, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","<mat-card id=\"top-container\">\r\n  <mat-toolbar id=\"success\">\r\n    <mat-icon class=\"smile\">sentiment_satisfied_alt</mat-icon>\r\n    <span>Success</span> \r\n  </mat-toolbar>\r\n  <mat-card class=\"location-message\" *ngIf=\"!data.family.referral\">\r\n    {{'Your order will be ready for pick on ' + data.pickUpDate + ' at the Broad Street Food Pantry.'}}\r\n  </mat-card>\r\n  <mat-card class=\"location-message\" *ngIf=\"data.family.referral\">\r\n    {{'Your order will be delivered on ' + data.pickUpDate + ' by CELC.'}}\r\n  </mat-card>\r\n  <div id=\"buttons\">\r\n    <button mat-raised-button (click)=\"authService.logout()\">Log Out</button>\r\n  </div>\r\n</mat-card>  \r\n\r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { LimitedProductComponent } from '../limited-product/limited-product.component';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { PointService } from 'src/app/services/point.service';\r\nimport { TypeTrackerService } from 'src/app/services/type-tracker.service';\r\nimport { TypeTracker } from 'src/app/models/type-tracker.model';\r\nimport { combineLatest } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-type-limited-product',\r\n  templateUrl: './type-limited-product.component.html',\r\n  styleUrls: ['./type-limited-product.component.css']\r\n})\r\nexport class TypeLimitedProductComponent extends LimitedProductComponent implements OnInit, OnDestroy {\r\n  atTypeLimit: boolean;\r\n  @Input() typeLimit: number;\r\n  typeTracker: TypeTracker;\r\n\r\n  constructor(protected cartService: CartService, protected pointService: PointService, protected typeTrackerService: TypeTrackerService) {\r\n    super(cartService, pointService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setLimit();\r\n    this.setPoints();\r\n    this.inCart = this.isProductInCart();\r\n    this.subscription.add(\r\n      combineLatest([\r\n      this.pointService.getCurrentPoints(),\r\n      this.typeTrackerService.getTypeTrackers()\r\n      ]).subscribe(([currentPoints, typeTrackers]) => {\r\n      this.currentPoints = currentPoints;\r\n      this.typeTracker = typeTrackers.find((typeTracker: TypeTracker) => typeTracker.typeId === this.type._id);\r\n      this.atTypeLimit = this.typeTracker.atTypeMaxAmount;\r\n      this.updateTypeInCartAndBtn();\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  addOneTypeLimitProduct() {\r\n    this.addOneProduct();\r\n    this.typeTracker.typeAmountInCart++;\r\n    this.typeTracker.atTypeMaxAmount = this.isAtTypeLimit();\r\n    this.typeTrackerService.updateTypeTrackers(this.typeTracker);\r\n  }\r\n\r\n  isAtTypeLimit() {\r\n    return this.typeTracker.typeAmountInCart === this.typeLimit;\r\n  }\r\n\r\n  subtractOneTypeLimitProduct() {\r\n    if (this.typeTracker.typeAmountInCart > 0) {\r\n      this.subtractOneProduct();\r\n      this.typeTracker.typeAmountInCart--;\r\n      this.typeTracker.atTypeMaxAmount = this.isAtTypeLimit();\r\n      this.typeTrackerService.updateTypeTrackers(this.typeTracker);\r\n    }\r\n  }\r\n\r\n  updateTypeInCartAndBtn() {\r\n    this.amountInCart = this.getAmountInCart();\r\n    this.addBtnDisabled = this.atTypeLimit || !this.isProductUnderLimit() || !this.hasEnoughPoints();\r\n  }\r\n\r\n}\r\n","\r\n<mat-card>\r\n    <div class=\"product-name\">{{product.productName}}</div>\r\n    <div class=icon-button-container>\r\n        <div>\r\n            <div class=\"info-container\">\r\n                <div *ngIf=\"limit\" class=\"icon-container\">\r\n                    <mat-icon class=\"icon-badge\" [matBadge]=\"limit\">add_box</mat-icon>\r\n                    <div>Limit</div>\r\n                </div>\r\n                <div *ngIf=\"points\" class=\"icon-container\">\r\n                    <mat-icon class=\"icon-badge\" [matBadge]=\"points\">attach_money</mat-icon>\r\n                    <div>Points</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div></div>\r\n        <div class=amount-button-container>\r\n            <div class=\"icon-container\">\r\n                <mat-icon class=\"badge-cart\" [matBadge]=\"amountInCart\">shopping_cart</mat-icon>\r\n                <div>Amount in Cart</div>\r\n            </div>\r\n            <span class=\"button-container\">\r\n                <button mat-raised-button (click)=\"subtractOneTypeLimitProduct()\" [disabled]=\"!inCart\">-</button>\r\n                <button mat-raised-button (click)=\"addOneTypeLimitProduct()\" [disabled]=\"addBtnDisabled\">+</button>\r\n            </span>\r\n        </div> \r\n    </div>       \r\n</mat-card>   \r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { Family } from 'src/app/models/family.model';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { CartItemsByType } from 'src/app/models/cart-items-by-type.model';\r\nimport { PointService } from 'src/app/services/point.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { TypeProduct } from 'src/app/models/type-product.model';\r\n\r\n@Component({\r\n  selector: 'app-type',\r\n  templateUrl: './type.component.html',\r\n  styleUrls: ['./type.component.css']\r\n})\r\nexport class TypeComponent implements OnInit, OnDestroy {\r\n  allPointsUsed: boolean;\r\n  @Input() allSubTypes: Type[];\r\n  @Input() cart: CartItemsByType[];\r\n  currentPoints: number;\r\n  @Input() family: Family;\r\n  hasPoints: boolean;\r\n  infantsIncluded: boolean;\r\n  infantType: boolean;\r\n  loading = true;\r\n  panelOpenState = false;\r\n  products: TypeProduct[] = [];\r\n  schoolIncluded: boolean;\r\n  schoolType: boolean;\r\n  subscription: Subscription = new Subscription();\r\n  subTypes: Type[];\r\n  @Input() type: Type;\r\n\r\n  constructor(protected pointService: PointService) { }\r\n\r\n  ngOnInit() {\r\n    this.setProducts();\r\n    this.sortProductsByName();\r\n    this.setInfant();\r\n    this.setSchool();\r\n    this.setHasPoints();\r\n    this.subscription.add(\r\n      this.pointService.getCurrentPoints().subscribe((currentPoints: number) => {\r\n      this.currentPoints = currentPoints;\r\n      this.allPointsUsed = this.currentPoints <= 0;\r\n    }));\r\n    this.loading = false;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  closePanel() {\r\n    this.panelOpenState = false;\r\n  }\r\n\r\n  setHasPoints() {\r\n    this.hasPoints = this.products.some((product: Product) => product.points);\r\n  }\r\n\r\n  setProductsForFamilySize(product: Product) {\r\n    let familyValue: number;\r\n    product.school ? familyValue = this.family.schoolChildren : familyValue = this.family.familySize;\r\n    if (product.prodSizeAmount) {\r\n      product.prodSizeAmount.forEach(mapping => {\r\n        if (mapping.minFamSize <= familyValue  && familyValue <= mapping.maxFamSize) {\r\n            this.products.push(product);\r\n        }\r\n      });\r\n    } else {\r\n      this.products.push(product);\r\n    }\r\n  }\r\n\r\n  setInfant() {\r\n    this.infantsIncluded = this.family.infants ? true : false;\r\n    this.infantType = !this.type.products.some((product: Product) => !product.infant);\r\n  }\r\n\r\n  setSchool() {\r\n    this.schoolIncluded = this.family.schoolChildren > 0;\r\n    this.schoolType = !this.type.products.some((product: Product) => !product.school);\r\n  }\r\n\r\n  setProducts() {\r\n    this.type.products.forEach((product: Product) => {\r\n      this.setProductsForFamilySize(product);\r\n    });\r\n    this.allSubTypes.forEach((subType: Type) => {\r\n      if (this.type._id === subType.superTypeId) {\r\n        subType.products.forEach((subTypeProduct: TypeProduct) => {\r\n          subTypeProduct.typeId = subType._id;\r\n          subTypeProduct.typename = subType.typeName;\r\n          subTypeProduct.typeSizeAmount = subType.typeSizeAmount;\r\n          this.setProductsForFamilySize(subTypeProduct);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  sortProductsByName() {\r\n    this.products.sort(\r\n      (before, after) => before.productName.trim().toLowerCase() > after.productName.trim().toLowerCase() ? 1 : -1);\r\n  }\r\n}\r\n","<ng-container *ngIf=\"(!schoolType || schoolIncluded) && (!infantType || infantsIncluded)\"> \r\n  <mat-expansion-panel (opened) =\"panelOpenState = true\" (closed)=\"panelOpenState = false\" [expanded]=\"panelOpenState\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        {{type.typeName}}\r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n        {{panelOpenState ? 'close' : 'open'}}\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <mat-card *ngIf=\"hasPoints && panelOpenState\" class=\"icon-top-container\">\r\n      <div class=\"icon-sub-container\" [ngClass]=\"{'at-limit': allPointsUsed}\">\r\n        <div class=\"label-container\">\r\n          <div>{{currentPoints}}</div>\r\n          <div class=\"label\">\r\n            <span>Points Remaining</span>\r\n            <span class=\"icon-container\">\r\n              <mat-icon>attach_money</mat-icon>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n    <div class=\"product-card-container\" *ngIf=\"panelOpenState\">\r\n        <div *ngFor=\"let product of products\" class=\"product-card\">\r\n          <app-limited-product *ngIf=\"!product.typeId\"\r\n          [cart]=\"cart\" [family]=\"family\" [product]=\"product\" [type]=\"type\">\r\n          </app-limited-product>\r\n          <app-sub-type-product *ngIf=\"product.typeId\"\r\n            [cart]=\"cart\" [family]=\"family\" [product]=\"product\" [type]=\"type\">\r\n          </app-sub-type-product>\r\n        </div>\r\n    </div>\r\n    <mat-action-row (click)=\"closePanel()\"></mat-action-row>\r\n  </mat-expansion-panel>\r\n</ng-container>  \r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { FamilyService } from 'src/app/services/family.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { PointService } from 'src/app/services/point.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { TypeTrackerService } from 'src/app/services/type-tracker.service';\r\nimport { Router } from '@angular/router';\r\nimport { FamilyComponent } from 'src/app/components/family/family.component';\r\nimport { PickUpDateService } from 'src/app/services/pick-up-date.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-update-modal',\r\n  templateUrl: './update-modal.component.html',\r\n  styleUrls: ['./update-modal.component.css']\r\n})\r\nexport class UpdateModalComponent extends FamilyComponent implements OnInit {\r\n  loading = true;\r\n  pickUpDate: string;\r\n\r\n  constructor(protected authService: AuthService, protected cartService: CartService, public dialogRef: MatDialogRef<UpdateModalComponent>,\r\n              protected familyService: FamilyService, @Inject (MAT_DIALOG_DATA) public data: any,\r\n              protected pickUpDateService: PickUpDateService, protected pointService: PointService, private snackBar: MatSnackBar,\r\n              protected router: Router, protected typeTrackerService: TypeTrackerService\r\n              ) {\r\n                super(authService, cartService, familyService, pickUpDateService, pointService, router, typeTrackerService);\r\n              }\r\n\r\n  ngOnInit() {\r\n    this.family = this.data.family;\r\n    this.pickUpDate = this.data.pickUpDate;\r\n    this.setContactModal();\r\n    this.setHouseHoldModal();\r\n    this.setPickUpModal();\r\n    this.setPickUpDateOptions(this.family.referral);\r\n    this.pickUpForm.get('pickUpDate').setValue(this.pickUpDate);\r\n    this.pointService.getPointsMapping().subscribe(pointsMapping => this.pointsMapping = pointsMapping);\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onUpdateContactClick() {\r\n    if (this.contactForm.valid) {\r\n      this.setContactInfo();\r\n      this.familyService.updateFamily(this.family);\r\n      this.snackBar.open('Contact Information Updated.', 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['green-snackbar', 'mat-raised-button']\r\n      });\r\n      this.dialogRef.close();\r\n    }\r\n  }\r\n\r\n  onUpdateHouseholdClick() {\r\n    if (this.householdForm.valid) {\r\n      this.setHouseholdInfo();\r\n      this.familyService.updateFamily(this.family);\r\n      this.initPoints(this.family.familySize);\r\n      this.cartService.resetCart();\r\n      this.typeTrackerService.resetTypeTrackers();\r\n      this.dialogRef.close();\r\n      this.snackBar.open('Household Information Updated and Cart Reset.', 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['green-snackbar']\r\n      });\r\n      this.router.navigate([`/shop`]);\r\n    }\r\n  }\r\n\r\n  onUpdatePickUpClick() {\r\n    if (this.pickUpForm.valid) {\r\n      this.setPickUpInfo();\r\n      this.familyService.updateFamily(this.family);\r\n      this.snackBar.open('Pick Up Information Updated.', 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['green-snackbar']\r\n      });\r\n      this.dialogRef.close();\r\n    }\r\n  }\r\n\r\n  setContactModal() {\r\n    this.contactForm = new FormGroup({\r\n      firstName: new FormControl(this.family.firstName, Validators.required),\r\n      lastName: new FormControl(this.family.lastName, Validators.required),\r\n      zipCode: new FormControl(this.family.zipCode, [Validators.required, Validators.pattern(/^[0-9]{5}$/)]),\r\n      phoneNumber: new FormControl(this.family.phoneNumber, [Validators.required,\r\n        Validators.pattern(/^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}$/)]),\r\n      emailAddress: new FormControl(this.family.emailAddress, Validators.email),\r\n    });\r\n  }\r\n\r\n  setHouseHoldModal() {\r\n    this.householdForm = new FormGroup({\r\n      familySize: new FormControl(this.family.familySize, Validators.required),\r\n      schoolChildren: new FormControl(this.family.schoolChildren, Validators.required),\r\n      infants: new FormControl(this.family.infants, Validators.required),\r\n    });\r\n  }\r\n\r\n  setPickUpModal() {\r\n    this.pickUpForm = new FormGroup({\r\n      referral: new FormControl(this.family.referral, Validators.required),\r\n      pickUpDate: new FormControl(this.pickUpDate, Validators.required)\r\n    });\r\n  }\r\n}\r\n","\r\n<form [formGroup]=\"contactForm\" *ngIf=\"data.modal === 'contact'\">\r\n  <mat-toolbar>Update Contact Information</mat-toolbar> \r\n  <div>\r\n    <mat-form-field>\r\n      <mat-label>First Name</mat-label>\r\n      <input matInput formControlName=\"firstName\" [value]=\"family.firstName\">\r\n      <mat-error *ngIf=\"contactForm.get('firstName').hasError('required')\">{{requiredError}}</mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div>\r\n    <mat-form-field>\r\n      <mat-label>Last Name</mat-label>\r\n      <input matInput formControlName=\"lastName\" [value]=\"family.lastName\">\r\n      <mat-error *ngIf=\"contactForm.get('lastName').hasError('required')\">{{requiredError}}</mat-error>\r\n    </mat-form-field>\r\n  </div>  \r\n  <div>\r\n    <mat-form-field>\r\n      <mat-label>Zip Code</mat-label>\r\n      <input matInput formControlName=\"zipCode\" [value]=\"family.zipCode\">\r\n      <mat-error *ngIf=\"contactForm.get('zipCode').hasError('pattern')\">Zipcode must be exactly five digits (example: 64359).</mat-error>\r\n      <mat-error *ngIf=\"contactForm.get('zipCode').hasError('required')\">{{requiredError}}</mat-error>\r\n    </mat-form-field>  \r\n  </div>\r\n  <div>\r\n    <mat-form-field> \r\n    <mat-label>Phone Number</mat-label>\r\n    <input matInput formControlName=\"phoneNumber\" [value]=\"family.phoneNumber\">\r\n    <mat-error *ngIf=\"contactForm.get('phoneNumber').hasError('pattern')\">Phone number must be in the following format: 555-555-5555.</mat-error>\r\n    <mat-error *ngIf=\"contactForm.get('phoneNumber').hasError('required')\">{{requiredError}}</mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <!-- <div>  \r\n    <mat-form-field>\r\n      <mat-label>Email Address (optional)</mat-label>\r\n      <input matInput formControlName=\"emailAddress\" [value]=\"family.emailAddress ? family.emailAddress : ''\">\r\n      <mat-error *ngIf=\"contactForm.get('emailAddress').hasError('email')\">Email address must include the @ symbol.</mat-error>\r\n    </mat-form-field>\r\n  </div> -->\r\n  <div class=\"button-div\">\r\n    <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n    <button mat-raised-button [disabled]=\"!contactForm.valid || !contactForm.dirty\" (click)=\"onUpdateContactClick()\">Update</button>\r\n  </div>\r\n</form>\r\n\r\n<form [formGroup]=\"householdForm\" *ngIf=\"data.modal === 'household'\">\r\n  <mat-toolbar>Update Household Information</mat-toolbar> \r\n  <div>\r\n    <div id=\"household-caution\">\r\n      <span>Since household information determines shopping options, an update will reset your cart and return you to the shopping screen.</span>\r\n    </div>\r\n    <br>  \r\n    <mat-form-field>\r\n      <mat-label>Family Size</mat-label>\r\n      <mat-select formControlName=\"familySize\" [value]=\"family.familySize\">\r\n        <mat-option [value]=1>1</mat-option>\r\n        <mat-option [value]=2>2</mat-option>\r\n        <mat-option [value]=3>3</mat-option>\r\n        <mat-option [value]=4>4</mat-option>\r\n        <mat-option [value]=5>5</mat-option>\r\n        <mat-option [value]=6>6</mat-option>\r\n        <mat-option [value]=7>7</mat-option>\r\n        <mat-option [value]=8>8</mat-option>\r\n        <mat-option [value]=9>9+</mat-option>\r\n      </mat-select>\r\n      <mat-error *ngIf=\"householdForm.get('familySize').hasError('required')\">{{requiredError}}</mat-error>  \r\n    </mat-form-field>\r\n  </div>\r\n  <div>  \r\n    <mat-form-field>\r\n      <mat-label>School Aged Children</mat-label>\r\n      <mat-select matInput formControlName=\"schoolChildren\" [value]=\"family.schoolChildren\">\r\n        <mat-option [value]=0>0</mat-option>\r\n        <mat-option [value]=1>1</mat-option>\r\n        <mat-option [value]=2>2</mat-option>\r\n        <mat-option [value]=3>3</mat-option>\r\n        <mat-option [value]=4>4</mat-option>\r\n        <mat-option [value]=5>5</mat-option>\r\n        <mat-option [value]=6>6+</mat-option>\r\n      </mat-select>\r\n      <mat-error *ngIf=\"householdForm.get('schoolChildren').hasError('required')\">{{requiredError}}</mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div>  \r\n    <mat-form-field>\r\n      <mat-label>Any Infants in the Family?</mat-label>\r\n      <mat-select matInput formControlName=\"infants\" [value]=\"family.infants\">\r\n        <mat-option [value]=true>Yes</mat-option>\r\n        <mat-option [value]=false>No</mat-option>\r\n      </mat-select>\r\n      <mat-error *ngIf=\"householdForm.get('infants').hasError('required')\">{{requiredError}}</mat-error>  \r\n    </mat-form-field>  \r\n  </div>\r\n  <div class=\"button-div\">\r\n    <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n    <button mat-raised-button [disabled]=\"!householdForm.valid || !householdForm.dirty\" (click)=\"onUpdateHouseholdClick()\">Update and Shop</button>\r\n  </div>  \r\n</form>\r\n\r\n<form [formGroup]=\"pickUpForm\" *ngIf=\"data.modal === 'pick-up'\">\r\n  <mat-toolbar>Update Pick Up Information</mat-toolbar> \r\n  <div>\r\n    <mat-form-field>\r\n      <mat-label>Were you referred by CELC?</mat-label>\r\n      <mat-select matInput formControlName=\"referral\" [value]=\"family.referral\" (selectionChange)=\"setPickUpDateOptions($event.value)\">\r\n        <mat-option [value]=true>Yes</mat-option>\r\n        <mat-option [value]=false>No</mat-option>\r\n      </mat-select>\r\n      <mat-error *ngIf=\"pickUpForm.get('referral').hasError('required')\">{{requiredError}}</mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div>\r\n    <mat-form-field>\r\n      <mat-label>Pick Up Dates:</mat-label>\r\n      <mat-select matInput formControlName=\"pickUpDate\" [value]=\"pickUpDate\">\r\n        <mat-option *ngFor=\"let pickUpDate of pickUpDateOptions\" [value]=\"pickUpDate\">{{pickUpDate}}</mat-option>\r\n      </mat-select>\r\n      <mat-error *ngIf=\"pickUpForm.get('pickUpDate').hasError('required')\">This field is required.</mat-error>  \r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"button-div\">\r\n    <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n    <button mat-raised-button [disabled]=\"!pickUpForm.valid || !pickUpForm.dirty\" (click)=\"onUpdatePickUpClick()\">Update</button>\r\n  </div>\r\n</form>  \r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean|UrlTree> | boolean {\r\n    return this.authService.isAuthenticated.pipe(\r\n      tap(loggedIn => {\r\n        if (!loggedIn) {\r\n          this.authService.login(state.url);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Location} from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, UrlTree, Router, CanDeactivate } from '@angular/router';\r\nimport { FamilyService } from '../services/family.service';\r\nimport { Family } from '../models/family.model';\r\nimport { ShopComponent } from '../components/shop/shop.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FamilyGuard implements CanActivate {\r\n  family: Family;\r\n\r\n  constructor(private familyService: FamilyService, private router: Router) {\r\n  }\r\n\r\n  canActivate(): boolean | UrlTree {\r\n    this.familyService.getFamily().subscribe((family: Family) => {\r\n      this.family = family;\r\n    });\r\n    return this.hasFamilyCheck() ?  true : this.router.parseUrl('/family');\r\n  }\r\n\r\n  private hasFamilyCheck() {\r\n    const familyValues = Object.values(this.family);\r\n    const nullValues = familyValues.filter(familyValue => familyValue === null);\r\n    return !nullValues.length;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Family } from '../models/family.model';\r\nimport { FamilyService } from '../services/family.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NoFamilyGuard implements CanActivate  {\r\n  family: Family;\r\n\r\n  constructor(private familyService: FamilyService) {\r\n  }\r\n\r\n  canActivate(): boolean {\r\n    this.familyService.getFamily().subscribe((family: Family) => {\r\n      this.family = family;\r\n    });\r\n    return this.hasNoFamilyCheck();\r\n  }\r\n\r\n  private hasNoFamilyCheck() {\r\n    const familyValues = Object.values(this.family);\r\n    const nullValues = familyValues.filter(familyValue => familyValue === null);\r\n    return nullValues.length ? true : false;\r\n  }\r\n}\r\n","export class Family {\r\n    firstName: string;\r\n    lastName: string;\r\n    zipCode: string;\r\n    emailAddress?: string;\r\n    phoneNumber: string;\r\n    familySize: number;\r\n    schoolChildren: number;\r\n    infants: boolean;\r\n    referral: boolean;\r\n}\r\n","import { Family } from './family.model';\r\nimport { CartItemsByType } from './cart-items-by-type.model';\r\n\r\nexport class Order {\r\n    family: Family;\r\n    cart: CartItemsByType[];\r\n    pickUpDate: string;\r\n    received: boolean;\r\n}\r\n","import { Type } from './type.model';\r\n\r\nexport class Product {\r\n    // tslint:disable-next-line:variable-name\r\n    _id: string;\r\n    productName: string;\r\n    prodSizeAmount?: {\r\n        minFamSize: number;\r\n        maxFamSize: number;\r\n        maxAmount: number;\r\n    } [];\r\n    points?: number;\r\n    school?: boolean;\r\n    infant?: boolean;\r\n}\r\n","import { Product } from './product.model';\r\n\r\nexport class TypeProduct extends Product {\r\n    typeId?: string;\r\n    typename?: string;\r\n    typeSizeAmount?: {\r\n        minFamSize: number;\r\n        maxFamSize: number;\r\n        maxAmount: number;\r\n    } [];\r\n}\r\n","import { Product } from './product.model';\r\n\r\nexport class Type {\r\n    // tslint:disable-next-line:variable-name\r\n    _id: string;\r\n    typeName: string;\r\n    typeSizeAmount?: {\r\n        minFamSize: number;\r\n        maxFamSize: number;\r\n        maxAmount: number;\r\n    } [];\r\n    products: Product[];\r\n    superTypeId?: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { from, of, Observable, BehaviorSubject, combineLatest, throwError } from 'rxjs';\r\nimport { tap, catchError, concatMap, shareReplay } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport authConfig from '../../../auth.config';\r\nimport Auth0Client from '@auth0/auth0-spa-js/dist/typings/Auth0Client';\r\nimport createAuth0Client from '@auth0/auth0-spa-js';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  loggedIn: boolean = null;\r\n\r\n  logOutClick = false;\r\n  private logOutClickSource = new BehaviorSubject(this.logOutClick);\r\n  currentLogOutClick = this.logOutClickSource.asObservable();\r\n\r\n  auth0Client = (from(createAuth0Client(authConfig)) as Observable<Auth0Client>).pipe(\r\n    shareReplay(1),\r\n    catchError(err => throwError(err))\r\n  );\r\n  isAuthenticated = this.auth0Client.pipe(\r\n    concatMap((client: Auth0Client) => from(client.isAuthenticated())),\r\n    tap(res => this.loggedIn = res)\r\n  );\r\n  handleRedirectCallback = this.auth0Client.pipe(\r\n    concatMap((client: Auth0Client) => from(client.handleRedirectCallback()))\r\n  );\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  getTokenSilently$(options?): Observable<string> {\r\n    return this.auth0Client.pipe(\r\n      concatMap((client: Auth0Client) => from(client.getTokenSilently(options)))\r\n    );\r\n  }\r\n\r\n  localAuthSetup() {\r\n    const checkAuth = this.isAuthenticated.pipe(\r\n      concatMap((loggedIn: boolean) => {\r\n        return of(loggedIn);\r\n      })\r\n    );\r\n    checkAuth.subscribe((response: { [key: string]: any } | boolean) => {\r\n      this.loggedIn = !!response;\r\n    });\r\n  }\r\n\r\n  login(redirectPath: string = `/family`) {\r\n    this.auth0Client.subscribe((client: Auth0Client) => {\r\n      client.loginWithRedirect({\r\n        redirect_uri: `${window.location.origin}/callback`,\r\n        appState: { target: redirectPath }\r\n      });\r\n    });\r\n  }\r\n\r\n  handleAuthCallback() {\r\n    let targetRoute: string;\r\n    const authComplete = this.handleRedirectCallback.pipe(\r\n      tap(cbRes => {\r\n        targetRoute = cbRes.appState && cbRes.appState.target ? cbRes.appState.target : '/';\r\n      }),\r\n      concatMap(() => {\r\n        return combineLatest(\r\n          [this.isAuthenticated]\r\n        );\r\n      })\r\n    );\r\n    authComplete.subscribe(([loggedIn]) => {\r\n      this.router.navigate([targetRoute]);\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.auth0Client.subscribe((client: Auth0Client) => {\r\n      client.logout({\r\n        client_id: authConfig.client_id,\r\n        returnTo: `${window.location.origin}`\r\n      });\r\n    });\r\n  }\r\n\r\n  getLogOutClicked(): Observable<boolean> {\r\n    return this.currentLogOutClick;\r\n  }\r\n\r\n  logOutClicked() {\r\n    this.logOutClickSource.next(true);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { CartItemsByType } from '../models/cart-items-by-type.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n\r\n  cart: CartItemsByType[] = [];\r\n\r\n  private cartSource = new BehaviorSubject(this.cart);\r\n  currentCart = this.cartSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  getCart(): Observable<CartItemsByType[]> {\r\n    return this.currentCart;\r\n  }\r\n\r\n  resetCart() {\r\n    const defaultCart: CartItemsByType[] = [];\r\n    this.cartSource.next(defaultCart);\r\n  }\r\n\r\n  updateCart(cart: CartItemsByType[]): void {\r\n    this.cartSource.next(cart);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Family } from '../models/family.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FamilyService {\r\n  family: Family = {\r\n    firstName: null,\r\n    lastName: null,\r\n    zipCode: null,\r\n    phoneNumber: null,\r\n    familySize: null,\r\n    schoolChildren: null,\r\n    infants: null,\r\n    referral: null,\r\n  };\r\n\r\n  private familySource = new BehaviorSubject(this.family);\r\n  currentFamily = this.familySource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  getFamily(): Observable<Family> {\r\n    return this.currentFamily;\r\n  }\r\n\r\n  resetFamily() {\r\n    const defaultFamily: Family = {\r\n      firstName: null,\r\n      lastName: null,\r\n      zipCode: null,\r\n      phoneNumber: null,\r\n      familySize: null,\r\n      schoolChildren: null,\r\n      infants: null,\r\n      referral: null,\r\n    };\r\n    this.familySource.next(defaultFamily);\r\n  }\r\n\r\n  updateFamily(family: Family) {\r\n    this.familySource.next(family);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { mergeMap, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return this.authService.getTokenSilently$().pipe(\r\n      mergeMap(token => {\r\n        const tokenReq = req.clone({\r\n          setHeaders: { Authorization: `Bearer ${token}` }\r\n        });\r\n        return next.handle(tokenReq);\r\n      }),\r\n      catchError(err => throwError(err))\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PickUpDateService {\r\n  daysOfTheWeek = new Map([\r\n    [0, 'Sunday'],\r\n    [1, 'Monday'],\r\n    [2, 'Tuesday'],\r\n    [3, 'Wednesday'],\r\n    [4, 'Thursday'],\r\n    [5, 'Friday'],\r\n    [6, 'Saturday']\r\n  ]);\r\n  now = new Date();\r\n  pickUpDateOptions: string[];\r\n\r\n  pickUpDate: string = null;\r\n  private pickUpDateSource = new BehaviorSubject(this.pickUpDate);\r\n  currentPickUpDate = this.pickUpDateSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  private formatDate(date: Date) {\r\n    const weekDay = this.daysOfTheWeek.get(date.getDay());\r\n    const day = date.getDate();\r\n    const month = date.getMonth() + 1;\r\n    const year = date.getFullYear();\r\n    return weekDay + ' (' + month + '/' + day + '/' + year + ')';\r\n  }\r\n\r\n  getPickUpDate(): Observable<string> {\r\n    return this.currentPickUpDate;\r\n  }\r\n\r\n  getPickUpDateOptions(referral: boolean) {\r\n    if (!referral) {\r\n      let secondThursday = this.findNthWeekdayOfMonth(4, 2, false);\r\n      let secondSaturday = this.findNthWeekdayOfMonth(6, 2, false);\r\n      if (this.now > secondThursday && this.now > secondSaturday) {\r\n        secondThursday = this.findNthWeekdayOfMonth(4, 2, true);\r\n        secondSaturday = this.findNthWeekdayOfMonth(6, 2, true);\r\n      }\r\n      if (this.now < secondThursday && this.now > secondSaturday) {\r\n        this.orderAndPush(secondThursday);\r\n      } else if (this.now > secondThursday && this.now < secondSaturday) {\r\n        this.orderAndPush(secondSaturday);\r\n      } else {\r\n        this.orderAndPush(secondThursday, secondSaturday);\r\n      }\r\n    } else {\r\n      let thirdWednesday = this.findNthWeekdayOfMonth(3, 3, false);\r\n      if (this.now > thirdWednesday) {\r\n        thirdWednesday = this.findNthWeekdayOfMonth(3, 3, true);\r\n      }\r\n      this.orderAndPush(thirdWednesday);\r\n    }\r\n    return this.pickUpDateOptions;\r\n  }\r\n\r\n  private findNthWeekdayOfMonth(weekday: number, n: number, nextMonth: boolean) {\r\n    let pickUpDate = new Date();\r\n    let firstOfTheMonth = new Date(this.now.getFullYear(), this.now.getMonth(), 1);\r\n    if (nextMonth) {\r\n      pickUpDate = new Date(this.now.getFullYear(), this.now.getMonth() + 1);\r\n      firstOfTheMonth = new Date(this.now.getFullYear(), this.now.getMonth() + 1, 1);\r\n    }\r\n    const add = (weekday - firstOfTheMonth.getDay() + 7) % 7 + (n - 1) * 7;\r\n    pickUpDate.setDate(1 + add);\r\n    return pickUpDate;\r\n  }\r\n\r\n  private orderAndPush(firstDay: Date, secondDay?: Date) {\r\n    this.pickUpDateOptions = [];\r\n    if (firstDay && secondDay) {\r\n      if (firstDay < secondDay) {\r\n        this.pickUpDateOptions.push(this.formatDate(firstDay));\r\n        this.pickUpDateOptions.push(this.formatDate(secondDay));\r\n      } else {\r\n        this.pickUpDateOptions.push(this.formatDate(secondDay));\r\n        this.pickUpDateOptions.push(this.formatDate(firstDay));\r\n      }\r\n    } else {\r\n      this.pickUpDateOptions.push(this.formatDate(firstDay));\r\n    }\r\n  }\r\n\r\n  resetPickUpDate() {\r\n    const defaultPickUpDate: string = null;\r\n    this.pickUpDateSource.next(defaultPickUpDate);\r\n  }\r\n\r\n  updatePickUpDate(pickUpDate: string) {\r\n    this.pickUpDateSource.next(pickUpDate);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport PROD from 'src/app/uri.config';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PointService {\r\n  points = 0;\r\n  maxPoints = 0;\r\n  uri = PROD.uri;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  private pointSource = new BehaviorSubject(this.points);\r\n  currentPoints = this.pointSource.asObservable();\r\n\r\n  getCurrentPoints(): Observable<number> {\r\n    return this.currentPoints;\r\n  }\r\n\r\n  getPointsMapping() {\r\n    return this.httpClient.get(`${this.uri}/points-mappings`).pipe(\r\n      map(result => result[0].pointsMapping)\r\n    );\r\n  }\r\n\r\n  setMaxPoints(maxPoints: number) {\r\n    this.maxPoints = maxPoints;\r\n  }\r\n\r\n  updatePoints(currentPoints: number) {\r\n    this.pointSource.next(currentPoints);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport PROD from 'src/app/uri.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShopService {\r\n  uri = PROD.uri;\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getShop() {\r\n    return this.httpClient.get(`${this.uri}/shop`)\r\n    .pipe(\r\n      map(result => result[0].shop)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { TypeTracker } from '../models/type-tracker.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TypeTrackerService {\r\n\r\n  constructor() { }\r\n\r\n  typeTrackers: TypeTracker[] = [];\r\n\r\n  private typeTrackerSource = new BehaviorSubject(this.typeTrackers);\r\n  currentTypeTrackers = this.typeTrackerSource.asObservable();\r\n\r\n  addTypeTracker(typeIdToAdd: string) {\r\n    if (!this.typeTrackers.some((typeTracker: TypeTracker) => typeIdToAdd === typeTracker.typeId)) {\r\n      this.typeTrackers.push({typeId: typeIdToAdd, atTypeMaxAmount: false, typeAmountInCart: 0});\r\n      this.typeTrackerSource.next(this.typeTrackers);\r\n    }\r\n  }\r\n\r\n  getTypeTrackers(): Observable<Array<TypeTracker>> {\r\n    return this.currentTypeTrackers;\r\n  }\r\n\r\n  resetTypeTrackers() {\r\n    this.typeTrackers = [];\r\n    this.typeTrackerSource.next(this.typeTrackers);\r\n  }\r\n\r\n  updateTypeTrackers(componentTracker: TypeTracker) {\r\n    const index = this.typeTrackers.findIndex((typeTracker: TypeTracker) => typeTracker.typeId === componentTracker.typeId);\r\n    this.typeTrackers[index] = componentTracker;\r\n    this.typeTrackerSource.next(this.typeTrackers);\r\n  }\r\n}\r\n","export default {\r\n    uri: 'https://modern-pantry-test.herokuapp.com/api'\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}