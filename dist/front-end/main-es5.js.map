{"version":3,"sources":["webpack:///auth.config.ts","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/base-product/base-product.component.ts","webpack:///src/app/components/callback/callback.component.ts","webpack:///src/app/components/callback/callback.component.html","webpack:///src/app/components/cart/cart.component.ts","webpack:///src/app/components/cart/cart.component.html","webpack:///src/app/components/family/family.component.ts","webpack:///src/app/components/family/family.component.html","webpack:///src/app/components/intro-modal/intro-modal.component.ts","webpack:///src/app/components/intro-modal/intro-modal.component.html","webpack:///src/app/components/limited-product/limited-product.component.ts","webpack:///src/app/components/limited-product/limited-product.component.html","webpack:///src/app/components/limited-type/limited-type.component.ts","webpack:///src/app/components/limited-type/limited-type.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/product-type/product-type.component.ts","webpack:///src/app/components/product-type/product-type.component.html","webpack:///src/app/components/questions-modal/questions-modal.component.ts","webpack:///src/app/components/questions-modal/questions-modal.component.html","webpack:///src/app/components/shop/shop.component.ts","webpack:///src/app/components/shop/shop.component.html","webpack:///src/app/components/sub-type-product/sub-type-product.component.ts","webpack:///src/app/components/sub-type-product/sub-type-product.component.html","webpack:///src/app/components/submit-modal/submit-modal.component.ts","webpack:///src/app/components/submit-modal/submit-modal.component.html","webpack:///src/app/components/type-limited-product/type-limited-product.component.ts","webpack:///src/app/components/type-limited-product/type-limited-product.component.html","webpack:///src/app/components/type/type.component.ts","webpack:///src/app/components/type/type.component.html","webpack:///src/app/components/update-modal/update-modal.component.ts","webpack:///src/app/components/update-modal/update-modal.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/guards/family.guard.ts","webpack:///src/app/guards/no-family.guard.ts","webpack:///src/app/models/family.model.ts","webpack:///src/app/models/order.model.ts","webpack:///src/app/models/product.model.ts","webpack:///src/app/models/type-product.model.ts","webpack:///src/app/models/type.model.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/cart.service.ts","webpack:///src/app/services/family.service.ts","webpack:///src/app/services/interceptor.service.ts","webpack:///src/app/services/pick-up-date.service.ts","webpack:///src/app/services/point.service.ts","webpack:///src/app/services/shop.service.ts","webpack:///src/app/services/type-tracker.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["audience","domain","client_id","redirect_uri","window","location","origin","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","provide","useClass","multi","forRoot","imports","providers","AppComponent","authService","title","localAuthSetup","selector","templateUrl","styleUrls","AppModule","declarations","entryComponents","bootstrap","BaseProductComponent","cartService","subscription","getProductInCart","amount","updateCart","cart","isTypeInCart","getTypeInCart","products","push","productId","product","_id","productName","typeId","type","typeName","inCart","isProductInCart","find","cartItemByType","filter","length","CallbackComponent","handleAuthCallback","CartComponent","dialog","familyService","httpClient","pickUpDateService","pointService","router","snackBar","typeTrackerService","cartPanelOpenState","cartTypes","columns","contactPanelOpenState","householdPanelOpenState","MODAL_WIDTH","orderReceived","pickUpPanelOpenState","submitErrorCount","uri","getLogOutClicked","pipe","logOutClicked","getFamily","family","getCart","sortCart","getPickUpDate","pickUpDate","subscribe","resetCart","resetFamily","resetPickUpDate","setMaxPoints","updatePoints","resetTypeTrackers","order","received","sort","before","after","trim","toLowerCase","forEach","navigate","post","createOrder","response","status","dialogWidth","referral","open","backdropClass","width","disableClose","data","clearSession","duration","panelClass","modal","$event","returnValue","onBackToShopClick","openUpdateContactModal","openUpdateHouseholdModal","openUpdatePickUpModal","onSubmitOrder","FamilyComponent","contactForm","firstName","required","lastName","zipCode","pattern","phoneNumber","emailAddress","email","familyPanelCloseState","isCompleted","householdForm","familySize","schoolChildren","infants","pickUpForm","typeTrackers","requiredError","getPointsMapping","pointsMapping","mapping","minSize","maxSize","points","get","value","updatePickUpDate","controls","reset","pickUpDateOptions","getPickUpDateOptions","valid","setContactInfo","setHouseholdInfo","setPickUpInfo","updateFamily","initPoints","useValue","displayDefaultIndicatorType","setPickUpDateOptions","onShopClick","IntroModalComponent","dialogRef","close","onCloseClick","LimitedProductComponent","setLimit","setPoints","add","getCurrentPoints","currentPoints","updateInCartAndBtn","unsubscribe","addOneToCart","addProductToCart","removePoints","prodSizeAmount","getAmountInCart","limit","subtractOneFromCart","removeProductFromCart","addPoints","familyValue","school","minFamSize","maxFamSize","maxAmount","amountInCart","addBtnDisabled","isProductUnderLimit","hasEnoughPoints","subtractOneProduct","addOneProduct","LimitedTypeComponent","setProducts","sortProductsByName","setInfant","setSchool","setHasPoints","setTypeLimit","addTypeTracker","getTypeTrackers","typeTracker","console","log","typeAmountInCart","schoolType","typeSizeAmount","typeLimit","LoginComponent","openIntroModal","NavbarComponent","activatedRoute","routesButtonMap","Map","url","currentPath","setButtonContent","logout","buttonContent","route","openQuestionsModal","ProductTypeComponent","panelOpenState","productTypes","infantsIncluded","schoolIncluded","setOnlyInfantProducts","setOnlySchoolProducts","setSubType","setSubTypePanelOpen","setSuperType","setProductTypes","setTypeMaxAmount","sortProductTypesByName","atTypeMaxAmount","counter","infant","onlyInfantProducts","onlySchoolProducts","subTypes","subType","superTypeId","superType","superTypeName","typeMaxAmount","addOne","updateTypeTrackers","QuestionsModalComponent","ShopComponent","shopService","allSubTypes","limitedTypes","nonLimitedTypes","types","getShop","setTypes","sortTypesByName","onReviewOrderClick","SubTypeProductComponent","renderer","typename","atTypeLimit","updateTypeInCartAndBtn","subtractOneTypeLimitProduct","addOneTypeLimitProduct","SubmitModalComponent","TypeLimitedProductComponent","isAtTypeLimit","TypeComponent","loading","hasPoints","some","infantType","setProductsForFamilySize","subTypeProduct","UpdateModalComponent","setContactModal","setHouseHoldModal","setPickUpModal","setValue","AuthGuard","next","state","isAuthenticated","loggedIn","login","providedIn","FamilyGuard","hasFamilyCheck","parseUrl","familyValues","Object","values","nullValues","NoFamilyGuard","hasNoFamilyCheck","Family","Order","Product","TypeProduct","Type","AuthService","logOutClick","logOutClickSource","currentLogOutClick","asObservable","auth0Client","err","client","res","handleRedirectCallback","options","getTokenSilently","checkAuth","redirectPath","loginWithRedirect","appState","target","targetRoute","authComplete","cbRes","returnTo","CartService","cartSource","currentCart","defaultCart","FamilyService","familySource","currentFamily","defaultFamily","InterceptorService","getTokenSilently$","token","tokenReq","clone","setHeaders","Authorization","handle","PickUpDateService","daysOfTheWeek","now","Date","pickUpDateSource","currentPickUpDate","date","weekDay","getDay","day","getDate","month","getMonth","year","getFullYear","secondThursday","findNthWeekdayOfMonth","secondSaturday","orderAndPush","thirdWednesday","weekday","n","nextMonth","firstOfTheMonth","setDate","firstDay","secondDay","formatDate","defaultPickUpDate","PointService","maxPoints","pointSource","result","ShopService","shop","TypeTrackerService","typeTrackerSource","currentTypeTrackers","typeIdToAdd","componentTracker","index","findIndex","environment","production","bootstrapModule","catch","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["export default {\r\n    audience: 'pantry',\r\n    domain: 'dev-k7a6vb2q.auth0.com',\r\n    client_id: 'ZJwpYFKSx7gIUg2xyeKnxhy32XFNduZx',\r\n    redirect_uri: `${window.location.origin}/callback`\r\n};\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CartComponent } from './components/cart/cart.component';\r\nimport { ShopComponent } from './components/shop/shop.component';\r\nimport { FamilyComponent } from './components/family/family.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { FamilyGuard } from './guards/family.guard';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { NoFamilyGuard } from './guards/no-family.guard';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { InterceptorService } from './services/interceptor.service';\r\n\r\nconst routes: Routes = [\r\n  {path: 'callback', component: CallbackComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'family', component: FamilyComponent, canActivate: [AuthGuard, NoFamilyGuard]},\r\n  // {path: 'shop', component: ShopComponent, canActivate: [AuthGuard, FamilyGuard]},\r\n  {path: 'shop', component: ShopComponent, canActivate: [AuthGuard]},\r\n  {path: 'order', component: CartComponent, canActivate: [AuthGuard, FamilyGuard]},\r\n  // {path: 'cart', component: CartComponent, canActivate: [AuthGuard]},\r\n  {path: '', redirectTo: 'login', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: InterceptorService,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'Modern Pantry';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.localAuthSetup();\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ScrollingModule, ViewportRuler} from '@angular/cdk/scrolling';\r\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatNativeDateModule, MatOptionModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { ClickOutsideModule } from 'ng-click-outside';\r\nimport { CartComponent } from './components/cart/cart.component';\r\nimport { ShopComponent } from './components/shop/shop.component';\r\nimport { FamilyComponent } from './components/family/family.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SubmitModalComponent } from './components/submit-modal/submit-modal.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\n// import { ProductComponent } from './components/product/product.component';\r\nimport { ProductTypeComponent } from './components/product-type/product-type.component';\r\nimport { QuestionsModalComponent } from './components/questions-modal/questions-modal.component';\r\nimport { UpdateModalComponent } from './components/update-modal/update-modal.component';\r\nimport { IntroModalComponent } from './components/intro-modal/intro-modal.component';\r\nimport { TypeComponent } from './components/type/type.component';\r\nimport { LimitedTypeComponent } from './components/limited-type/limited-type.component';\r\nimport { BaseProductComponent } from './components/base-product/base-product.component';\r\nimport { LimitedProductComponent } from './components/limited-product/limited-product.component';\r\nimport { TypeLimitedProductComponent } from './components/type-limited-product/type-limited-product.component';\r\nimport { SubTypeProductComponent } from './components/sub-type-product/sub-type-product.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CartComponent,\r\n    ShopComponent,\r\n    FamilyComponent,\r\n    LoginComponent,\r\n    SubmitModalComponent,\r\n    NavbarComponent,\r\n    CallbackComponent,\r\n    // ProductComponent,\r\n    ProductTypeComponent,\r\n    QuestionsModalComponent,\r\n    UpdateModalComponent,\r\n    IntroModalComponent,\r\n    TypeComponent,\r\n    LimitedTypeComponent,\r\n    BaseProductComponent,\r\n    LimitedProductComponent,\r\n    TypeLimitedProductComponent,\r\n    SubTypeProductComponent,\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    ClickOutsideModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatBadgeModule,\r\n    MatCardModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatOptionModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSnackBarModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    ReactiveFormsModule,\r\n    ScrollingModule\r\n  ],\r\n  entryComponents: [\r\n    IntroModalComponent,\r\n    SubmitModalComponent,\r\n    QuestionsModalComponent,\r\n    UpdateModalComponent\r\n  ],\r\n  providers: [ViewportRuler],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CartItemsByType } from 'src/app/models/cart-items-by-type.model';\nimport { CartService } from 'src/app/services/cart.service';\nimport { Type } from 'src/app/models/type.model';\nimport { Family } from 'src/app/models/family.model';\nimport { TypeProduct } from 'src/app/models/type-product.model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-base-product',\n  templateUrl: './base-product.component.html',\n  styleUrls: ['./base-product.component.css']\n})\nexport class BaseProductComponent implements OnInit {\n  amountInCart: number;\n  @Input() cart: CartItemsByType[];\n  inCart: boolean;\n  @Input() family: Family;\n  @Input() product: TypeProduct;\n  subscription = new Subscription();\n  @Input() type: Type;\n\n  constructor(protected cartService: CartService) { }\n\n  ngOnInit() {\n  }\n\n  addOneToCart() {\n    this.getProductInCart().amount++;\n    this.cartService.updateCart(this.cart);\n  }\n\n  addProductToCart() {\n    if (this.isTypeInCart()) {\n      this.getTypeInCart().products.push(\n        {productId: this.product._id, productName: this.product.productName, amount: 1}\n        );\n    } else {\n      this.cart.push({typeId: this.type._id, typeName: this.type.typeName,\n        products: [{productId: this.product._id, productName: this.product.productName, amount: 1}]});\n    }\n    this.cartService.updateCart(this.cart);\n    this.inCart = this.isProductInCart();\n  }\n\n  getAmountInCart() {\n    if (this.isProductInCart()) {\n      return this.getProductInCart().amount;\n    } else {\n      return 0;\n    }\n  }\n\n  getProductInCart() {\n      return this.getTypeInCart().products.find(product => product.productId === this.product._id);\n  }\n\n  getTypeInCart() {\n    return this.cart.find((cartItemByType: CartItemsByType) => cartItemByType.typeId === this.type._id);\n  }\n\n  isProductInCart() {\n    if (this.isTypeInCart()) {\n      return this.getProductInCart() ? true : false;\n    } else {\n      return false;\n    }\n  }\n\n  isTypeInCart() {\n    return this.getTypeInCart() ? true : false;\n  }\n\n  removeProductFromCart() {\n    this.getTypeInCart().products = this.getTypeInCart().products.filter(product => product.productId  !== this.product._id);\n    if (!this.getTypeInCart().products.length) {\n      this.cart = this.cart.filter((cartItemByType: CartItemsByType) => cartItemByType.typeId !== this.type._id);\n    }\n    this.inCart = this.isProductInCart();\n    this.cartService.updateCart(this.cart);\n  }\n\n  subtractOneFromCart() {\n    this.getProductInCart().amount--;\n    this.cartService.updateCart(this.cart);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.css']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.handleAuthCallback();\r\n  }\r\n}\r\n","<mat-spinner></mat-spinner>\r\n","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { CartService } from '../../services/cart.service';\r\nimport { Family } from '../../models/family.model';\r\nimport { FamilyService } from '../../services/family.service';\r\nimport { Router } from '@angular/router';\r\nimport { Order } from 'src/app/models/order.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CartItemsByType } from 'src/app/models/cart-items-by-type.model';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { UpdateModalComponent } from '../update-modal/update-modal.component';\r\nimport { PickUpDateService } from 'src/app/services/pick-up-date.service';\r\nimport { SubmitModalComponent } from '../submit-modal/submit-modal.component';\r\nimport { TypeTrackerService } from 'src/app/services/type-tracker.service';\r\nimport { PointService } from 'src/app/services/point.service';\r\nimport { forkJoin } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent implements OnInit {\r\n  cart: CartItemsByType[];\r\n  cartPanelOpenState = false;\r\n  cartTypes: any[] = [];\r\n  columns: string[] = ['column1', 'column2'];\r\n  contactPanelOpenState = false;\r\n  family: Family;\r\n  householdPanelOpenState = false;\r\n  logOutClicked: boolean;\r\n  MODAL_WIDTH = '35rem';\r\n  orderReceived = false;\r\n  pickUpDate: string;\r\n  pickUpPanelOpenState = false;\r\n  submitErrorCount = 0;\r\n  uri = 'http://localhost:4000';\r\n\r\n  constructor(private authService: AuthService, private cartService: CartService, private dialog: MatDialog,\r\n              private familyService: FamilyService, private httpClient: HttpClient, private pickUpDateService: PickUpDateService,\r\n              private pointService: PointService, private router: Router, private snackBar: MatSnackBar,\r\n              private typeTrackerService: TypeTrackerService) { }\r\n\r\n  ngOnInit() {\r\n    forkJoin(\r\n      this.authService.getLogOutClicked().pipe(\r\n        tap((logOutClicked: boolean) => this.logOutClicked = logOutClicked)\r\n      ),\r\n      this.familyService.getFamily().pipe(\r\n        tap((family: Family) => this.family = family)\r\n      ),\r\n      this.cartService.getCart().pipe(\r\n        tap((cart: CartItemsByType[]) => {\r\n          this.cart = cart;\r\n          this.sortCart();\r\n        })\r\n      ),\r\n      this.pickUpDateService.getPickUpDate().pipe(\r\n        tap((pickUpDate: string) => this.pickUpDate = pickUpDate)\r\n      )\r\n    ).subscribe();\r\n  }\r\n\r\n  private clearSession() {\r\n    this.cartService.resetCart();\r\n    this.familyService.resetFamily();\r\n    this.pickUpDateService.resetPickUpDate();\r\n    this.pointService.setMaxPoints(0);\r\n    this.pointService.updatePoints(0);\r\n    this.typeTrackerService.resetTypeTrackers();\r\n  }\r\n\r\n  private createOrder() {\r\n    const order = new Order();\r\n    order.family = this.family;\r\n    order.cart = this.cart;\r\n    order.pickUpDate = this.pickUpDate;\r\n    order.received = false;\r\n    return order;\r\n  }\r\n\r\n  private sortCart() {\r\n    this.cart.sort((before, after) => before.typeName.trim().toLowerCase() > after.typeName.trim().toLowerCase() ? 1 : -1);\r\n    this.cart.forEach(type => {\r\n      type.products.sort((before, after) => before.productName.trim().toLowerCase() > after.productName.trim().toLowerCase() ? 1 : -1);\r\n    });\r\n  }\r\n\r\n  onBackToShopClick() {\r\n    this.router.navigate([`/shop`]);\r\n  }\r\n\r\n  onSubmitOrder() {\r\n    this.httpClient.post(`${this.uri}/orders/add`, this.createOrder()).subscribe((response: any) => {\r\n      if (response.status === 200) {\r\n        this.orderReceived = true;\r\n        let dialogWidth;\r\n        this.family.referral ? dialogWidth = '37rem' : dialogWidth = '45rem';\r\n        this.dialog.open(SubmitModalComponent, {\r\n          backdropClass: 'darkest-back-drop',\r\n          width: dialogWidth,\r\n          disableClose: true,\r\n          data: {\r\n            family: this.family,\r\n            pickUpDate: this.pickUpDate,\r\n          }\r\n        });\r\n        this.clearSession();\r\n      } else {\r\n        if (this.submitErrorCount < 4) {\r\n          this.snackBar.open('Submission failed. Please try again', 'Dismiss', {\r\n            duration: 2000,\r\n            panelClass: ['red-snackbar']\r\n          });\r\n          this.submitErrorCount++;\r\n        } else {\r\n          this.snackBar.open('Terminal Error.', 'Dismiss', {\r\n            duration: 2000,\r\n            panelClass: ['red-snackbar']\r\n          });\r\n          this.router.navigate([`/`]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  openUpdateContactModal() {\r\n    this.dialog.open(UpdateModalComponent, {\r\n      backdropClass: 'darker-back-drop',\r\n      data: {\r\n        modal: 'contact',\r\n        family: this.family\r\n      },\r\n      disableClose: true,\r\n      width: this.MODAL_WIDTH\r\n    });\r\n  }\r\n\r\n  openUpdateHouseholdModal() {\r\n    this.dialog.open(UpdateModalComponent, {\r\n      backdropClass: 'darker-back-drop',\r\n      data: {\r\n        modal: 'household',\r\n        family: this.family\r\n      },\r\n      disableClose: true,\r\n      width: this.MODAL_WIDTH\r\n    });\r\n  }\r\n\r\n  openUpdatePickUpModal() {\r\n    this.dialog.open(UpdateModalComponent, {\r\n      backdropClass: 'darker-back-drop',\r\n      data: {\r\n        modal: 'pick-up',\r\n        family: this.family,\r\n        pickUpDate: this.pickUpDate\r\n      },\r\n      disableClose: true,\r\n      width: this.MODAL_WIDTH\r\n    });\r\n  }\r\n\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  unloadNotification($event: any) {\r\n    if (!this.orderReceived && !this.logOutClicked) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div id=\"flex-grid\">  \r\n  \r\n  <aside class=\"button-container\">\r\n    <mat-toolbar>Change Cart Items?</mat-toolbar>\r\n    <div class=\"button-div\">\r\n      <button mat-raised-button (click)=\"onBackToShopClick()\">Back to Shop</button>\r\n    </div>  \r\n  </aside>\r\n\r\n  <main id=\"overview\">\r\n\r\n    <mat-toolbar>Order Overview</mat-toolbar>\r\n    <cdk-virtual-scroll-viewport  [itemSize]=\"\">\r\n\r\n    <mat-expansion-panel (opened) =\"contactPanelOpenState = true\" (closed)=\"contactPanelOpenState = false\" [expanded]=\"contactPanelOpenState\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          Contact Information\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          {{contactPanelOpenState ? 'close' : 'open'}}\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <div class=\"info-container\">\r\n        <mat-card >{{'First Name: ' + family.firstName}}</mat-card>\r\n        <mat-card >{{'Last Name: ' + family.lastName}}</mat-card>\r\n        <mat-card>{{'Phone Number: ' + family.phoneNumber}}</mat-card>\r\n        <mat-card>{{'Zip Code: ' + family.zipCode}}</mat-card>\r\n        <mat-card *ngIf=\"family.emailAddress\">{{'Email Address: ' + family.emailAddress}}</mat-card>\r\n        <div class=\"update-button-div\">\r\n          <button mat-raised-button (click)=\"openUpdateContactModal()\">Update Contact</button>\r\n        </div>\r\n      </div>\r\n    <mat-action-row (click)=\"contactPanelOpenState = false\"></mat-action-row>    \r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel (opened) =\"householdPanelOpenState = true\" (closed)=\"householdPanelOpenState = false\" [expanded]=\"householdPanelOpenState\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          Household Information\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          {{householdPanelOpenState ? 'close' : 'open'}}\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <div class=\"info-container\">\r\n        <mat-card> {{'Family Size: ' + family.familySize}}</mat-card>\r\n        <mat-card *ngIf=\"family.schoolChildren !== 0\">{{'School Children: ' + family.schoolChildren}}</mat-card>\r\n        <mat-card *ngIf=\"family.infants\">Infants: Included</mat-card>\r\n        <div class=\"update-button-div\">\r\n          <button mat-raised-button (click)=\"openUpdateHouseholdModal()\">Update Household</button>  \r\n        </div>\r\n      </div>\r\n    <mat-action-row (click)=\"householdPanelOpenState = false\"></mat-action-row>  \r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel (opened) =\"pickUpPanelOpenState = true\" (closed)=\"pickUpPanelOpenState = false\" [expanded]=\"pickUpPanelOpenState\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          Pick Up Information\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          {{pickUpPanelOpenState ? 'close' : 'open'}}\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <div class=\"info-container\">\r\n        <mat-card>{{family.referral ? 'Pick Up Location: CELC' : 'Pick Up Location: Broad Street Food Pantry'}}</mat-card>\r\n        <mat-card>{{'Pick Up Date: ' + pickUpDate}}</mat-card>\r\n        <div class=\"update-button-div\">\r\n          <button mat-raised-button (click)=\"openUpdatePickUpModal()\">Update Pick Up</button>\r\n        </div>\r\n      </div>\r\n    <mat-action-row (click)=\"pickUpPanelOpenState = false\"></mat-action-row>  \r\n    </mat-expansion-panel>\r\n    \r\n    <mat-expansion-panel (opened) =\"cartPanelOpenState = true\" (closed)=\"cartPanelOpenState = false\" [expanded]=\"cartPanelOpenState\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        Your Cart\r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n        {{cartPanelOpenState ? 'close' : 'open'}}\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <mat-card id=\"empty-cart\" *ngIf=\"!cart.length\">\r\n        Your cart is empty!<br><br>\r\n        To place an order, please press the \"Back to Shop\" button and add items.\r\n    </mat-card>\r\n    <ng-container *ngIf=\"cart.length\">\r\n      <ng-container *ngFor=\"let type of cart\">\r\n          <mat-toolbar class=\"items-toolbar top-table\">{{type.typeName}}</mat-toolbar>\r\n          <table mat-table [dataSource]=\"type.products\">\r\n            <ng-container matColumnDef=\"column1\">\r\n              <th mat-header-cell *matHeaderCellDef>Name</th>\r\n              <td mat-cell *matCellDef=\"let element\">{{element.productName}}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"column2\">\r\n              <th mat-header-cell *matHeaderCellDef>Amount</th>\r\n              <td mat-cell *matCellDef=\"let element\">{{element.amount}}</td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: columns\"></tr>\r\n          </table>\r\n          <div class=\"items-toolbar bottom-table\"></div>\r\n      </ng-container>\r\n    </ng-container>\r\n    <mat-action-row (click)=\"cartPanelOpenState = false\"></mat-action-row>  \r\n    </mat-expansion-panel>\r\n    \r\n    </cdk-virtual-scroll-viewport>    \r\n  </main>\r\n    \r\n  <aside class=\"button-container\">\r\n    <mat-toolbar>Ready to Submit?</mat-toolbar>\r\n    <div class=\"button-div\">\r\n      <button mat-raised-button (click)=\"onSubmitOrder()\" [disabled]=\"!cart.length\">Submit Order</button>\r\n    </div>  \r\n  </aside>\r\n</div>  \r\n","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CartService } from '../../services/cart.service';\r\nimport { Family } from '../../models/family.model';\r\nimport { FamilyService } from '../../services/family.service';\r\nimport { PointService } from 'src/app/services/point.service';\r\nimport { TypeTrackerService } from 'src/app/services/type-tracker.service';\r\nimport { TypeTracker } from 'src/app/models/type-tracker.model';\r\nimport { PickUpDateService } from 'src/app/services/pick-up-date.service';\r\nimport { CartItemsByType } from 'src/app/models/cart-items-by-type.model';\r\nimport { forkJoin } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport {STEPPER_GLOBAL_OPTIONS} from '@angular/cdk/stepper';\r\n\r\n@Component({\r\n  selector: 'app-family',\r\n  templateUrl: './family.component.html',\r\n  styleUrls: ['./family.component.css'],\r\n  providers: [{\r\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: {displayDefaultIndicatorType: false}\r\n  }]\r\n})\r\nexport class FamilyComponent implements OnInit {\r\n  cart: CartItemsByType[];\r\n  contactForm = new FormGroup({\r\n    firstName: new FormControl('', Validators.required),\r\n    lastName: new FormControl('', Validators.required),\r\n    zipCode: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]{5}$/)]),\r\n    phoneNumber: new FormControl('', [Validators.required, Validators.pattern(/^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}$/)]),\r\n    emailAddress: new FormControl('', Validators.email),\r\n  });\r\n  family: Family;\r\n  familyPanelCloseState = true;\r\n  isCompleted = false;\r\n  householdForm = new FormGroup({\r\n    familySize: new FormControl('', Validators.required),\r\n    schoolChildren: new FormControl('', Validators.required),\r\n    infants: new FormControl('', Validators.required),\r\n  });\r\n  logOutClicked: boolean;\r\n  pickUpForm = new FormGroup({\r\n    referral: new FormControl('', Validators.required),\r\n    pickUpDate: new FormControl('', Validators.required)\r\n  });\r\n  pickUpDateOptions: string[];\r\n  pointsMapping: [{minSize: number, maxSize: number, points: number}];\r\n  typeTrackers: TypeTracker[] = [];\r\n  requiredError = 'This field is required.';\r\n\r\n  constructor(protected authService: AuthService, protected cartService: CartService, protected familyService: FamilyService,\r\n              protected pickUpDateService: PickUpDateService, protected pointService: PointService, protected router: Router,\r\n              protected typeTrackerService: TypeTrackerService) {}\r\n\r\n  ngOnInit() {\r\n    this.familyService.resetFamily();\r\n    this.cartService.resetCart();\r\n    this.pickUpDateService.resetPickUpDate();\r\n    this.pointService.setMaxPoints(0);\r\n    this.pointService.updatePoints(0);\r\n    this.typeTrackerService.resetTypeTrackers();\r\n    forkJoin(\r\n      this.authService.getLogOutClicked().pipe(\r\n        tap((logOutClicked: boolean) => this.logOutClicked = logOutClicked)\r\n      ),\r\n      this.familyService.getFamily().pipe(\r\n        tap((family: Family) => this.family = family)\r\n      ),\r\n      this.pointService.getPointsMapping().pipe(\r\n        tap(pointsMapping => this.pointsMapping = pointsMapping)\r\n      )\r\n    ).subscribe();\r\n  }\r\n\r\n  initPoints(familySize: number) {\r\n    this.pointsMapping.forEach(mapping => {\r\n      if (mapping.minSize <= familySize && familySize <= mapping.maxSize) {\r\n        this.pointService.setMaxPoints(mapping.points);\r\n        this.pointService.updatePoints(mapping.points);\r\n      }\r\n    });\r\n  }\r\n\r\n  setContactInfo() {\r\n    this.family.firstName = this.family.firstName = this.contactForm.get('firstName').value;\r\n    this.family.lastName = this.contactForm.get('lastName').value;\r\n    this.family.phoneNumber = this.contactForm.get('phoneNumber').value;\r\n    this.family.zipCode = this.contactForm.get('zipCode').value;\r\n    if (this.contactForm.get('emailAddress').value) {\r\n      this.family.emailAddress = this.contactForm.get('emailAddress').value;\r\n    }\r\n  }\r\n\r\n  setHouseholdInfo() {\r\n    this.family.familySize = this.householdForm.get('familySize').value;\r\n    this.family.schoolChildren = this.householdForm.get('schoolChildren').value;\r\n    this.family.infants = this.householdForm.get('infants').value;\r\n  }\r\n\r\n  setPickUpInfo() {\r\n    this.family.referral = this.pickUpForm.get('referral').value;\r\n    this.pickUpDateService.updatePickUpDate(this.pickUpForm.get('pickUpDate').value);\r\n  }\r\n\r\n  setPickUpDateOptions(referral: boolean) {\r\n    this.pickUpForm.controls.pickUpDate.reset();\r\n    this.pickUpDateOptions = this.pickUpDateService.getPickUpDateOptions(referral);\r\n  }\r\n\r\n  onShopClick() {\r\n    if (this.contactForm.valid && this.householdForm.valid && this.pickUpForm.valid) {\r\n      this.setContactInfo();\r\n      this.setHouseholdInfo();\r\n      this.setPickUpInfo();\r\n      this.familyService.updateFamily(this.family);\r\n      this.initPoints(this.family.familySize);\r\n      this.router.navigate([`/shop`]);\r\n    }\r\n  }\r\n\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  unloadNotification($event: any) {\r\n    if (!this.logOutClicked) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"flex-grid\">\r\n  <mat-card id=\"family-form\">\r\n    <mat-horizontal-stepper linear labelPosition=\"bottom\">\r\n      <mat-step [formGroup]=\"contactForm\" state=\"contact\" [completed]=\"contactForm.status === 'VALID'\">\r\n      <ng-template matStepLabel>Contact Information</ng-template>  \r\n        <div>  \r\n          <mat-form-field>\r\n            <mat-label>First Name</mat-label>\r\n            <input matInput formControlName=\"firstName\">\r\n            <mat-error *ngIf=\"contactForm.get('firstName').hasError('required')\">{{requiredError}}</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Last Name</mat-label>\r\n            <input matInput formControlName=\"lastName\">\r\n            <mat-error *ngIf=\"contactForm.get('lastName').hasError('required')\">{{requiredError}}</mat-error>\r\n          </mat-form-field>\r\n        </div>  \r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Zip Code</mat-label>\r\n            <input matInput formControlName=\"zipCode\" placeholder=\"Example: 78965\">\r\n            <mat-error *ngIf=\"contactForm.get('zipCode').hasError('pattern')\">Zipcode must be exactly five digits (example: 64359).</mat-error>\r\n            <mat-error *ngIf=\"contactForm.get('zipCode').hasError('required')\">{{requiredError}}</mat-error>\r\n          </mat-form-field>  \r\n        </div>\r\n        <div>\r\n          <mat-form-field> \r\n          <mat-label>Phone Number</mat-label>\r\n          <input matInput formControlName=\"phoneNumber\" placeholder=\"Example: 777-777-7777\">\r\n          <mat-error *ngIf=\"contactForm.get('phoneNumber').hasError('pattern')\">Phone number must be in the following format: 555-555-5555.</mat-error>\r\n          <mat-error *ngIf=\"contactForm.get('phoneNumber').hasError('required')\">{{requiredError}}</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <!-- <div>  \r\n          <mat-form-field>\r\n            <mat-label>Email Address (optional)</mat-label>\r\n            <input matInput formControlName=\"emailAddress\">\r\n            <mat-error *ngIf=\"contactForm.get('emailAddress').hasError('email')\">Email address must include the @ symbol.</mat-error>\r\n          </mat-form-field>\r\n        </div> -->\r\n        <div class=\"button-space\">\r\n          <div></div>\r\n          <button mat-raised-button matStepperNext [disabled]=\"!contactForm.valid\">Next</button>\r\n        </div>\r\n        </mat-step>\r\n        <mat-step [formGroup]=\"householdForm\" state=\"household\" [completed]=\"householdForm.status === 'VALID'\">  \r\n        <ng-template matStepLabel>Household Information</ng-template>    \r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Family Size</mat-label>\r\n            <mat-select matInput formControlName=\"familySize\">\r\n              <mat-option [value]=1>1</mat-option>\r\n              <mat-option [value]=2>2</mat-option>\r\n              <mat-option [value]=3>3</mat-option>\r\n              <mat-option [value]=4>4</mat-option>\r\n              <mat-option [value]=5>5</mat-option>\r\n              <mat-option [value]=6>6</mat-option>\r\n              <mat-option [value]=7>7</mat-option>\r\n              <mat-option [value]=8>8</mat-option>\r\n              <mat-option [value]=9>9+</mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"householdForm.get('familySize').hasError('required')\">{{requiredError}}</mat-error>  \r\n          </mat-form-field>\r\n        </div>\r\n        <div>  \r\n          <mat-form-field>\r\n            <mat-label>School Aged Children</mat-label>\r\n            <mat-select matInput formControlName=\"schoolChildren\">\r\n              <mat-option [value]=0>0</mat-option>\r\n              <mat-option [value]=1>1</mat-option>\r\n              <mat-option [value]=2>2</mat-option>\r\n              <mat-option [value]=3>3</mat-option>\r\n              <mat-option [value]=4>4</mat-option>\r\n              <mat-option [value]=5>5</mat-option>\r\n              <mat-option [value]=6>6+</mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"householdForm.get('schoolChildren').hasError('required')\">{{requiredError}}</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>  \r\n          <mat-form-field>\r\n            <mat-label>Any Infants in the Family?</mat-label>\r\n            <mat-select matInput formControlName=\"infants\">\r\n              <mat-option [value]=true>Yes</mat-option>\r\n              <mat-option [value]=false>No</mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"householdForm.get('infants').hasError('required')\">{{requiredError}}</mat-error>  \r\n          </mat-form-field>  \r\n        </div>\r\n        <div class=\"button-space\">\r\n          <button mat-raised-button matStepperPrevious>Back</button>\r\n          <button mat-raised-button matStepperNext [disabled]=\"!householdForm.valid\">Next</button>\r\n        </div>\r\n        </mat-step>\r\n        <mat-step [formGroup]=\"pickUpForm\" state=\"pick-up\" [completed]=\"pickUpForm.status === 'VALID'\">\r\n        <ng-template matStepLabel>Pick Up Options</ng-template>  \r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Were you referred by CELC?</mat-label>\r\n            <mat-select matInput formControlName=\"referral\" (selectionChange)=\"setPickUpDateOptions($event.value)\">\r\n              <mat-option [value]=true>Yes</mat-option>\r\n              <mat-option [value]=false>No</mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"pickUpForm.get('referral').hasError('required')\">{{requiredError}}</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Pick Up Dates:</mat-label>\r\n            <mat-select matInput formControlName=\"pickUpDate\">\r\n              <mat-option *ngFor=\"let pickUpDate of pickUpDateOptions\" [value]=\"pickUpDate\">{{pickUpDate}}</mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"pickUpForm.get('pickUpDate').hasError('required')\">This field is required.</mat-error>  \r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"button-space\">\r\n          <button mat-raised-button matStepperPrevious>Back</button>\r\n          <button mat-raised-button matStepperNext [disabled]=\"!pickUpForm.valid\" (click)=\"onShopClick()\">Shop!</button>\r\n        </div>\r\n      </mat-step>\r\n      <ng-template matStepperIcon=\"contact\">\r\n        <mat-icon>person</mat-icon>\r\n      </ng-template>\r\n      <ng-template matStepperIcon=\"household\">\r\n        <mat-icon>house</mat-icon>\r\n      </ng-template>\r\n      <ng-template matStepperIcon=\"pick-up\">\r\n        <mat-icon>directions_car</mat-icon>\r\n      </ng-template>\r\n    </mat-horizontal-stepper>\r\n  </mat-card>  \r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {STEPPER_GLOBAL_OPTIONS} from '@angular/cdk/stepper';\n\n@Component({\n  selector: 'app-intro-modal',\n  templateUrl: './intro-modal.component.html',\n  styleUrls: ['./intro-modal.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: {displayDefaultIndicatorType: false}\n  }]\n})\nexport class IntroModalComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<IntroModalComponent>) { }\n\n  ngOnInit() {\n  }\n\n  onCloseClick() {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"questions\">  \n    <mat-toolbar>How It Works</mat-toolbar>\n    <mat-horizontal-stepper labelPosition=\"bottom\">\n        <mat-step label=\"Qualify\" state=\"qualification\" completed=\"false\">\n        <mat-card>[Qualifications Goes Here]</mat-card>\n        </mat-step>\n        <mat-step label=\"Order\" state=\"order\" completed=\"false\">\n        <mat-card>[Placing an Order Goes Here]</mat-card>\n        </mat-step>\n        <mat-step label=\"Pick Up\" state=\"pick-up\" completed=\"false\">\n        <mat-card>[Pick Up Goes Here]</mat-card>\n        </mat-step>\n        <ng-template matStepperIcon=\"contact\">\n        <mat-icon>person</mat-icon>\n        </ng-template>\n        <ng-template matStepperIcon=\"qualification\">\n        <mat-icon>thumb_up_alt</mat-icon>\n        </ng-template>\n        <ng-template matStepperIcon=\"order\">\n        <mat-icon>computer</mat-icon>\n        </ng-template>\n        <ng-template matStepperIcon=\"pick-up\">\n            <mat-icon>commute</mat-icon>\n        </ng-template>\n        <ng-template matStepperIcon=\"edit\">\n        <mat-icon>help</mat-icon>\n        </ng-template>\n    </mat-horizontal-stepper>\n    <div>\n      <button id=\"return\" mat-raised-button (click)=\"onCloseClick()\"cdkFocusInitial>Return to Log In</button>\n    </div>      \n  </div>\n  ","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { BaseProductComponent } from '../base-product/base-product.component';\nimport { CartService } from 'src/app/services/cart.service';\nimport { PointService } from 'src/app/services/point.service';\n\n@Component({\n  selector: 'app-limited-product',\n  templateUrl: './limited-product.component.html',\n  styleUrls: ['./limited-product.component.css']\n})\nexport class LimitedProductComponent extends BaseProductComponent implements OnInit, OnDestroy {\n  addBtnDisabled: boolean;\n  currentPoints: number;\n  limit: number;\n  points: number;\n\n  constructor(protected cartService: CartService, protected pointService: PointService) {\n    super(cartService);\n  }\n\n  ngOnInit() {\n    this.setLimit();\n    this.setPoints();\n    this.inCart = this.isProductInCart();\n    this.subscription.add(\n      this.pointService.getCurrentPoints().subscribe(currentPoints => {\n      this.currentPoints = currentPoints;\n      this.updateInCartAndBtn();\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  addPoints() {\n    if (this.product.points) {\n      this.currentPoints = this.currentPoints + this.product.points;\n      this.pointService.updatePoints(this.currentPoints);\n    }\n  }\n\n  addOneProduct() {\n    this.isProductInCart() ? this.addOneToCart() : this.addProductToCart();\n    this.removePoints();\n    if (!this.product.points) {\n      this.updateInCartAndBtn();\n    }\n  }\n\n  hasEnoughPoints() {\n    if (this.product.points) {\n      return this.currentPoints >= this.product.points;\n    } else {\n      return true;\n    }\n  }\n\n  isProductUnderLimit() {\n    if (this.product.prodSizeAmount) {\n      return this.getAmountInCart() < this.limit;\n    } else {\n      return true;\n    }\n  }\n\n  subtractOneProduct() {\n    this.getAmountInCart() >  1 ? this.subtractOneFromCart() : this.removeProductFromCart();\n    this.addPoints();\n    if (!this.product.points) {\n      this.updateInCartAndBtn();\n    }\n  }\n\n  removePoints() {\n    if (this.product.points) {\n      this.currentPoints = this.currentPoints - this.product.points;\n      this.pointService.updatePoints(this.currentPoints);\n    }\n  }\n\n  setLimit() {\n    if (this.product.prodSizeAmount) {\n      let familyValue: number;\n      this.product.school ? familyValue = this.family.schoolChildren : familyValue = this.family.familySize;\n      this.product.prodSizeAmount.forEach(mapping => {\n          if (mapping.minFamSize <= familyValue && familyValue <= mapping.maxFamSize) {\n          this.limit = mapping.maxAmount;\n          }\n      });\n    }\n  }\n\n  setPoints() {\n    if (this.product.points) {\n      this.points = this.product.points;\n    }\n  }\n\n  updateInCartAndBtn() {\n    this.amountInCart = this.getAmountInCart();\n    this.addBtnDisabled = !this.isProductUnderLimit() || !this.hasEnoughPoints();\n  }\n}\n","\n<mat-card>\n    <div class=\"product-name\">{{product.productName}}</div>\n    <div class=icon-button-container>\n        <div>\n            <div class=\"info-container\">\n                <div class=\"icon-container\">\n                    <mat-icon class=\"icon-badge\" [matBadge]=\"limit\">add_box</mat-icon>\n                    <div>Limit</div>\n                </div>\n                <div *ngIf=\"points\" class=\"icon-container\">\n                    <mat-icon class=\"icon-badge\" [matBadge]=\"points\">attach_money</mat-icon>\n                    <div>Points</div>\n                </div>\n            </div>\n        </div>\n        <div></div>\n        <div class=amount-button-container>\n            <div class=\"icon-container\">\n                <mat-icon class=\"badge-cart\" [matBadge]=\"amountInCart\">shopping_cart</mat-icon>\n                <div>Amount in Cart</div>\n            </div>\n            <span class=\"button-container\">\n                <button mat-raised-button (click)=\"subtractOneProduct()\" [disabled]=\"!inCart\">-</button>\n                <button mat-raised-button (click)=\"addOneProduct()\" [disabled]=\"addBtnDisabled\">+</button>\n            </span>\n        </div>\n    </div>     \n</mat-card>\n<!-- <div class=\"limit-reached-container\">\n    <span *ngIf=\"!isProductUnderLimit()\" class=\"limit-info-sub\" [style.background-color]=\"'red'\">Limit Reached</span>\n    <span></span>\n    <span *ngIf=\"currentPoints === 0\" class=\"limit-info-sub\" [style.background-color]=\"currentPoints === 0 ? 'red' : 'dodgerblue'\">No Points Remaining</span>\n</div>        -->\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { TypeComponent } from '../type/type.component';\nimport { TypeTracker } from 'src/app/models/type-tracker.model';\nimport { TypeTrackerService } from 'src/app/services/type-tracker.service';\nimport { PointService } from 'src/app/services/point.service';\nimport { combineLatest, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-limited-type',\n  templateUrl: './limited-type.component.html',\n  styleUrls: ['./limited-type.component.css']\n})\nexport class LimitedTypeComponent extends TypeComponent implements OnInit, OnDestroy {\n  typeLimit: number;\n  typeAmountInCart: number;\n  typeTracker: TypeTracker;\n\n\n  constructor(protected pointService: PointService, private typeTrackerService: TypeTrackerService) {\n    super(pointService);\n  }\n\n  ngOnInit() {\n    this.setProducts();\n    this.sortProductsByName();\n    this.setInfant();\n    this.setSchool();\n    this.setHasPoints();\n    this.setTypeLimit();\n    this.typeTrackerService.addTypeTracker(this.type._id);\n    this.subscription.add(\n      combineLatest(\n      this.pointService.getCurrentPoints(),\n      this.typeTrackerService.getTypeTrackers()\n    ).subscribe(([currentPoints, typeTrackers]) => {\n      this.currentPoints = currentPoints;\n      this.typeTracker = typeTrackers.find((typeTracker: TypeTracker) => typeTracker.typeId = this.type._id);\n      console.log(this.typeTracker);\n      this.typeAmountInCart = this.typeTracker.typeAmountInCart;\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  setTypeLimit() {\n    let familyValue: number;\n    this.schoolType ? familyValue = this.family.schoolChildren : familyValue = this.family.familySize;\n    this.type.typeSizeAmount.forEach(mapping => {\n      if (mapping.minFamSize <= familyValue && familyValue <= mapping.maxFamSize) {\n        this.typeLimit = mapping.maxAmount;\n      }\n    });\n  }\n}\n","<ng-container *ngIf=\"(!schoolType || schoolIncluded) && (!infantType || infantsIncluded)\"> \n    <mat-expansion-panel (opened) =\"panelOpenState = true\" (closed)=\"panelOpenState = false\" [expanded]=\"panelOpenState\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          {{type.typeName}}\n        </mat-panel-title>\n        <mat-panel-description>\n          {{panelOpenState ? 'close' : 'open'}}\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <mat-card *ngIf=\"panelOpenState\" class=\"icon-top-container\" >\n        <div *ngIf=\"hasPoints\" class=\"icon-sub-container\">\n          <div class=\"label-container\">\n            <div>{{currentPoints}}</div>\n            <div class=\"label\">\n              <span>Points Remaining</span>\n              <span class=\"icon-container\">\n                <mat-icon>attach_money</mat-icon>\n              </span>\n            </div>\n          </div>\n        </div>\n        <div class=\"icon-sub-container\">\n          <div class=\"label-container\">\n            <div>{{typeLimit}}</div>\n            <div class=\"label\">\n              <span>{{type.typeName + ' Limit'}}</span>\n              <span class=\"icon-container\">\n                <mat-icon>add_box</mat-icon>\n              </span>\n            </div>\n          </div>\n        </div>\n        <div class=\"icon-sub-container\">\n          <div class=\"label-container\">\n            <div>{{typeAmountInCart}}</div>\n            <div class=\"label\">\n              <span>{{type.typeName + ' in Cart'}}</span>\n              <span class=\"icon-container\">\n                <mat-icon>shopping_cart</mat-icon>\n              </span>\n            </div>\n          </div>\n        </div>\n      </mat-card>\n      <div class=\"product-card-container\" *ngIf=\"panelOpenState\">\n        <div *ngFor=\"let product of products\" class=\"product-card\">\n          <app-type-limited-product \n            [cart]=\"cart\" [family]=\"family\" [product]=\"product\" [type]=\"type\" [typeLimit]=\"typeLimit\">\n          </app-type-limited-product>\n        </div>\n      </div>\n      <mat-action-row (click)=\"closePanel()\"></mat-action-row>\n    </mat-expansion-panel>\n  </ng-container>   \n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { FamilyService } from 'src/app/services/family.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { IntroModalComponent } from '../intro-modal/intro-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService, private dialog: MatDialog, private familyService: FamilyService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.familyService.resetFamily();\r\n  }\r\n\r\n  openIntroModal() {\r\n    this.dialog.open(IntroModalComponent, {\r\n      backdropClass: 'darker-back-drop',\r\n      width: '35rem',\r\n    });\r\n  }\r\n\r\n  toFamily() {\r\n    this.router.navigate([`/family`]);\r\n  }\r\n\r\n}\r\n","<div id=\"top-container\"> \r\n    <mat-card id=\"card-container\"> \r\n    <img id=\"logo\" src=\"../../../assets/images/bsfp-logo-login.png\" alt=\"bsfp-logo-login\">\r\n    <div id=\"message-button-container\" class=\"center\">\r\n        <button mat-fab (click)=\"openIntroModal()\">First visit?<br>Click here.</button> \r\n        <div id=\"message-button-middle\">\r\n            <mat-toolbar>Welcome Neighbor!</mat-toolbar>  \r\n            <mat-card>\r\n                <div class=\"center\">\r\n                    <button mat-raised-button (click)=\"authService.login()\" *ngIf=\"!authService.loggedIn\">Log In</button>\r\n                    <button mat-raised-button (click)=\"toFamily()\" *ngIf=\"authService.loggedIn\">Let's Begin!</button>\r\n                </div> \r\n            </mat-card>\r\n        </div> \r\n    </div>  \r\n    </mat-card>\r\n</div>\r\n<div id=\"cookie-message\" class=\"center\">\r\n    <mat-card >[Cookie Message]</mat-card>\r\n</div>    ","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { QuestionsModalComponent } from '../questions-modal/questions-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  buttonContent: string;\r\n  currentPath: string;\r\n  routesButtonMap = new Map([\r\n    ['family', 'Form Help'],\r\n    ['shop', 'Shop Help'],\r\n    ['order', 'Order Help']\r\n  ]);\r\n  constructor(private activatedRoute: ActivatedRoute, public authService: AuthService, private dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.url.subscribe(currentPath => this.currentPath = currentPath[0].path);\r\n    this.setButtonContent();\r\n  }\r\n\r\n  onLogOutClick() {\r\n    this.authService.logOutClicked();\r\n    this.authService.logout();\r\n  }\r\n\r\n  openQuestionsModal() {\r\n    this.dialog.open(QuestionsModalComponent, {\r\n      backdropClass: 'darker-back-drop',\r\n      data: this.currentPath,\r\n      width: '35rem',\r\n    });\r\n  }\r\n\r\n  setButtonContent() {\r\n    this.routesButtonMap.forEach((buttonContent, route) => {\r\n      if (route === this.currentPath) {\r\n        this.buttonContent = buttonContent;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<mat-toolbar id=\"header\">\r\n  <!-- <img src=\"../../../assets/images/bsfp-logo-navbar.png\" alt=\"bsfp-logo-navbar\"> -->\r\n  <h2>Broad Street Food Pantry Online</h2>\r\n  <span></span>\r\n  <button mat-raised-button (click)=\"openQuestionsModal()\">{{buttonContent}}</button> \r\n  <button mat-raised-button (click)=\"onLogOutClick()\" *ngIf=\"authService.loggedIn\">Log Out</button>\r\n</mat-toolbar>\r\n<mat-toolbar id=\"footer\">\r\n  <a href=\"https://bspc.org/foodpantry/\" target=\"_blank\">Pantry Information</a>\r\n  <a href=\"https://bspc.org/privacy-policy/\" target=\"_blank\">Privacy Policy</a>\r\n</mat-toolbar>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Family } from 'src/app/models/family.model';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { TypeTracker } from 'src/app/models/type-tracker.model';\r\nimport { TypeTrackerService } from 'src/app/services/type-tracker.service';\r\n\r\n@Component({\r\n  selector: 'app-product-type',\r\n  templateUrl: './product-type.component.html',\r\n  styleUrls: ['./product-type.component.css']\r\n})\r\nexport class ProductTypeComponent implements OnInit {\r\n  atTypeMaxAmount: boolean;\r\n  @Input() family: Family;\r\n  infantsIncluded: boolean;\r\n  onlyInfantProducts: boolean;\r\n  onlySchoolProducts: boolean;\r\n  panelOpenState = false;\r\n  products: Product[] = [];\r\n  productTypes: any[] = [];\r\n  schoolIncluded: boolean;\r\n  subType: boolean;\r\n  @Input() subTypes: Type[];\r\n  @Input() superType: {superTypeId: string, superTypeName: string};\r\n  @Input() type: Type;\r\n  typeMaxAmount: number;\r\n  typeTracker: TypeTracker;\r\n\r\n  constructor(private typeTrackerService: TypeTrackerService) { }\r\n\r\n  ngOnInit() {\r\n    this.infantsIncluded = this.family.infants ? true : false;\r\n    this.schoolIncluded = this.family.schoolChildren > 0;\r\n    this.setOnlyInfantProducts();\r\n    this.setOnlySchoolProducts();\r\n    this.setSubType();\r\n    this.setSubTypePanelOpen();\r\n    this.setSuperType();\r\n    this.setProductTypes();\r\n    this.setTypeMaxAmount();\r\n    this.sortProductTypesByName();\r\n    this.typeTrackerService.getTypeTrackers().subscribe(typeTrackers => {\r\n      console.log(typeTrackers);\r\n      // this.setTypeTracker(typeTrackers);\r\n    });\r\n  }\r\n\r\n  closePanel() {\r\n    this.panelOpenState = false;\r\n  }\r\n\r\n  setAtTypeMaxAmount() {\r\n    this.typeTracker ? this.atTypeMaxAmount = this.typeTracker.atTypeMaxAmount : this.atTypeMaxAmount = false;\r\n  }\r\n\r\n  setOnlyInfantProducts() {\r\n    let counter = 0;\r\n    this.type.products.forEach(product => {\r\n      if (product.infant) {\r\n        counter ++;\r\n      }\r\n    });\r\n    this.onlyInfantProducts = counter === this.type.products.length;\r\n  }\r\n\r\n  setOnlySchoolProducts() {\r\n    let counter = 0;\r\n    this.type.products.forEach(product => {\r\n      if (product.school) {\r\n        counter ++;\r\n      }\r\n    });\r\n    this.onlySchoolProducts = counter === this.type.products.length;\r\n  }\r\n\r\n  setProductTypes() {\r\n    this.type.products.forEach(product => {\r\n      let familyValue: number;\r\n      product.school ? familyValue = this.family.schoolChildren : familyValue = this.family.familySize;\r\n      if (product.prodSizeAmount) {\r\n        product.prodSizeAmount.forEach(mapping => {\r\n          if (mapping.minFamSize <= familyValue\r\n            && familyValue <= mapping.maxFamSize) {\r\n              this.products.push(product);\r\n          }\r\n        });\r\n      } else {\r\n        this.products.push(product);\r\n      }\r\n    });\r\n    if (this.subTypes) {\r\n      this.subTypes = this.subTypes.filter(subType => subType.superTypeId === this.type._id);\r\n    }\r\n    this.subTypes ? this.productTypes = [...this.products, ...this.subTypes] : this.productTypes = this.products;\r\n  }\r\n\r\n  setSubType() {\r\n    this.subType = this.type.superTypeId ? true : false;\r\n  }\r\n\r\n  setSubTypePanelOpen() {\r\n    this.subType ? this.panelOpenState = true : this.panelOpenState = false;\r\n  }\r\n\r\n  setSuperType() {\r\n    if (this.subTypes) {\r\n      this.superType = {superTypeId: this.type._id, superTypeName: this.type.typeName};\r\n    }\r\n  }\r\n\r\n  setTypeMaxAmount() {\r\n    this.type.products.forEach(product => {\r\n      let familyValue: number;\r\n      product.school ? familyValue = this.family.schoolChildren : familyValue = this.family.familySize;\r\n      if (this.type.typeSizeAmount) {\r\n        this.type.typeSizeAmount.forEach(mapping => {\r\n          if (mapping.minFamSize <= familyValue && familyValue <= mapping.maxFamSize) {\r\n              this.typeMaxAmount = mapping.maxAmount;\r\n            }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // setTypeTracker(typeTrackers: TypeTracker[]) {\r\n  //   if (this.type.typeSizeAmount) {\r\n  //     this.typeTracker ?\r\n  //       this.typeTracker = typeTrackers.find(typeTracker => typeTracker._id === this.type._id) :\r\n  //       this.typeTracker = {_id: this.type._id, atTypeMaxAmount: false, typeAmountInCart: 0};\r\n  //     typeTrackers.some(typeTracker => typeTracker._id === this.type._id) ?\r\n  //       this.typeTracker = typeTrackers.find(typeTracker => typeTracker._id === this.type._id) :\r\n  //       this.typeTracker = {_id: this.type._id, atTypeMaxAmount: false, typeAmountInCart: 0};\r\n  //   }\r\n  //   console.log(this.typeTracker);\r\n  // }\r\n\r\n  sortProductTypesByName() {\r\n    this.productTypes.sort((before, after) => {\r\n      return before.typeName ?\r\n        before.typeName > after.productName || before.productName > before.typeName\r\n        || before.typeName > after.typeName ? 1 : -1\r\n      :\r\n        before.productName > after.productName ? 1 : -1;\r\n    });\r\n  }\r\n\r\n  updateTypeAmount(addOne: boolean) {\r\n    if (this.typeTracker) {\r\n      if (!this.typeTracker.atTypeMaxAmount && addOne) {\r\n        this.typeTracker.typeAmountInCart++;\r\n      }\r\n      if (this.typeTracker.typeAmountInCart !== 0 && !addOne) {\r\n        this.typeTracker.typeAmountInCart--;\r\n      }\r\n      this.typeTracker.atTypeMaxAmount = this.typeTracker.typeAmountInCart === this.typeMaxAmount;\r\n      this.atTypeMaxAmount = this.typeTracker.atTypeMaxAmount;\r\n      this.typeTrackerService.updateTypeTrackers(this.typeTracker);\r\n    }\r\n  }\r\n}\r\n","<ng-container *ngIf=\"(!onlySchoolProducts || schoolIncluded) && (!onlyInfantProducts || infantsIncluded)\"> \r\n  <mat-expansion-panel (opened) =\"panelOpenState = true\" (closed)=\"panelOpenState = false\" [expanded]=\"panelOpenState\" [ngClass]=\"{'sub-type' : subType}\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        {{type.typeName}}\r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n        {{panelOpenState ? 'close' : 'open'}}\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <mat-card *ngIf=\"subType\" class=\"max-amount\" [ngClass]=\"{'sub-type-max-amount' : subType}\">\r\n      {{'You are allowed ' + typeMaxAmount + ' items from the below products.'}}\r\n      <br>\r\n      {{typeTracker.typeAmountInCart === 0 ? 'None in Cart':\r\n          typeTracker.typeAmountInCart > 1 ? \r\n          typeTracker.typeAmountInCart + ' ' + type.typeName + ' Products in Cart' : \r\n          typeTracker.typeAmountInCart + ' ' + type.typeName + ' Product in Cart'\r\n      }}\r\n    </mat-card>\r\n    <ng-container *ngFor=\"let productType of productTypes\">\r\n      <ng-container *ngIf=\"productType.productName\">\r\n        <app-product (addOneTypeAmount)=\"updateTypeAmount($event)\" [atTypeMaxAmount]=\"atTypeMaxAmount\" \r\n        [family]=\"family\" [product]=\"productType\" [superType]=\"superType\" [type]=\"type\">\r\n        </app-product>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"productType.typeName\">    \r\n        <app-product-type [family]=\"family\" [superType]=\"superType\" [type]=\"productType\"></app-product-type>\r\n      </ng-container>  \r\n    </ng-container>       \r\n    <mat-action-row (click)=\"closePanel()\"></mat-action-row>\r\n  </mat-expansion-panel>\r\n</ng-container>   \r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport {STEPPER_GLOBAL_OPTIONS} from '@angular/cdk/stepper';\r\n\r\n@Component({\r\n  selector: 'app-questions-modal',\r\n  templateUrl: './questions-modal.component.html',\r\n  styleUrls: ['./questions-modal.component.css'],\r\n  providers: [{\r\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: {displayDefaultIndicatorType: false}\r\n  }]\r\n})\r\nexport class QuestionsModalComponent implements OnInit {\r\n  buttonContent: string;\r\n  routesButtonMap = new Map([\r\n    ['family', 'Return to Form'],\r\n    ['shop', 'Return to Shopping'],\r\n    ['order', 'Return to Order Overview']\r\n  ]);\r\n\r\n  constructor(public dialogRef: MatDialogRef<QuestionsModalComponent>,\r\n              @Inject (MAT_DIALOG_DATA) public currentPath: string) { }\r\n\r\n  ngOnInit() {\r\n    this.setButtonContent();\r\n  }\r\n\r\n  onCloseClick() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  setButtonContent() {\r\n    this.routesButtonMap.forEach((buttonContent, route) => {\r\n      if (route === this.currentPath) {\r\n        this.buttonContent = buttonContent;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"questions\">\r\n  <ng-container [ngSwitch]=\"currentPath\">\r\n\r\n    <ng-container *ngSwitchCase=\"'family'\">\r\n      <mat-toolbar>Form Help</mat-toolbar>\r\n      <mat-horizontal-stepper labelPosition=\"bottom\">\r\n        <mat-step label=\"Contact\" state=\"contact\" completed=\"false\">\r\n          <mat-card>[Contact Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <mat-step label=\"Household\" state=\"household\" completed=\"false\">\r\n          <mat-card>[Household Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <mat-step label=\"Pick Up\" state=\"pick-up\" completed=\"false\">\r\n          <mat-card>[Pick Up Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <ng-template matStepperIcon=\"contact\">\r\n          <mat-icon>person</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"household\">\r\n          <mat-icon>house</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"pick-up\">\r\n          <mat-icon>directions_car</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"edit\">\r\n          <mat-icon>help</mat-icon>\r\n        </ng-template>\r\n      </mat-horizontal-stepper>\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'shop'\">\r\n      <mat-toolbar>Shop Help</mat-toolbar>\r\n      <mat-horizontal-stepper labelPosition=\"bottom\">\r\n        <mat-step label=\"Choice Points\" state=\"choice-points\" completed=\"false\">\r\n          <mat-card>[Choice Points Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <mat-step label=\"Limits\" state=\"limits\" completed=\"false\">\r\n          <mat-card>[Limits Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <mat-step label=\"Shop Options\" state=\"shop-options\" completed=\"false\">\r\n          <mat-card>[Shop Options Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <ng-template matStepperIcon=\"choice-points\">\r\n          <mat-icon>attach_money</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"limits\">\r\n          <mat-icon>add</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"shop-options\">\r\n          <mat-icon>storefront</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"edit\">\r\n          <mat-icon>help</mat-icon>\r\n        </ng-template>\r\n      </mat-horizontal-stepper>\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'order'\">\r\n      <mat-toolbar>Order Help</mat-toolbar>\r\n      <mat-horizontal-stepper labelPosition=\"bottom\">\r\n        <mat-step label=\"Updates\" state=\"updates\" completed=\"false\">\r\n          <mat-card>[Update Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <mat-step label=\"Your Cart\" state=\"cart\" completed=\"false\">\r\n          <mat-card>[Cart Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <mat-step label=\"Submitting\" state=\"submit\" completed=\"false\">\r\n          <mat-card>[Submit Help Goes Here]</mat-card>\r\n        </mat-step>\r\n        <ng-template matStepperIcon=\"updates\">\r\n          <mat-icon>create</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"cart\">\r\n          <mat-icon>shopping_cart</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"submit\">\r\n          <mat-icon>send</mat-icon>\r\n        </ng-template>\r\n        <ng-template matStepperIcon=\"edit\">\r\n          <mat-icon>help</mat-icon>\r\n        </ng-template>\r\n      </mat-horizontal-stepper>\r\n    </ng-container>\r\n    <div>\r\n      <button id=\"return\" mat-raised-button (click)=\"onCloseClick()\"cdkFocusInitial>{{buttonContent}}</button>\r\n    </div>    \r\n  </ng-container>    \r\n</div>\r\n","import { Component, OnInit, HostListener, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Family } from '../../models/family.model';\r\nimport { FamilyService} from '../../services/family.service';\r\nimport { ShopService } from 'src/app/services/shop.service';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { forkJoin, Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { CartItemsByType } from 'src/app/models/cart-items-by-type.model';\r\n\r\n@Component({\r\n  selector: 'app-shop',\r\n  templateUrl: './shop.component.html',\r\n  styleUrls: ['./shop.component.css']\r\n})\r\nexport class ShopComponent implements OnInit, OnDestroy {\r\n  allSubTypes: Type[] = [];\r\n  cart: CartItemsByType[];\r\n  currentPoints: number;\r\n  family: Family;\r\n  logOutClicked: boolean;\r\n  limitedTypes: Type[] = [];\r\n  nonLimitedTypes: Type[] = [];\r\n  private subscription = new Subscription();\r\n  types: Type[] = [];\r\n\r\n  constructor(private authService: AuthService, private cartService: CartService, private familyService: FamilyService,\r\n              private shopService: ShopService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(forkJoin(\r\n      this.authService.getLogOutClicked().pipe(\r\n        tap((logOutClicked: boolean) => this.logOutClicked = logOutClicked)\r\n      ),\r\n      this.cartService.getCart().pipe(\r\n        tap((cart: CartItemsByType[]) => this.cart = cart)\r\n      ),\r\n      this.familyService.getFamily().pipe(\r\n        tap((family: Family) => this.family = family)\r\n      ),\r\n      this.shopService.getShop().pipe(\r\n        tap((types: Type[]) => {\r\n          this.types = types;\r\n          this.setTypes();\r\n          this.sortTypesByName();\r\n        }))\r\n      ).subscribe()\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onReviewOrderClick() {\r\n    this.router.navigate([`/order`]);\r\n  }\r\n\r\n  private setTypes() {\r\n    this.types.forEach((type: Type) => {\r\n      if (!type.superTypeId && type.typeSizeAmount) {\r\n        this.limitedTypes.push(type);\r\n      }\r\n      if (!type.superTypeId && !type.typeSizeAmount) {\r\n        this.nonLimitedTypes.push(type);\r\n      }\r\n      if (type.superTypeId) {\r\n        this.allSubTypes.push(type);\r\n      }\r\n    });\r\n  }\r\n\r\n  // private setTypes(types: Type[]) {\r\n  //   types.forEach((type) => {\r\n  //     type.superTypeId ? this.subTypes.push(type) : this.types.push(type);\r\n  //   });\r\n  // }\r\n\r\n  private sortTypesByName() {\r\n    this.types.sort((before, after) => before.typeName.trim().toLowerCase() > after.typeName.trim().toLowerCase() ? 1 : -1);\r\n  }\r\n\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  unloadNotification($event: any) {\r\n    if (!this.logOutClicked) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"top-grid\">                \r\n    <main id=\"shop\">\r\n        <mat-toolbar>Welcome to our Shop</mat-toolbar>\r\n        <cdk-virtual-scroll-viewport  itemSize=\"\">\r\n            <ng-container *ngFor=\"let type of types\">\r\n                <app-type *ngIf=\"nonLimitedTypes.includes(type)\" \r\n                    [allSubTypes]=\"allSubTypes\" [cart]=\"cart\" [family]=\"family\" [type]=\"type\">\r\n                </app-type>\r\n                <app-limited-type *ngIf=\"limitedTypes.includes(type)\" \r\n                    [allSubTypes]=\"allSubTypes\" [cart]=\"cart\" [family]=\"family\" [type]=\"type\">\r\n                </app-limited-type>\r\n                <!-- <app-product-type [family]=\"family\" [subTypes]=\"subTypes\" [type]=\"type\"></app-product-type> -->\r\n            </ng-container>\r\n        </cdk-virtual-scroll-viewport>     \r\n    </main>\r\n    <aside class=\"aside-container\">\r\n        <mat-toolbar>Ready to Review?</mat-toolbar>\r\n        <div id=\"review\">\r\n            <button mat-raised-button  (click)=\"onReviewOrderClick()\">Review Order</button>\r\n        </div>\r\n    </aside>  \r\n</div>\r\n\r\n","import { Component, OnInit, OnDestroy, Renderer2, ViewChild, ElementRef } from '@angular/core';\nimport { TypeLimitedProductComponent } from '../type-limited-product/type-limited-product.component';\nimport { CartService } from 'src/app/services/cart.service';\nimport { PointService } from 'src/app/services/point.service';\nimport { TypeTrackerService } from 'src/app/services/type-tracker.service';\nimport { combineLatest } from 'rxjs';\nimport { TypeTracker } from 'src/app/models/type-tracker.model';\n\n@Component({\n  selector: 'app-sub-type-product',\n  templateUrl: './sub-type-product.component.html',\n  styleUrls: ['./sub-type-product.component.css']\n})\nexport class SubTypeProductComponent extends TypeLimitedProductComponent implements OnInit, OnDestroy {\n  @ViewChild('subTypeExpansion') subTypeExpansion: ElementRef;\n  panelOpenState = false;\n  typeAmountInCart: number;\n  typeId: string;\n  typeLimit: number;\n  typeName: string;\n  typeSizeAmount: any;\n  typeTracker: TypeTracker;\n\n  constructor(protected cartService: CartService, protected pointService: PointService, private renderer: Renderer2,\n              protected typeTrackerService: TypeTrackerService) {\n    super(cartService, pointService, typeTrackerService);\n    // this.renderer.listen('window', 'click', (event: Event) => {\n    //   console.log(event.target, this.subTypeExpansion.nativeElement);\n    //   if (event.target  === this.subTypeExpansion.nativeElement) {\n    //     this.panelOpenState = true;\n    //   } else {\n    //     this.panelOpenState = false;\n    //   }\n    // });\n  }\n\n  ngOnInit() {\n    this.typeId = this.product.typeId;\n    this.typeName = this.product.typename;\n    this.typeSizeAmount = this.product.typeSizeAmount;\n    this.setLimit();\n    this.setPoints();\n    this.setTypeLimit();\n    this.inCart = this.isProductInCart();\n    this.typeTrackerService.addTypeTracker(this.typeId);\n    this.subscription.add(\n      combineLatest(\n      this.pointService.getCurrentPoints(),\n      this.typeTrackerService.getTypeTrackers()\n    ).subscribe(([currentPoints, typeTrackers]) => {\n      this.currentPoints = currentPoints;\n      this.typeTracker = typeTrackers.find((typeTracker: TypeTracker) => typeTracker.typeId === this.typeId);\n      this.atTypeLimit = this.typeTracker.atTypeMaxAmount;\n      this.typeAmountInCart = this.typeTracker.typeAmountInCart;\n      this.updateTypeInCartAndBtn();\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  setTypeLimit() {\n    const familyValue = this.family.familySize;\n    this.typeSizeAmount.forEach(mapping => {\n      if (mapping.minFamSize <= familyValue && familyValue <= mapping.maxFamSize) {\n        this.typeLimit = mapping.maxAmount;\n      }\n    });\n  }\n}\n","<ng-container >\n    <mat-expansion-panel (clickOutSide)=\"panelOpenState = false\" (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\" [expanded]=\"panelOpenState\">\n        <mat-expansion-panel-header>{{typeName}}</mat-expansion-panel-header>\n        <div class=\"info-container\">\n            <div class=\"icon-container\">\n                <mat-icon class=\"icon-badge\" [matBadge]=\"typeLimit\">add_box</mat-icon>\n                <div>Limit</div>\n            </div>\n            <div class=\"icon-container\">\n                <mat-icon class=\"icon-badge\" [matBadge]=\"typeAmountInCart\">shopping_cart</mat-icon>\n                <div>In Cart</div>\n            </div>\n        </div>    \n    </mat-expansion-panel>\n</ng-container>\n\n <mat-card>\n    <div class=\"product-name\">{{product.productName}}</div>\n    <div class=icon-button-container>\n        <div>\n            <div class=\"info-container\">\n\n                <div *ngIf=\"limit\" class=\"icon-container\">\n                    <mat-icon class=\"icon-badge\" [matBadge]=\"limit\">add_box</mat-icon>\n                    <div>Limit</div>\n                </div>\n                <div *ngIf=\"points\" class=\"icon-container\">\n                    <mat-icon class=\"icon-badge\" [matBadge]=\"points\">attach_money</mat-icon>\n                    <div>Points</div>\n                </div>\n            </div>\n        </div>\n        <div></div>\n        <div class=amount-button-container>\n            <div class=\"icon-container\">\n                <mat-icon class=\"badge-cart\" [matBadge]=\"amountInCart\">shopping_cart</mat-icon>\n                <div>Amount in Cart</div>\n            </div>\n            <span class=\"button-container\">\n                <button mat-raised-button (click)=\"subtractOneTypeLimitProduct()\" [disabled]=\"!inCart\">-</button>\n                <button mat-raised-button (click)=\"addOneTypeLimitProduct()\" [disabled]=\"addBtnDisabled\">+</button>\n            </span>\n        </div>\n    </div>\n</mat-card>   \n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-submit-modal',\r\n  templateUrl: './submit-modal.component.html',\r\n  styleUrls: ['./submit-modal.component.css']\r\n})\r\nexport class SubmitModalComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService, public dialogRef: MatDialogRef<SubmitModalComponent>,\r\n              @Inject (MAT_DIALOG_DATA) public data: any, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","<mat-card id=\"top-container\">\r\n  <mat-toolbar id=\"success\">\r\n    <mat-icon class=\"smile\">sentiment_satisfied_alt</mat-icon>\r\n    <span>Success</span> \r\n  </mat-toolbar>\r\n  <mat-card class=\"location-message\" *ngIf=\"!data.family.referral\">\r\n    {{'Your order will be ready for pick on ' + data.pickUpDate + ' at the Broad Street Food Pantry.'}}\r\n  </mat-card>\r\n  <mat-card class=\"location-message\" *ngIf=\"data.family.referral\">\r\n    {{'Your order will be delivered on ' + data.pickUpDate + ' by CELC.'}}\r\n  </mat-card>\r\n  <div id=\"buttons\">\r\n    <button mat-raised-button (click)=\"authService.logout()\">Log Out</button>\r\n  </div>\r\n</mat-card>  \r\n\r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { LimitedProductComponent } from '../limited-product/limited-product.component';\nimport { CartService } from 'src/app/services/cart.service';\nimport { PointService } from 'src/app/services/point.service';\nimport { TypeTrackerService } from 'src/app/services/type-tracker.service';\nimport { TypeTracker } from 'src/app/models/type-tracker.model';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n  selector: 'app-type-limited-product',\n  templateUrl: './type-limited-product.component.html',\n  styleUrls: ['./type-limited-product.component.css']\n})\nexport class TypeLimitedProductComponent extends LimitedProductComponent implements OnInit, OnDestroy {\n  atTypeLimit: boolean;\n  @Input() typeLimit: number;\n  typeTracker: TypeTracker;\n\n  constructor(protected cartService: CartService, protected pointService: PointService, protected typeTrackerService: TypeTrackerService) {\n    super(cartService, pointService);\n  }\n\n  ngOnInit() {\n    this.setLimit();\n    this.setPoints();\n    this.inCart = this.isProductInCart();\n    this.subscription.add(\n      combineLatest(\n      this.pointService.getCurrentPoints(),\n      this.typeTrackerService.getTypeTrackers()\n    ).subscribe(([currentPoints, typeTrackers]) => {\n      this.currentPoints = currentPoints;\n      console.log(typeTrackers);\n      this.typeTracker = typeTrackers.find((typeTracker: TypeTracker) => typeTracker.typeId === this.type._id);\n      this.atTypeLimit = this.typeTracker.atTypeMaxAmount;\n      this.updateTypeInCartAndBtn();\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  addOneTypeLimitProduct() {\n    this.addOneProduct();\n    this.typeTracker.typeAmountInCart++;\n    this.typeTracker.atTypeMaxAmount = this.isAtTypeLimit();\n    this.typeTrackerService.updateTypeTrackers(this.typeTracker);\n  }\n\n  isAtTypeLimit() {\n    return this.typeTracker.typeAmountInCart === this.typeLimit;\n  }\n\n  subtractOneTypeLimitProduct() {\n    if (this.typeTracker.typeAmountInCart > 0) {\n      this.subtractOneProduct();\n      this.typeTracker.typeAmountInCart--;\n      this.typeTracker.atTypeMaxAmount = this.isAtTypeLimit();\n      this.typeTrackerService.updateTypeTrackers(this.typeTracker);\n    }\n  }\n\n  updateTypeInCartAndBtn() {\n    this.amountInCart = this.getAmountInCart();\n    this.addBtnDisabled = this.atTypeLimit || !this.isProductUnderLimit() || !this.hasEnoughPoints();\n  }\n\n}\n","\n<mat-card>\n    <div class=\"product-name\">{{product.productName}}</div>\n    <div class=icon-button-container>\n        <div>\n            <div class=\"info-container\">\n                <div *ngIf=\"limit\" class=\"icon-container\">\n                    <mat-icon class=\"icon-badge\" [matBadge]=\"limit\">add_box</mat-icon>\n                    <div>Limit</div>\n                </div>\n                <div *ngIf=\"points\" class=\"icon-container\">\n                    <mat-icon class=\"icon-badge\" [matBadge]=\"points\">attach_money</mat-icon>\n                    <div>Points</div>\n                </div>\n            </div>\n        </div>\n        <div></div>\n        <div class=amount-button-container>\n            <div class=\"icon-container\">\n                <mat-icon class=\"badge-cart\" [matBadge]=\"amountInCart\">shopping_cart</mat-icon>\n                <div>Amount in Cart</div>\n            </div>\n            <span class=\"button-container\">\n                <button mat-raised-button (click)=\"subtractOneTypeLimitProduct()\" [disabled]=\"!inCart\">-</button>\n                <button mat-raised-button (click)=\"addOneTypeLimitProduct()\" [disabled]=\"addBtnDisabled\">+</button>\n            </span>\n        </div> \n    </div>       \n</mat-card>   \n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Type } from 'src/app/models/type.model';\nimport { Family } from 'src/app/models/family.model';\nimport { Product } from 'src/app/models/product.model';\nimport { CartItemsByType } from 'src/app/models/cart-items-by-type.model';\nimport { PointService } from 'src/app/services/point.service';\nimport { Subscription } from 'rxjs';\nimport { TypeProduct } from 'src/app/models/type-product.model';\n\n@Component({\n  selector: 'app-type',\n  templateUrl: './type.component.html',\n  styleUrls: ['./type.component.css']\n})\nexport class TypeComponent implements OnInit, OnDestroy {\n  @Input() allSubTypes: Type[];\n  @Input() cart: CartItemsByType[];\n  currentPoints: number;\n  @Input() family: Family;\n  hasPoints: boolean;\n  infantsIncluded: boolean;\n  infantType: boolean;\n  loading = true;\n  panelOpenState = false;\n  products: TypeProduct[] = [];\n  schoolIncluded: boolean;\n  schoolType: boolean;\n  subscription: Subscription = new Subscription();\n  subTypes: Type[];\n  @Input() type: Type;\n\n  constructor(protected pointService: PointService) { }\n\n  ngOnInit() {\n    this.setProducts();\n    this.sortProductsByName();\n    this.setInfant();\n    this.setSchool();\n    this.setHasPoints();\n    this.subscription.add(\n      this.pointService.getCurrentPoints().subscribe((currentPoints: number) => {\n      this.currentPoints = currentPoints;\n    }));\n    this.loading = false;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  closePanel() {\n    this.panelOpenState = false;\n  }\n\n  setHasPoints() {\n    this.hasPoints = this.products.some((product: Product) => product.points);\n  }\n\n  setProductsForFamilySize(product: Product) {\n    let familyValue: number;\n    product.school ? familyValue = this.family.schoolChildren : familyValue = this.family.familySize;\n    if (product.prodSizeAmount) {\n      product.prodSizeAmount.forEach(mapping => {\n        if (mapping.minFamSize <= familyValue  && familyValue <= mapping.maxFamSize) {\n            this.products.push(product);\n        }\n      });\n    } else {\n      this.products.push(product);\n    }\n  }\n\n  setInfant() {\n    this.infantsIncluded = this.family.infants ? true : false;\n    this.infantType = !this.type.products.some((product: Product) => !product.infant);\n  }\n\n  setSchool() {\n    this.schoolIncluded = this.family.schoolChildren > 0;\n    this.schoolType = !this.type.products.some((product: Product) => !product.school);\n  }\n\n  setProducts() {\n    this.type.products.forEach((product: Product) => {\n      this.setProductsForFamilySize(product);\n    });\n    this.allSubTypes.forEach((subType: Type) => {\n      if (this.type._id === subType.superTypeId) {\n        subType.products.forEach((subTypeProduct: TypeProduct) => {\n          subTypeProduct.typeId = subType._id;\n          subTypeProduct.typename = subType.typeName;\n          subTypeProduct.typeSizeAmount = subType.typeSizeAmount;\n          this.setProductsForFamilySize(subTypeProduct);\n        });\n      }\n    });\n  }\n\n  sortProductsByName() {\n    this.products.sort(\n      (before, after) => before.productName.trim().toLowerCase() > after.productName.trim().toLowerCase() ? 1 : -1);\n  }\n}\n","<ng-container *ngIf=\"(!schoolType || schoolIncluded) && (!infantType || infantsIncluded)\"> \n  <mat-expansion-panel (opened) =\"panelOpenState = true\" (closed)=\"panelOpenState = false\" [expanded]=\"panelOpenState\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        {{type.typeName}}\n      </mat-panel-title>\n      <mat-panel-description>\n        {{panelOpenState ? 'close' : 'open'}}\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n    <mat-card *ngIf=\"hasPoints && panelOpenState\" class=\"icon-top-container\">\n      <div class=\"icon-sub-container\">\n        <div class=\"label-container\">\n          <div>{{currentPoints}}</div>\n          <div class=\"label\">\n            <span>Points Remaining</span>\n            <span class=\"icon-container\">\n              <mat-icon>attach_money</mat-icon>\n            </span>\n          </div>\n        </div>\n      </div>\n    </mat-card>\n    <div class=\"product-card-container\" *ngIf=\"panelOpenState\">\n        <div *ngFor=\"let product of products\" class=\"product-card\">\n          <app-limited-product *ngIf=\"!product.typeId\"\n          [cart]=\"cart\" [family]=\"family\" [product]=\"product\" [type]=\"type\">\n          </app-limited-product>\n          <app-sub-type-product *ngIf=\"product.typeId\"\n            [cart]=\"cart\" [family]=\"family\" [product]=\"product\" [type]=\"type\">\n          </app-sub-type-product>\n        </div>\n    </div>\n    <mat-action-row (click)=\"closePanel()\"></mat-action-row>\n  </mat-expansion-panel>\n</ng-container>  \n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { FamilyService } from 'src/app/services/family.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { PointService } from 'src/app/services/point.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { TypeTrackerService } from 'src/app/services/type-tracker.service';\r\nimport { Router } from '@angular/router';\r\nimport { FamilyComponent } from 'src/app/components/family/family.component';\r\nimport { PickUpDateService } from 'src/app/services/pick-up-date.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-update-modal',\r\n  templateUrl: './update-modal.component.html',\r\n  styleUrls: ['./update-modal.component.css']\r\n})\r\nexport class UpdateModalComponent extends FamilyComponent implements OnInit {\r\n  loading = true;\r\n  pickUpDate: string;\r\n\r\n  constructor(protected authService: AuthService, protected cartService: CartService, public dialogRef: MatDialogRef<UpdateModalComponent>,\r\n              protected familyService: FamilyService, @Inject (MAT_DIALOG_DATA) public data: any,\r\n              protected pickUpDateService: PickUpDateService, protected pointService: PointService, private snackBar: MatSnackBar,\r\n              protected router: Router, protected typeTrackerService: TypeTrackerService\r\n              ) {\r\n                super(authService, cartService, familyService, pickUpDateService, pointService, router, typeTrackerService);\r\n              }\r\n\r\n  ngOnInit() {\r\n    this.family = this.data.family;\r\n    this.pickUpDate = this.data.pickUpDate;\r\n    this.setContactModal();\r\n    this.setHouseHoldModal();\r\n    this.setPickUpModal();\r\n    this.setPickUpDateOptions(this.family.referral);\r\n    this.pickUpForm.get('pickUpDate').setValue(this.pickUpDate);\r\n    this.pointService.getPointsMapping().subscribe(pointsMapping => this.pointsMapping = pointsMapping);\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onUpdateContactClick() {\r\n    if (this.contactForm.valid) {\r\n      this.setContactInfo();\r\n      this.familyService.updateFamily(this.family);\r\n      this.snackBar.open('Contact Information Updated.', 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['green-snackbar', 'mat-raised-button']\r\n      });\r\n      this.dialogRef.close();\r\n    }\r\n  }\r\n\r\n  onUpdateHouseholdClick() {\r\n    if (this.householdForm.valid) {\r\n      this.setHouseholdInfo();\r\n      this.familyService.updateFamily(this.family);\r\n      this.initPoints(this.family.familySize);\r\n      this.cartService.resetCart();\r\n      this.typeTrackerService.resetTypeTrackers();\r\n      this.dialogRef.close();\r\n      this.snackBar.open('Household Information Updated and Cart Reset.', 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['green-snackbar']\r\n      });\r\n      this.router.navigate([`/shop`]);\r\n    }\r\n  }\r\n\r\n  onUpdatePickUpClick() {\r\n    if (this.pickUpForm.valid) {\r\n      this.setPickUpInfo();\r\n      this.familyService.updateFamily(this.family);\r\n      this.snackBar.open('Pick Up Information Updated.', 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['green-snackbar']\r\n      });\r\n      this.dialogRef.close();\r\n    }\r\n  }\r\n\r\n  setContactModal() {\r\n    this.contactForm = new FormGroup({\r\n      firstName: new FormControl(this.family.firstName, Validators.required),\r\n      lastName: new FormControl(this.family.lastName, Validators.required),\r\n      zipCode: new FormControl(this.family.zipCode, [Validators.required, Validators.pattern(/^[0-9]{5}$/)]),\r\n      phoneNumber: new FormControl(this.family.phoneNumber, [Validators.required,\r\n        Validators.pattern(/^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}$/)]),\r\n      emailAddress: new FormControl(this.family.emailAddress, Validators.email),\r\n    });\r\n  }\r\n\r\n  setHouseHoldModal() {\r\n    this.householdForm = new FormGroup({\r\n      familySize: new FormControl(this.family.familySize, Validators.required),\r\n      schoolChildren: new FormControl(this.family.schoolChildren, Validators.required),\r\n      infants: new FormControl(this.family.infants, Validators.required),\r\n    });\r\n  }\r\n\r\n  setPickUpModal() {\r\n    this.pickUpForm = new FormGroup({\r\n      referral: new FormControl(this.family.referral, Validators.required),\r\n      pickUpDate: new FormControl(this.pickUpDate, Validators.required)\r\n    });\r\n  }\r\n}\r\n","\r\n<form [formGroup]=\"contactForm\" *ngIf=\"data.modal === 'contact'\">\r\n  <mat-toolbar>Update Contact Information</mat-toolbar> \r\n  <div>\r\n    <mat-form-field>\r\n      <mat-label>First Name</mat-label>\r\n      <input matInput formControlName=\"firstName\" [value]=\"family.firstName\">\r\n      <mat-error *ngIf=\"contactForm.get('firstName').hasError('required')\">{{requiredError}}</mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div>\r\n    <mat-form-field>\r\n      <mat-label>Last Name</mat-label>\r\n      <input matInput formControlName=\"lastName\" [value]=\"family.lastName\">\r\n      <mat-error *ngIf=\"contactForm.get('lastName').hasError('required')\">{{requiredError}}</mat-error>\r\n    </mat-form-field>\r\n  </div>  \r\n  <div>\r\n    <mat-form-field>\r\n      <mat-label>Zip Code</mat-label>\r\n      <input matInput formControlName=\"zipCode\" [value]=\"family.zipCode\">\r\n      <mat-error *ngIf=\"contactForm.get('zipCode').hasError('pattern')\">Zipcode must be exactly five digits (example: 64359).</mat-error>\r\n      <mat-error *ngIf=\"contactForm.get('zipCode').hasError('required')\">{{requiredError}}</mat-error>\r\n    </mat-form-field>  \r\n  </div>\r\n  <div>\r\n    <mat-form-field> \r\n    <mat-label>Phone Number</mat-label>\r\n    <input matInput formControlName=\"phoneNumber\" [value]=\"family.phoneNumber\">\r\n    <mat-error *ngIf=\"contactForm.get('phoneNumber').hasError('pattern')\">Phone number must be in the following format: 555-555-5555.</mat-error>\r\n    <mat-error *ngIf=\"contactForm.get('phoneNumber').hasError('required')\">{{requiredError}}</mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <!-- <div>  \r\n    <mat-form-field>\r\n      <mat-label>Email Address (optional)</mat-label>\r\n      <input matInput formControlName=\"emailAddress\" [value]=\"family.emailAddress ? family.emailAddress : ''\">\r\n      <mat-error *ngIf=\"contactForm.get('emailAddress').hasError('email')\">Email address must include the @ symbol.</mat-error>\r\n    </mat-form-field>\r\n  </div> -->\r\n  <div class=\"button-div\">\r\n    <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n    <button mat-raised-button [disabled]=\"!contactForm.valid || !contactForm.dirty\" (click)=\"onUpdateContactClick()\">Update</button>\r\n  </div>\r\n</form>\r\n\r\n<form [formGroup]=\"householdForm\" *ngIf=\"data.modal === 'household'\">\r\n  <mat-toolbar>Update Household Information</mat-toolbar> \r\n  <div>\r\n    <div id=\"household-caution\">\r\n      <span>Since household information determines shopping options, an update will reset your cart and return you to the shopping screen.</span>\r\n    </div>\r\n    <br>  \r\n    <mat-form-field>\r\n      <mat-label>Family Size</mat-label>\r\n      <mat-select formControlName=\"familySize\" [(value)]=\"family.familySize\">\r\n        <mat-option [value]=1>1</mat-option>\r\n        <mat-option [value]=2>2</mat-option>\r\n        <mat-option [value]=3>3</mat-option>\r\n        <mat-option [value]=4>4</mat-option>\r\n        <mat-option [value]=5>5</mat-option>\r\n        <mat-option [value]=6>6</mat-option>\r\n        <mat-option [value]=7>7</mat-option>\r\n        <mat-option [value]=8>8</mat-option>\r\n        <mat-option [value]=9>9+</mat-option>\r\n      </mat-select>\r\n      <mat-error *ngIf=\"householdForm.get('familySize').hasError('required')\">{{requiredError}}</mat-error>  \r\n    </mat-form-field>\r\n  </div>\r\n  <div>  \r\n    <mat-form-field>\r\n      <mat-label>School Aged Children</mat-label>\r\n      <mat-select matInput formControlName=\"schoolChildren\" [value]=\"family.schoolChildren\">\r\n        <mat-option [value]=0>0</mat-option>\r\n        <mat-option [value]=1>1</mat-option>\r\n        <mat-option [value]=2>2</mat-option>\r\n        <mat-option [value]=3>3</mat-option>\r\n        <mat-option [value]=4>4</mat-option>\r\n        <mat-option [value]=5>5</mat-option>\r\n        <mat-option [value]=6>6+</mat-option>\r\n      </mat-select>\r\n      <mat-error *ngIf=\"householdForm.get('schoolChildren').hasError('required')\">{{requiredError}}</mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div>  \r\n    <mat-form-field>\r\n      <mat-label>Any Infants in the Family?</mat-label>\r\n      <mat-select matInput formControlName=\"infants\" [value]=\"family.infants\">\r\n        <mat-option [value]=true>Yes</mat-option>\r\n        <mat-option [value]=false>No</mat-option>\r\n      </mat-select>\r\n      <mat-error *ngIf=\"householdForm.get('infants').hasError('required')\">{{requiredError}}</mat-error>  \r\n    </mat-form-field>  \r\n  </div>\r\n  <div class=\"button-div\">\r\n    <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n    <button mat-raised-button [disabled]=\"!householdForm.valid || !householdForm.dirty\" (click)=\"onUpdateHouseholdClick()\">Update and Shop</button>\r\n  </div>  \r\n</form>\r\n\r\n<form [formGroup]=\"pickUpForm\" *ngIf=\"data.modal === 'pick-up'\">\r\n  <mat-toolbar>Update Pick Up Information</mat-toolbar> \r\n  <div>\r\n    <mat-form-field>\r\n      <mat-label>Were you referred by CELC?</mat-label>\r\n      <mat-select matInput formControlName=\"referral\" [value]=\"family.referral\" (selectionChange)=\"setPickUpDateOptions($event.value)\">\r\n        <mat-option [value]=true>Yes</mat-option>\r\n        <mat-option [value]=false>No</mat-option>\r\n      </mat-select>\r\n      <mat-error *ngIf=\"pickUpForm.get('referral').hasError('required')\">{{requiredError}}</mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div>\r\n    <mat-form-field>\r\n      <mat-label>Pick Up Dates:</mat-label>\r\n      <mat-select matInput formControlName=\"pickUpDate\" [value]=\"pickUpDate\">\r\n        <mat-option *ngFor=\"let pickUpDate of pickUpDateOptions\" [value]=\"pickUpDate\">{{pickUpDate}}</mat-option>\r\n      </mat-select>\r\n      <mat-error *ngIf=\"pickUpForm.get('pickUpDate').hasError('required')\">This field is required.</mat-error>  \r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"button-div\">\r\n    <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n    <button mat-raised-button [disabled]=\"!pickUpForm.valid || !pickUpForm.dirty\" (click)=\"onUpdatePickUpClick()\">Update</button>\r\n  </div>\r\n</form>  \r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean|UrlTree> | boolean {\r\n    return this.authService.isAuthenticated.pipe(\r\n      tap(loggedIn => {\r\n        if (!loggedIn) {\r\n          this.authService.login(state.url);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Location} from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, UrlTree, Router, CanDeactivate } from '@angular/router';\r\nimport { FamilyService } from '../services/family.service';\r\nimport { Family } from '../models/family.model';\r\nimport { ShopComponent } from '../components/shop/shop.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FamilyGuard implements CanActivate {\r\n  family: Family;\r\n\r\n  constructor(private familyService: FamilyService, private router: Router) {\r\n  }\r\n\r\n  canActivate(): boolean | UrlTree {\r\n    this.familyService.getFamily().subscribe((family: Family) => {\r\n      this.family = family;\r\n    });\r\n    return this.hasFamilyCheck() ?  true : this.router.parseUrl('/family');\r\n  }\r\n\r\n  private hasFamilyCheck() {\r\n    const familyValues = Object.values(this.family);\r\n    const nullValues = familyValues.filter(familyValue => familyValue === null);\r\n    return !nullValues.length;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Family } from '../models/family.model';\r\nimport { FamilyService } from '../services/family.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NoFamilyGuard implements CanActivate  {\r\n  family: Family;\r\n\r\n  constructor(private familyService: FamilyService) {\r\n  }\r\n\r\n  canActivate(): boolean {\r\n    this.familyService.getFamily().subscribe((family: Family) => {\r\n      this.family = family;\r\n    });\r\n    return this.hasNoFamilyCheck();\r\n  }\r\n\r\n  private hasNoFamilyCheck() {\r\n    const familyValues = Object.values(this.family);\r\n    const nullValues = familyValues.filter(familyValue => familyValue === null);\r\n    return nullValues.length ? true : false;\r\n  }\r\n}\r\n","export class Family {\r\n    firstName: string;\r\n    lastName: string;\r\n    zipCode: string;\r\n    emailAddress?: string;\r\n    phoneNumber: string;\r\n    familySize: number;\r\n    schoolChildren: number;\r\n    infants: boolean;\r\n    referral: boolean;\r\n}\r\n","import { Family } from './family.model';\r\nimport { CartItemsByType } from './cart-items-by-type.model';\r\n\r\nexport class Order {\r\n    family: Family;\r\n    cart: CartItemsByType[];\r\n    pickUpDate: string;\r\n    received: boolean;\r\n}\r\n","import { Type } from './type.model';\r\n\r\nexport class Product {\r\n    // tslint:disable-next-line:variable-name\r\n    _id: string;\r\n    productName: string;\r\n    prodSizeAmount?: {\r\n        minFamSize: number;\r\n        maxFamSize: number;\r\n        maxAmount: number;\r\n    } [];\r\n    points?: number;\r\n    school?: boolean;\r\n    infant?: boolean;\r\n}\r\n","import { Product } from './product.model';\r\n\r\nexport class TypeProduct extends Product {\r\n    typeId?: string;\r\n    typename?: string;\r\n    typeSizeAmount?: {\r\n        minFamSize: number;\r\n        maxFamSize: number;\r\n        maxAmount: number;\r\n    } [];\r\n}\r\n","import { Product } from './product.model';\r\n\r\nexport class Type {\r\n    // tslint:disable-next-line:variable-name\r\n    _id: string;\r\n    typeName: string;\r\n    typeSizeAmount?: {\r\n        minFamSize: number;\r\n        maxFamSize: number;\r\n        maxAmount: number;\r\n    } [];\r\n    products: Product[];\r\n    superTypeId?: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { from, of, Observable, BehaviorSubject, combineLatest, throwError } from 'rxjs';\r\nimport { tap, catchError, concatMap, shareReplay } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport authConfig from '../../../auth.config';\r\nimport Auth0Client from '@auth0/auth0-spa-js/dist/typings/Auth0Client';\r\nimport createAuth0Client from '@auth0/auth0-spa-js';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  loggedIn: boolean = null;\r\n\r\n  logOutClick = false;\r\n  private logOutClickSource = new BehaviorSubject(this.logOutClick);\r\n  currentLogOutClick = this.logOutClickSource.asObservable();\r\n\r\n  auth0Client = (from(createAuth0Client(authConfig)) as Observable<Auth0Client>).pipe(\r\n    shareReplay(1),\r\n    catchError(err => throwError(err))\r\n  );\r\n  isAuthenticated = this.auth0Client.pipe(\r\n    concatMap((client: Auth0Client) => from(client.isAuthenticated())),\r\n    tap(res => this.loggedIn = res)\r\n  );\r\n  handleRedirectCallback = this.auth0Client.pipe(\r\n    concatMap((client: Auth0Client) => from(client.handleRedirectCallback()))\r\n  );\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  getTokenSilently$(options?): Observable<string> {\r\n    return this.auth0Client.pipe(\r\n      concatMap((client: Auth0Client) => from(client.getTokenSilently(options)))\r\n    );\r\n  }\r\n\r\n  localAuthSetup() {\r\n    const checkAuth = this.isAuthenticated.pipe(\r\n      concatMap((loggedIn: boolean) => {\r\n        return of(loggedIn);\r\n      })\r\n    );\r\n    checkAuth.subscribe((response: { [key: string]: any } | boolean) => {\r\n      this.loggedIn = !!response;\r\n    });\r\n  }\r\n\r\n  login(redirectPath: string = `/family`) {\r\n    this.auth0Client.subscribe((client: Auth0Client) => {\r\n      client.loginWithRedirect({\r\n        redirect_uri: `${window.location.origin}/callback`,\r\n        appState: { target: redirectPath }\r\n      });\r\n    });\r\n  }\r\n\r\n  handleAuthCallback() {\r\n    let targetRoute: string;\r\n    const authComplete = this.handleRedirectCallback.pipe(\r\n      tap(cbRes => {\r\n        targetRoute = cbRes.appState && cbRes.appState.target ? cbRes.appState.target : '/';\r\n      }),\r\n      concatMap(() => {\r\n        return combineLatest(\r\n          this.isAuthenticated\r\n        );\r\n      })\r\n    );\r\n    authComplete.subscribe(([loggedIn]) => {\r\n      this.router.navigate([targetRoute]);\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.auth0Client.subscribe((client: Auth0Client) => {\r\n      client.logout({\r\n        client_id: authConfig.client_id,\r\n        returnTo: `${window.location.origin}`\r\n      });\r\n    });\r\n  }\r\n\r\n  getLogOutClicked(): Observable<boolean> {\r\n    return this.currentLogOutClick;\r\n  }\r\n\r\n  logOutClicked() {\r\n    this.logOutClickSource.next(true);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { CartItemsByType } from '../models/cart-items-by-type.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n\r\n  cart: CartItemsByType[] = [];\r\n\r\n  private cartSource = new BehaviorSubject(this.cart);\r\n  currentCart = this.cartSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  getCart(): Observable<CartItemsByType[]> {\r\n    return this.currentCart;\r\n  }\r\n\r\n  resetCart() {\r\n    const defaultCart: CartItemsByType[] = [];\r\n    this.cartSource.next(defaultCart);\r\n  }\r\n\r\n  updateCart(cart: CartItemsByType[]): void {\r\n    this.cartSource.next(cart);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Family } from '../models/family.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FamilyService {\r\n  family: Family = {\r\n    firstName: null,\r\n    lastName: null,\r\n    zipCode: null,\r\n    phoneNumber: null,\r\n    familySize: null,\r\n    schoolChildren: null,\r\n    infants: null,\r\n    referral: null,\r\n  };\r\n\r\n  private familySource = new BehaviorSubject(this.family);\r\n  currentFamily = this.familySource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  getFamily(): Observable<Family> {\r\n    return this.currentFamily;\r\n  }\r\n\r\n  resetFamily() {\r\n    const defaultFamily: Family = {\r\n      firstName: null,\r\n      lastName: null,\r\n      zipCode: null,\r\n      phoneNumber: null,\r\n      familySize: null,\r\n      schoolChildren: null,\r\n      infants: null,\r\n      referral: null,\r\n    };\r\n    this.familySource.next(defaultFamily);\r\n  }\r\n\r\n  updateFamily(family: Family) {\r\n    this.familySource.next(family);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { mergeMap, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return this.authService.getTokenSilently$().pipe(\r\n      mergeMap(token => {\r\n        const tokenReq = req.clone({\r\n          setHeaders: { Authorization: `Bearer ${token}` }\r\n        });\r\n        return next.handle(tokenReq);\r\n      }),\r\n      catchError(err => throwError(err))\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PickUpDateService {\r\n  daysOfTheWeek = new Map([\r\n    [0, 'Sunday'],\r\n    [1, 'Monday'],\r\n    [2, 'Tuesday'],\r\n    [3, 'Wednesday'],\r\n    [4, 'Thursday'],\r\n    [5, 'Friday'],\r\n    [6, 'Saturday']\r\n  ]);\r\n  now = new Date();\r\n  pickUpDateOptions: string[];\r\n\r\n  pickUpDate: string = null;\r\n  private pickUpDateSource = new BehaviorSubject(this.pickUpDate);\r\n  currentPickUpDate = this.pickUpDateSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  private formatDate(date: Date) {\r\n    const weekDay = this.daysOfTheWeek.get(date.getDay());\r\n    const day = date.getDate();\r\n    const month = date.getMonth() + 1;\r\n    const year = date.getFullYear();\r\n    return weekDay + ' (' + month + '/' + day + '/' + year + ')';\r\n  }\r\n\r\n  getPickUpDate(): Observable<string> {\r\n    return this.currentPickUpDate;\r\n  }\r\n\r\n  getPickUpDateOptions(referral: boolean) {\r\n    if (!referral) {\r\n      let secondThursday = this.findNthWeekdayOfMonth(4, 2, false);\r\n      let secondSaturday = this.findNthWeekdayOfMonth(6, 2, false);\r\n      if (this.now > secondThursday && this.now > secondSaturday) {\r\n        secondThursday = this.findNthWeekdayOfMonth(4, 2, true);\r\n        secondSaturday = this.findNthWeekdayOfMonth(6, 2, true);\r\n      }\r\n      if (this.now < secondThursday && this.now > secondSaturday) {\r\n        this.orderAndPush(secondThursday);\r\n      } else if (this.now > secondThursday && this.now < secondSaturday) {\r\n        this.orderAndPush(secondSaturday);\r\n      } else {\r\n        this.orderAndPush(secondThursday, secondSaturday);\r\n      }\r\n    } else {\r\n      let thirdWednesday = this.findNthWeekdayOfMonth(3, 3, false);\r\n      if (this.now > thirdWednesday) {\r\n        thirdWednesday = this.findNthWeekdayOfMonth(3, 3, true);\r\n      }\r\n      this.orderAndPush(thirdWednesday);\r\n    }\r\n    return this.pickUpDateOptions;\r\n  }\r\n\r\n  private findNthWeekdayOfMonth(weekday: number, n: number, nextMonth: boolean) {\r\n    let pickUpDate = new Date();\r\n    let firstOfTheMonth = new Date(this.now.getFullYear(), this.now.getMonth(), 1);\r\n    if (nextMonth) {\r\n      pickUpDate = new Date(this.now.getFullYear(), this.now.getMonth() + 1);\r\n      firstOfTheMonth = new Date(this.now.getFullYear(), this.now.getMonth() + 1, 1);\r\n    }\r\n    const add = (weekday - firstOfTheMonth.getDay() + 7) % 7 + (n - 1) * 7;\r\n    pickUpDate.setDate(1 + add);\r\n    return pickUpDate;\r\n  }\r\n\r\n  private orderAndPush(firstDay: Date, secondDay?: Date) {\r\n    this.pickUpDateOptions = [];\r\n    if (firstDay && secondDay) {\r\n      if (firstDay < secondDay) {\r\n        this.pickUpDateOptions.push(this.formatDate(firstDay));\r\n        this.pickUpDateOptions.push(this.formatDate(secondDay));\r\n      } else {\r\n        this.pickUpDateOptions.push(this.formatDate(secondDay));\r\n        this.pickUpDateOptions.push(this.formatDate(firstDay));\r\n      }\r\n    } else {\r\n      this.pickUpDateOptions.push(this.formatDate(firstDay));\r\n    }\r\n  }\r\n\r\n  resetPickUpDate() {\r\n    const defaultPickUpDate: string = null;\r\n    this.pickUpDateSource.next(defaultPickUpDate);\r\n  }\r\n\r\n  updatePickUpDate(pickUpDate: string) {\r\n    this.pickUpDateSource.next(pickUpDate);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PointService {\r\n  points = 0;\r\n  maxPoints = 0;\r\n  uri = 'http://localhost:4000';\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  private pointSource = new BehaviorSubject(this.points);\r\n  currentPoints = this.pointSource.asObservable();\r\n\r\n  getCurrentPoints(): Observable<number> {\r\n    return this.currentPoints;\r\n  }\r\n\r\n  getPointsMapping() {\r\n    return this.httpClient.get(`${this.uri}/points-mappings`).pipe(\r\n      map(result => result[0].pointsMapping)\r\n    );\r\n  }\r\n\r\n  setMaxPoints(maxPoints: number) {\r\n    this.maxPoints = maxPoints;\r\n  }\r\n\r\n  updatePoints(currentPoints: number) {\r\n    this.pointSource.next(currentPoints);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShopService {\r\n  uri = 'http://localhost:4000';\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getShop() {\r\n    return this.httpClient.get(`${this.uri}/shop`)\r\n    .pipe(\r\n      tap(result => console.log(result)),\r\n      map(result => result[0].shop)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { TypeTracker } from '../models/type-tracker.model';\r\nimport { Type } from '../models/type.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TypeTrackerService {\r\n\r\n  constructor() { }\r\n\r\n  typeTrackers: TypeTracker[] = [];\r\n\r\n  private typeTrackerSource = new BehaviorSubject(this.typeTrackers);\r\n  currentTypeTrackers = this.typeTrackerSource.asObservable();\r\n\r\n  addTypeTracker(typeIdToAdd: string) {\r\n    if (!this.typeTrackers.some((typeTracker: TypeTracker) => typeIdToAdd === typeTracker.typeId)) {\r\n      this.typeTrackers.push({typeId: typeIdToAdd, atTypeMaxAmount: false, typeAmountInCart: 0});\r\n      this.typeTrackerSource.next(this.typeTrackers);\r\n    }\r\n  }\r\n\r\n  getTypeTrackers(): Observable<Array<TypeTracker>> {\r\n    return this.currentTypeTrackers;\r\n  }\r\n\r\n  resetTypeTrackers() {\r\n    this.typeTrackers = [];\r\n    this.typeTrackerSource.next(this.typeTrackers);\r\n  }\r\n\r\n  updateTypeTrackers(componentTracker: TypeTracker) {\r\n    const index = this.typeTrackers.findIndex((typeTracker: TypeTracker) => typeTracker.typeId === componentTracker.typeId);\r\n    this.typeTrackers[index] = componentTracker;\r\n    this.typeTrackerSource.next(this.typeTrackers);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}